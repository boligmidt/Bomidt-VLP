{"version":3,"sources":["webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/index.js"],"names":["a","b","NaN","f","compare","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisect","value","min","max","n","values","i","valueof","Array","prototype","slice","map","start","stop","step","arguments","Math","ceil","range","e10","sqrt","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","number","p","i0","value0","sum"],"mappings":"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","file":"npm.d3-array.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n"],"sourceRoot":""}