{"version":3,"sources":["webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/zen-observable/lib/Observable.js"],"names":["module","exports","Observable","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","hasSymbols","Symbol","hasSymbol","name","Boolean","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","obj","getSpecies","ctor","constructor","undefined","isObservable","x","hostReportError","e","log","setTimeout","enqueue","fn","Promise","resolve","then","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","call","closeSubscription","_observer","_queue","_state","notifySubscription","type","observer","m","onNotify","queue","flushSubscription","push","Subscription","subscriber","this","subscriptionObserver","SubscriptionObserver","error","get","_subscription","_subscriber","next","arguments","complete","_this","reject","subscribe","done","_this2","_this3","_this4","C","hasSeed","hasValue","seed","acc","first","_this5","_len","sources","Array","_key","index","startNext","v","from","_this6","subscriptions","outer","inner","indexOf","splice","completeIfDone","closed","forEach","s","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","item","err","return","isArray","_len2","items","_key2","symbol"],"mappings":"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","file":"npm.zen-observable.js","sourcesContent":["module.exports = require('./lib/Observable.js').Observable;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species');\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, SymbolObservable);\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}"],"sourceRoot":""}