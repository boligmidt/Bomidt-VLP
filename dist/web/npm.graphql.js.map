{"version":3,"sources":["webpack:///./node_modules/graphql/jsutils/inspect.mjs","webpack:///./node_modules/graphql/language/blockString.mjs","webpack:///./node_modules/graphql/language/visitor.mjs","webpack:///./node_modules/graphql/language/printer.mjs","webpack:///./node_modules/graphql/jsutils/devAssert.mjs","webpack:///./node_modules/graphql/jsutils/defineToJSON.mjs","webpack:///./node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/language/printLocation.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/language/kinds.mjs","webpack:///./node_modules/graphql/language/source.mjs","webpack:///./node_modules/graphql/jsutils/defineToStringTag.mjs","webpack:///./node_modules/graphql/language/tokenKind.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/parser.mjs","webpack:///./node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","value","formatValue","seenValues","JSON","stringify","name","concat","previouslySeenValues","indexOf","customInspectFn","object","String","getCustomFn","undefined","customValue","call","Array","isArray","array","length","len","Math","min","remaining","items","i","push","join","formatArray","keys","Object","tag","toString","replace","getObjectTag","map","key","formatObject","formatObjectValue","dedentBlockStringValue","rawString","lines","split","commonIndent","line","indent","leadingWhitespace","getBlockStringIndentation","slice","isBlank","shift","pop","str","printBlockString","indentation","arguments","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","printAsMultipleLines","result","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","freeze","visit","root","visitor","visitorKeys","stack","inArray","index","edits","node","parent","path","ancestors","newRoot","isLeaving","isEdited","clone","_i2","_Object$keys2","k","editOffset","ii","editKey","editValue","splice","prev","isNode","Error","visitFn","getVisitFn","kind","maybeNode","Boolean","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","print","ast","printDocASTReducer","definitions","op","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","_ref","variable","type","defaultValue","_ref2","block","selections","_ref3","alias","args","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","values","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","operationTypes","_ref21","addDescription","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","separator","filter","x","start","maybeString","end","isMultiline","string","some","devAssert","condition","message","defineToJSON","classObject","fn","toJSON","nodejsCustomInspectSymbol","getLocation","source","position","match","lineRegexp","column","exec","body","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","sublineIndex","floor","sublineColumnNum","sublines","printPrefixedLines","subline","existingLines","padLen","max","apply","prefix","GraphQLError","nodes","positions","originalError","extensions","_nodes","_source","loc","_locations","_positions","reduce","list","pos","_extensions","originalExtensions","defineProperties","this","enumerable","writable","defineProperty","configurable","captureStackTrace","syntaxError","create","error","output","_error$nodes2","_i4","_error$locations2","printError","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","toStringTag","get","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","next","readToken","Tok","printCharCode","code","isNaN","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","a","b","c","d","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parse","options","parseDocument","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","Parser","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","expectOptionalToken","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","_this","any","_this2","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseDirectiveLocations","parseDirectiveLocation","startToken","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","endToken","for"],"mappings":"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","file":"npm.graphql.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n} // @internal\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import inspect from '../jsutils/inspect';\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + inspect(node));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from './visitor';\nimport { printBlockString } from './blockString';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);\n","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n// @internal\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n","var nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n"],"sourceRoot":""}