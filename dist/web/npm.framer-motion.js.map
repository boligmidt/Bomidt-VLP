{"version":3,"sources":["webpack:///./node_modules/framer-motion/dist/framer-motion.es.js"],"names":["isFloat","value","isNaN","parseFloat","MotionValue","init","_a","_this","this","_b","transformer","parent","timeDelta","lastUpdated","canTrackVelocity","updateAndNotify","v","render","prev","current","updateSubscribers","forEach","notifySubscriber","children","setChild","renderSubscribers","delta","timestamp","postRender","scheduleVelocityCheck","subscriber","velocityCheck","child","set","prototype","addChild","config","Set","add","removeChild","delete","subscribeTo","subscriptions","subscription","updateSubscriber","onChange","onRenderRequest","attach","passiveEffect","get","getVelocity","start","animation","stop","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","clear","motionValue","opts","useConstant","ref","isMotionValue","updateStyler","onRead","onRender","state","onUpdate","MotionValuesMap","hasMounted","values","Map","unsubscribers","has","key","bindValueToOutput","defaultValue","undefined","callback","unsubscribeOnRender","output","unsubscribeOnChange","setOnUpdate","setTransformTemplate","transformTemplate","updateTransformTemplate","getTransformTemplate","mount","unmount","_value","unsubscribe","specialMotionValueProps","useMotionValues","props","motionValues","map","session","syncRenderSession","isOpen","open","flush","styler","push","isRefObject","hasOwnProperty","resolver","MountRef","isStatic","externalRef","Element","domStyler","preparseOutput","enableHardwareAcceleration","internalRef","mutableExternal_1","useExternalRef","resolveCurrent","resolvedValues","transformOriginProps","isTransformOriginProp","buildStyleAttr","styleProp","motionValueStyles","transform","useMotionStyles","transformValues","style","prevMotionStyles","thisStyle","isKeyframesTarget","Array","isArray","resolveFinalValueInKeyframes","length","dimensionTypes","test","parse","valueTypes","concat","testValueType","type","getDimensionValueType","find","getValueType","underDampedSpring","stiffness","damping","restDelta","restSpeed","overDampedSpring","to","linearTween","ease","duration","keyframes","defaultTransitions","x","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","color","default","just","update","complete","easingDefinitionToFunction","definition","x1","y1","x2","y2","isEasingArray","isAnimatable","startsWith","secondsToMilliseconds","seconds","transitions","tween","spring","inertia","transitionOptionParser","from","velocity","slice","easings","getTransitionDefinition","transitionDefinition","delay","when","delayChildren","staggerChildren","staggerDirection","transition","Object","keys","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","valueTransitionDefinition","getAnimation","target","origin","isOriginAnimatable","isTargetAnimatable","actionFactory","preprocessOptions","repeatDelay","startAnimation","delay$1","activeAnimation","animationFactory","valueDelay","options","animate","ValueAnimationControls","readValueFromSource","makeTargetAnimatable","variants","baseTarget","overrides","resolvedOverrides","activeOverrides","hasValue","setProps","setVariants","setDefaultTransition","defaultTransition","setValues","_c","_d","isActive","priority","transitionEnd","targetValue","checkForNewValues","newValueKeys","filter","numNewValues","i","getAnimatableNone","resolveVariant","variant","custom","getHighestPriority","size","Math","max","apply","setOverride","overrideIndex","startOverride","override","clearOverride","highest","resetIsAnimating","overrideTarget","remainingValues","onStart","onComplete","applyVariantLabels","variantLabelList","reverse","animateVariantLabels","animateVariant","animationDefinition","transitionOverride","_e","animatable","animations","valueTarget","allAnimations","all","variantLabels","label","variantLabel","getAnimations","getChildrenAnimations","animateChildren","last","first","maxStaggerDuration","generateStaggerDuration","childControls","onAnimationStart","onAnimationComplete","checkOverrideIsAnimating","numOverrides","resolvedOverride","controls","resetChildren","AnimationControls","pendingAnimations","componentControls","subscribe","animations_1","MotionContext","static","isVariantLabel","isAnimationControls","useMotionContext","parentContext","initialState","initial","whileTap","whileHover","exitProps","times","shouldPropagateControls","targetInitial","targetAnimate","initialDependency","animateDependency","context","initialToApply","Infinity","useValueAnimationControls","subscribeToParentControls","parentControls","isExiting","unmountProps","Point","checkShouldInheritVariant","inherit","createMotionComponent","getValueControlsConfig","loadFunctionalityComponents","renderComponent","shouldInheritVariant","functionality","renderedComponent","Provider","svgElements","subtract","a","b","relativeTo","idOrElem","elem","localElem","document","getElementById","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","MotionPluginContext","transformPagePoint","p","isViewportScrollBlocked","addEventListener","event","preventDefault","passive","blockViewportScroll","unblockViewportScroll","isMouseEvent","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","useUnmountEffect","addDomEvent","eventName","handler","removeEventListener","defaultPagePoint","pageX","pageY","pointFromTouch","e","changedTouches","pointFromMouse","wrapHandler","shouldFilterPrimaryPointer","listener","point","extractEventInfo","eventHandler","button","filterPrimaryPointer","isBrowser$1","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","element","useDomEvent","startDevicePoint","pointHistory","lastDevicePoint","getVelocity$1","timestampedPoint","lastPoint","time","currentVelocity","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","lastMoveEvent","lastMoveEventInfo","pointerEventSubscription","handlers","removePointerEvents","getPanInfo","currentPoint","offset","transformPoint","info","cancelPan","updatePoint","panStarted","startEvent","distancePastThreshold","onPointerMove","buttons","onPointerUp","initialInfo","removeOnPointerMove","removeOnPointerUp","isNodeOrChild","parentElement","order","getGesturePriority","gesture","indexOf","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","tapGesturePriority","hoverPriority","filterTouch","useGestures","onTap","onTapStart","onTapCancel","hasTapListeners","isTapping","cancelPointerEventListener","removePointerUp","openGestureLock","useTapGesture","onHoverStart","onHoverEnd","useHoverGesture","makeRenderlessComponent","hook","gestureProps","Gestures","shouldRender","some","Component","innerRef","useMotionValue","allowDefaultPointerDown","getBoundingBox","width","height","getCurrentOffset","calculateConstraintsFromDom","constraintsRef","draggableRef","parentBoundingBox","draggableBoundingBox","right","bottom","shouldDrag","direction","currentDirection","getConstraints","axis","min","applyConstraints","constraints","dragElastic","constrainedValue","applyOverdrag","dragFactor","bothAxis","useDrag","dragDirectionLock","dragPropagation","dragConstraints","_f","_g","dragMomentum","_dragValueX","_dragValueY","_dragTransitionControls","dragOriginX","dragOriginY","dragTransition","onDirectionLock","onDragStart","onDrag","onDragEnd","onDragTransitionEnd","constraintsNeedResolution","dragStatus","isDragging","onResize","defaultOriginX","defaultOriginY","openGlobalLock","prevConstraintsBox","scalePoint","constraintsBox","draggableBox","scaleAxisPoint","dimension","pointToScale","recordBoxInfo","top_1","applyConstraintsToPoint","axisPoint","convertPanToDrag","cancelDrag","lockThreshold","abs","getCurrentDirection","onDirectionLock_1","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","animateDragEnd","tagName","activeElement","HTMLElement","blur","Drag","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","match","exec","parseCSSVariable","token","fallback","resolved","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","elementStyler","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","reduce","acc","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","parseDomVariant","resolveCSSVariables","unitConversion","useForceUpdate","forcedRenderCount","setForcedRenderCount","StepName","SyncLayoutContext","jobs","Prepare","Read","Render","jobsNeedProcessing","flushCallbackList","list","numJobs","flushAllJobs","prepare","read","createUseSyncEffect","stepName","layoutSync","defaultLayoutTransition","defaultPositionTransition","axisLabels","id","centerOf","calcAxisDelta","next","names","sizeDelta","getLayout","measure","offsetLeft","offsetTop","offsetWidth","offsetHeight","boundingBox","readPositionStyle","position","isSizeKey","useLayoutAnimation","layoutTransition","positionOnly","isHTMLElement","compare","prevPosition","nextPosition","getLayoutType","calcDelta","originX","originY","isResolver","makeTransition","layoutKey","transformKey","visualOrigin","deltaKey","baseTransition","getDefaultLayoutTransition","offsetToApply","AnimatePropType","Layout","positionTransition","validMotionProps","isValidMotionProp","hasUpdated","prevLength","shallowCompare","targetWithoutTransition","mergeTransitionEnd","_a$1","resolveVariantLabels","unresolvedVariant","asDependencyList","join","hasVariantChanged","oldVariant","newVariant","AnimatePropComponents","Target","targetAndTransition","isInitialRender","prevValues","targetToAnimate","animatingTarget","finalTarget","shouldAnimateOnMount","isValidValue","valueHasUpdated","useAnimateProp","VariantLabel","targetVariants","parentAlreadyMounted","shouldAnimate","useVariants","AnimationSubscription","useAnimationGroupSubscription","isAnimationSubscription","animationProps","animatePropTypeTests","prop","getAnimationComponent","animatePropType","Exit","exit","hasExitProps","hasExitAnimation","isPlayingExitAnimation","onExitComplete","isPropValid","emotionIsPropValid_1","buildSVGProps","functionalityComponents","numFunctionalityComponents","createDomMotionConfig","isDOM","isSVG","forwardedProps","domProps","filterValidProps","staticVisualStyles","activeComponents","Animation","Component_1","htmlMotionComponents","svgMotionComponents","motion","PresenceChild","getChildKey","AnimatePresence","exitBeforeEnter","localForceUpdate","forceUpdate","filteredChildren","filtered","onlyElements","presentChildren","allChildren","exiting","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","findIndex","splice"],"mappings":"0FAAA,yJAWIA,EAAU,SAAUC,GACpB,OAAQC,MAAMC,WAAWF,KAOzBG,EAA6B,WAS7B,SAASA,EAAYC,EAAMC,GACvB,IAAIC,EAAQC,KACRC,OAAY,IAAPH,EAAgB,GAAKA,EAAII,EAAcD,EAAGC,YAAaC,EAASF,EAAGE,OAM5EH,KAAKI,UAAY,EAMjBJ,KAAKK,YAAc,EAQnBL,KAAKM,kBAAmB,EACxBN,KAAKO,gBAAkB,SAAUC,EAAGC,QACjB,IAAXA,IAAqBA,GAAS,GAClCV,EAAMW,KAAOX,EAAMY,QACnBZ,EAAMY,QAAUZ,EAAMG,YAAcH,EAAMG,YAAYM,GAAKA,EACvDT,EAAMa,mBAAqBb,EAAMW,OAASX,EAAMY,SAChDZ,EAAMa,kBAAkBC,QAAQd,EAAMe,kBAEtCf,EAAMgB,UACNhB,EAAMgB,SAASF,QAAQd,EAAMiB,UAE7BP,GAAUV,EAAMkB,mBAChBlB,EAAMkB,kBAAkBJ,QAAQd,EAAMe,kBAG1C,IAAIhB,EAAK,cAAgBoB,EAAQpB,EAAGoB,MAAOC,EAAYrB,EAAGqB,UACtDpB,EAAMM,cAAgBc,IACtBpB,EAAMK,UAAYc,EAClBnB,EAAMM,YAAcc,EACpB,IAAKC,WAAWrB,EAAMsB,yBAa9BrB,KAAKc,iBAAmB,SAAUQ,GAC9BA,EAAWvB,EAAMY,UAUrBX,KAAKqB,sBAAwB,WAAc,OAAO,IAAKD,WAAWrB,EAAMwB,gBAUxEvB,KAAKuB,cAAgB,SAAUzB,GACXA,EAAGqB,YACDpB,EAAMM,cACpBN,EAAMW,KAAOX,EAAMY,UAU3BX,KAAKgB,SAAW,SAAUQ,GAAS,OAAOA,EAAMC,IAAI1B,EAAMY,UAC1DX,KAAKG,OAASA,EACdH,KAAKE,YAAcA,EACnBF,KAAKyB,IAAI5B,GAAM,GACfG,KAAKM,iBAAmBd,EAAQQ,KAAKW,SA8PzC,OAnPAf,EAAY8B,UAAUC,SAAW,SAAUC,QACxB,IAAXA,IAAqBA,EAAS,IAClC,IAAIJ,EAAQ,IAAI5B,EAAYI,KAAKW,QAAS,YAAS,CAAER,OAAQH,MAAQ4B,IAIrE,OAHK5B,KAAKe,WACNf,KAAKe,SAAW,IAAIc,KACxB7B,KAAKe,SAASe,IAAIN,GACXA,GASX5B,EAAY8B,UAAUK,YAAc,SAAUP,GACrCxB,KAAKe,UAGVf,KAAKe,SAASiB,OAAOR,IAQzB5B,EAAY8B,UAAUO,YAAc,SAAUC,EAAeC,GACzD,IAAIpC,EAAQC,KACRoC,EAAmB,WAAc,OAAOD,EAAapC,EAAMY,UAE/D,OADAuB,EAAcJ,IAAIM,GACX,WAAc,OAAOF,EAAcF,OAAOI,KAgFrDxC,EAAY8B,UAAUW,SAAW,SAAUF,GAGvC,OAFKnC,KAAKY,oBACNZ,KAAKY,kBAAoB,IAAIiB,KAC1B7B,KAAKiC,YAAYjC,KAAKY,kBAAmBuB,IAUpDvC,EAAY8B,UAAUY,gBAAkB,SAAUH,GAK9C,OAJKnC,KAAKiB,oBACNjB,KAAKiB,kBAAoB,IAAIY,KAEjC7B,KAAKc,iBAAiBqB,GACfnC,KAAKiC,YAAYjC,KAAKiB,kBAAmBkB,IAOpDvC,EAAY8B,UAAUa,OAAS,SAAUC,GACrCxC,KAAKwC,cAAgBA,GAiBzB5C,EAAY8B,UAAUD,IAAM,SAAUjB,EAAGC,QACtB,IAAXA,IAAqBA,GAAS,GAC7BA,GAAWT,KAAKwC,cAIjBxC,KAAKwC,cAAchC,EAAGR,KAAKO,iBAH3BP,KAAKO,gBAAgBC,EAAGC,IAahCb,EAAY8B,UAAUe,IAAM,WACxB,OAAOzC,KAAKW,SAShBf,EAAY8B,UAAUgB,YAAc,WAEhC,OAAO1C,KAAKM,iBAEJ,YAAkBX,WAAWK,KAAKW,SAC9BhB,WAAWK,KAAKU,MAAOV,KAAKI,WAClC,GAcVR,EAAY8B,UAAUiB,MAAQ,SAAUC,GACpC,IAAI7C,EAAQC,KAEZ,OADAA,KAAK6C,OACE,IAAIC,SAAQ,SAAUC,GACzBhD,EAAMiD,cAAgBJ,EAAUG,MACjCE,MAAK,WAAc,OAAOlD,EAAMmD,qBAOvCtD,EAAY8B,UAAUmB,KAAO,WACrB7C,KAAKgD,eACLhD,KAAKgD,gBACThD,KAAKkD,kBAOTtD,EAAY8B,UAAUyB,YAAc,WAChC,QAASnD,KAAKgD,eAElBpD,EAAY8B,UAAUwB,eAAiB,WACnClD,KAAKgD,cAAgB,MAWzBpD,EAAY8B,UAAU0B,QAAU,WAC5BpD,KAAKY,mBAAqBZ,KAAKY,kBAAkByC,QACjDrD,KAAKiB,mBAAqBjB,KAAKiB,kBAAkBoC,QACjDrD,KAAKG,QAAUH,KAAKG,OAAO4B,YAAY/B,MACvCA,KAAK6C,QAEFjD,EAnWqB,GAwWhC,SAAS0D,EAAYzD,EAAM0D,GACvB,OAAO,IAAI3D,EAAYC,EAAM0D,GAUjC,SAASC,EAAY3D,GACjB,IAAI4D,EAAM,iBAAO,MAIjB,OAHoB,OAAhBA,EAAI9C,UACJ8C,EAAI9C,QAAUd,KAEX4D,EAAI9C,QAGf,IAAI+C,EAAgB,SAAUjE,GAC1B,OAAOA,aAAiBG,GAKxB+D,EAAe,YAAoB,CACnCC,OAAQ,WAAc,OAAO,MAC7BC,SAAU,SAAUC,EAAOhE,GAEvB,OAAOiE,EADQjE,EAAGiE,UACFD,MAGpBE,EAAiC,WACjC,SAASA,IACLhE,KAAKiE,YAAa,EAClBjE,KAAKkE,OAAS,IAAIC,IAClBnE,KAAKoE,cAAgB,IAAID,IAyE7B,OAvEAH,EAAgBtC,UAAU2C,IAAM,SAAUC,GACtC,OAAOtE,KAAKkE,OAAOG,IAAIC,IAE3BN,EAAgBtC,UAAUD,IAAM,SAAU6C,EAAK7E,GAC3CO,KAAKkE,OAAOzC,IAAI6C,EAAK7E,GACjBO,KAAKiE,YACLjE,KAAKuE,kBAAkBD,EAAK7E,IAGpCuE,EAAgBtC,UAAUe,IAAM,SAAU6B,EAAKE,GAC3C,IAAI/E,EAAQO,KAAKkE,OAAOzB,IAAI6B,GAK5B,YAJcG,IAAVhF,QAAwCgF,IAAjBD,IACvB/E,EAAQ,IAAIG,EAAY4E,GACxBxE,KAAKyB,IAAI6C,EAAK7E,IAEXA,GAEXuE,EAAgBtC,UAAUb,QAAU,SAAU6D,GAC1C,OAAO1E,KAAKkE,OAAOrD,QAAQ6D,IAE/BV,EAAgBtC,UAAU6C,kBAAoB,SAAUD,EAAK7E,GACzD,IAAIM,EAAQC,KAER2E,EAAsBlF,EAAM6C,iBADjB,SAAU9B,GAAK,OAAOT,EAAM6E,QAAU7E,EAAM6E,OAAON,EAAK9D,MAKnEqE,EAAsBpF,EAAM4C,UAHjB,SAAU7B,GACrBT,EAAMgE,UAAYhE,EAAMgE,SAAStC,IAAI6C,EAAK9D,MAG1CR,KAAKoE,cAAcC,IAAIC,IACvBtE,KAAKoE,cAAc3B,IAAI6B,EAAvBtE,GAEJA,KAAKoE,cAAc3C,IAAI6C,GAAK,WACxBK,IACAE,QAGRb,EAAgBtC,UAAUoD,YAAc,SAAUf,GAC9C/D,KAAK+D,cAAWU,EACZV,IACA/D,KAAK+D,SAAWJ,EAAa,CAAEI,SAAUA,MAGjDC,EAAgBtC,UAAUqD,qBAAuB,SAAUC,GACnDhF,KAAKgF,oBAAsBA,IAC3BhF,KAAKgF,kBAAoBA,EACzBhF,KAAKiF,4BAGbjB,EAAgBtC,UAAUwD,qBAAuB,WAC7C,OAAOlF,KAAKgF,mBAEhBhB,EAAgBtC,UAAUuD,wBAA0B,WAC5CjF,KAAK4E,QACL5E,KAAK4E,OAAO,YAAa5E,KAAKgF,oBAGtChB,EAAgBtC,UAAUyD,MAAQ,SAAUP,GACxC,IAAI7E,EAAQC,KACZA,KAAKiE,YAAa,EACdW,IACA5E,KAAK4E,OAASA,GAClB5E,KAAKkE,OAAOrD,SAAQ,SAAUpB,EAAO6E,GAAO,OAAOvE,EAAMwE,kBAAkBD,EAAK7E,MAChFO,KAAKiF,2BAETjB,EAAgBtC,UAAU0D,QAAU,WAChC,IAAIrF,EAAQC,KACZA,KAAKkE,OAAOrD,SAAQ,SAAUwE,EAAQf,GAClC,IAAIgB,EAAcvF,EAAMqE,cAAc3B,IAAI6B,GAC1CgB,GAAeA,QAGhBtB,EA7EyB,GA+EhCuB,EAA0B,IAAI1D,IAAI,CAAC,cAAe,gBAClD2D,EAAkB,SAAUC,GAC5B,IAAIC,EAAelC,GAAY,WAC3B,IAAImC,EAAM,IAAI3B,EAOd,IAAK,IAAIM,KAAOmB,EACR/B,EAAc+B,EAAMnB,MACnBiB,EAAwBlB,IAAIC,IAC7BqB,EAAIlE,IAAI6C,EAAKmB,EAAMnB,IAG3B,OAAOqB,KAIX,OAFAD,EAAaZ,YAAYW,EAAM1B,UAC/B2B,EAAaX,qBAAqBU,EAAMT,mBACjCU,GAGPE,EAAU,KACVC,EAAoB,CACpBC,OAAQ,WAAc,OAAmB,OAAZF,GAC7BG,KAAM,WACF,aAAWH,EAAS,oCACpBA,EAAU,IAEdI,MAAO,WACH,YAAsB,OAAZJ,EAAkB,gCAC5BA,GAAWA,EAAQ/E,SAAQ,SAAUoF,GAAU,OAAOA,EAAOxF,YAC7DmF,EAAU,MAEdM,KAAM,SAAUD,GACZ,YAAsB,OAAZL,EAAkB,gCAC5BA,GAAWA,EAAQM,KAAKD,KAI5BE,EAAc,SAAU1C,GACxB,MAAsB,iBAARA,GAAoBA,EAAI2C,eAAe,YAwCzD,IAqBoCC,EAFhCC,EAAW,eAAK,sBAnBI,SAAUxG,EAAI2D,GAClC,IAAIS,EAASpE,EAAGoE,OAAQqC,EAAWzG,EAAGyG,SAAUC,EAAc1G,EAAG0G,YAgBjE,OAfA,qBAAU,WACN,YAAU/C,EAAI9C,mBAAmB8F,QAAS,wGAC1C,IAAIC,EAAY,YAAOjD,EAAI9C,QAAS,CAChCgG,gBAAgB,EAChBC,4BAA6BL,IAQjC,OANArC,EAAOiB,OAAM,SAAUb,EAAK7E,GACxBiH,EAAUjF,IAAI6C,EAAK7E,GACfoG,EAAkBC,UAClBD,EAAkBK,KAAKQ,MAGxB,WAAc,OAAOxC,EAAOkB,aACpC,IA/CP,SAAwByB,EAAaL,GACjC,qBAAU,WAEN,GAAKA,EAAL,CAEA,GAA2B,mBAAhBA,EAEP,OADAA,EAAYK,EAAYlG,SACjB,WAAc,OAAO6F,EAAY,OAEvC,GAAIL,EAAYK,GAAc,CAC/B,IAAIM,EAAoBN,EAIxB,OADAM,EAAkBnG,QAAUkG,EAAYlG,QACjC,WAKC6F,EAAY7F,UAAYkG,EAAYlG,UACpCmG,EAAkBnG,QAAU,WAIzC,IAwBHoG,CAAetD,EAAK+C,GACb,SASPQ,GALgCX,EAKK,SAAU5G,GAAS,OAAOA,EAAMgD,OALlB,SAAUyB,GAC7D,IAAI+C,EAAiB,GAErB,OADA/C,EAAOrD,SAAQ,SAAUpB,EAAO6E,GAAO,OAAQ2C,EAAe3C,GAAO+B,EAAS5G,MACvEwH,IAIPC,EAAuB,IAAIrF,IAAI,CAAC,UAAW,UAAW,YACtDsF,EAAwB,SAAU7C,GAAO,OAAO4C,EAAqB7C,IAAIC,IACzE8C,EAAiB,SAAUlD,EAAQmD,EAAWd,GAC9C,IAAIe,EAAoBN,EAAe9C,GACnCc,EAAoBd,EAAOgB,uBAQ/B,OAPIF,IAGAsC,EAAkBC,UAAYF,EAAUE,UAClCvC,EAAkB,GAAIqC,EAAUE,WAChCvC,GAEH,YAAmB,YAAS,GAAIqC,EAAWC,IAAqBf,IAEvEiB,EAAkB,SAAUtD,EAAQmD,EAAWd,EAAUkB,QACvC,IAAdJ,IAAwBA,EAAY,IACxC,IAAIK,EAAQ,GACRC,EAAmB,iBAAO,IAAIhH,QAClC,IAAK,IAAI2D,KAAO+C,EAAW,CACvB,IAAIO,EAAYP,EAAU/C,GAC1B,GAAIZ,EAAckE,GAEd1D,EAAOzC,IAAI6C,EAAKsD,QAEf,GAAKrB,IACL,YAAgBjC,KAAQ6C,EAAsB7C,GAsB/CoD,EAAMpD,GAAOsD,MAtByC,CAQtD,GAAK1D,EAAOG,IAAIC,IAMZ,GAAIsD,IAAcD,EAAiBrD,GACnBJ,EAAOzB,IAAI6B,GACjB7C,IAAImG,QANd1D,EAAOzC,IAAI6C,EAAKhB,EAAYsE,IAShCD,EAAiBrD,GAAOsD,GAMhC,OAAOH,EAAkBA,EAAgBC,GAASA,GAGlDG,EAAoB,SAAUrH,GAC9B,OAAOsH,MAAMC,QAAQvH,IAMrBwH,EAA+B,SAAUxH,GAEzC,OAAOqH,EAAkBrH,GAAKA,EAAEA,EAAEyH,OAAS,IAAM,EAAIzH,GAOrD0H,EAAiB,CAAC,IAAQ,IAAI,IAAS,IAAS,IAAI,IAJ7C,CACPC,KAAM,SAAU3H,GAAK,MAAa,SAANA,GAC5B4H,MAAO,SAAU5H,GAAK,OAAOA,KAG7B6H,EAAaH,EAAeI,OAAO,CAAC,IAAO,MAC3CC,EAAgB,SAAU/H,GAAK,OAAO,SAAUgI,GAAQ,OAAOA,EAAKL,KAAK3H,KACzEiI,EAAwB,SAAUjI,GAClC,OAAO0H,EAAeQ,KAAKH,EAAc/H,KAEzCmI,EAAe,SAAUnI,GAAK,OAAO6H,EAAWK,KAAKH,EAAc/H,KAEnEoI,EAAoB,WAAc,MAAO,CACzCJ,KAAM,SACNK,UAAW,IACXC,QAAS,GACTC,UAAW,GACXC,UAAW,KAEXC,EAAmB,SAAUC,GAAM,MAAO,CAC1CV,KAAM,SACNK,UAAW,IACXC,QAAgB,IAAPI,EAAW,IAAM,KAE1BC,EAAc,WAAc,MAAO,CACnCC,KAAM,SACNC,SAAU,KAEVC,EAAY,SAAUpF,GAAU,MAAO,CACvCsE,KAAM,YACNa,SAAU,GACVnF,OAAQA,IAERqF,EAAqB,CACrBC,EAAGZ,EACHa,EAAGb,EACHc,EAAGd,EACHe,OAAQf,EACRgB,QAAShB,EACTiB,QAASjB,EACTkB,QAASlB,EACTmB,OAAQd,EACRe,OAAQf,EACRgB,MAAOhB,EACPiB,QAASf,EACTgB,gBAAiBhB,EACjBiB,MAAOjB,EACPkB,QAASpB,GA+BTqB,EAAO,SAAUxK,GACjB,IAAIoJ,EAAKpJ,EAAGoJ,GAAIG,EAAWvJ,EAAGuJ,SAC9B,OAAO,aAAO,SAAUvJ,GACpB,IAAIyK,EAASzK,EAAGyK,OAAQC,EAAW1K,EAAG0K,SACtCD,EAAOrB,GACPG,EAAW,YAAMA,GAAU1G,MAAM,CAAE6H,SAAUA,IAAcA,QAI/DC,EAA6B,SAAUC,GACvC,GAAI5C,MAAMC,QAAQ2C,GAAa,CAE3B,YAAgC,IAAtBA,EAAWzC,OAAc,2DACnC,IAAI0C,EAAKD,EAAW,GAAIE,EAAKF,EAAW,GAAIG,EAAKH,EAAW,GAAII,EAAKJ,EAAW,GAChF,OAAO,sBAAYC,EAAIC,EAAIC,EAAIC,GAE9B,MAA0B,iBAAfJ,GAEZ,iBAAuCjG,IAA7B,EAAaiG,GAA2B,wBAA0BA,EAAa,KAClF,EAAaA,IAEjBA,GAEPK,EAAgB,SAAU3B,GAC1B,OAAOtB,MAAMC,QAAQqB,IAA4B,iBAAZA,EAAK,IAgB1C4B,EAAe,SAAU1G,EAAK7E,GAE9B,MAAY,WAAR6E,MAKiB,iBAAV7E,IAAsBqI,MAAMC,QAAQtI,OAE1B,iBAAVA,IACP,IAAQ0I,KAAK1I,IACZA,EAAMwL,WAAW,WAatBC,EAAwB,SAAUC,GAAW,OAAiB,IAAVA,GAEpDC,EAAc,CAAEC,MAAO,IAAOC,OAAQ,IAAQhC,UAAW,IAAaiC,QAAS,IAASjB,KAAMA,GAC9FkB,EAAyB,CACzBH,MAAO,SAAU9H,GACb,GAAIA,EAAK6F,KAAM,CACX,IAAIA,EAAO2B,EAAcxH,EAAK6F,MAAQ7F,EAAK6F,KAAK,GAAK7F,EAAK6F,KAC1D7F,EAAK6F,KAAOqB,EAA2BrB,GAE3C,OAAO7F,GAEX+F,UAAW,SAAUxJ,GACjB,IAAI2L,EAAO3L,EAAG2L,KAA0ClI,GAA/BzD,EAAGoJ,GAAepJ,EAAG4L,SAAiB,YAAO5L,EAAI,CAAC,OAAQ,KAAM,cACzF,GAAIyD,EAAKW,QAA6B,OAAnBX,EAAKW,OAAO,GAAa,CACxC,IAAIA,EAASX,EAAKW,OAAOyH,QACzBzH,EAAO,GAAKuH,EACZlI,EAAKW,OAASA,EAQlB,OANIX,EAAK6F,OACL7F,EAAKqI,QAAUb,EAAcxH,EAAK6F,MAC5B7F,EAAK6F,KAAKzD,IAAI8E,GACdA,EAA2BlH,EAAK6F,OAE1C7F,EAAK6F,KAAO,SACL7F,IAOXsI,EAA0B,SAAUvH,EAAK4E,EAAI4C,GAC7C,IAAIC,EAAQD,EAAuBA,EAAqBC,MAAQ,EAIhE,QAA6BtH,IAAzBqH,IATkB,SAAUhM,GACrBA,EAAGkM,KAAclM,EAAGiM,MAAuBjM,EAAGmM,cAAiCnM,EAAGoM,gBAAoCpM,EAAGqM,iBAApI,IAAsJC,EAAa,YAAOtM,EAAI,CAAC,OAAQ,QAAS,gBAAiB,kBAAmB,qBACpO,OAAOuM,OAAOC,KAAKF,GAAYnE,OAQ1BsE,CAAoBT,GACrB,OAAO,YAAS,CAAEC,MAAOA,GAnIN,SAAUS,EAAUtD,GAC3C,IAAIuD,EAQJ,OANIA,EADA5E,EAAkBqB,GACEI,EAIhBC,EAAmBiD,IAAajD,EAAmBc,QAEpD,YAAS,CAAEnB,GAAIA,GAAMuD,EAAkBvD,IA0HRwD,CAAqBpI,EAAK4E,IAEhE,IAAIyD,EAA4Bb,EAAqBxH,IACjDwH,EAAqBzB,SACrByB,EACJ,OAAuC,IAAnCa,EAA0BnE,KACnB,CACHuD,MAAOY,EAA0BvG,eAAe,SAC1CuG,EAA0BZ,MAC1BA,EACN7C,GAAIrB,EAAkBqB,GAChBA,EAAGA,EAAGjB,OAAS,GACfiB,EACNV,KAAM,QAGLX,EAAkBqB,GAChB,YAAS,CAAEhF,OAAQgF,EAAIG,SAAU,GAAK0C,MAAOA,EAAO3C,KAAM,UAAYuD,EAA2B,CAEpGnE,KAAM,cAGH,YAAS,CAAEA,KAAM,QAASU,GAAIA,EACjC6C,MAAOA,GAASY,IAQxBC,EAAe,SAAUtI,EAAK7E,EAAOoN,EAAQT,GAC7C,IAAIU,EAASrN,EAAMgD,MACfsK,EAAqB/B,EAAa1G,EAAKwI,GACvCE,EAAqBhC,EAAa1G,EAAKuI,GAG3C,YAAQE,IAAuBC,EAAoB,6BAA+B1I,EAAM,UAAawI,EAAS,QAAWD,EAAS,MAASC,EAAS,+DAAkEA,EAAS,6BAA+BD,EAAS,8BAEvQ,IAlHgCrM,EAkH5BV,EAAK+L,EAAwBvH,EAAKuI,EAAQT,GAAanM,EAAKH,EAAG0I,KAAMA,OAAc,IAAPvI,EAAgB,QAAUA,EAAI6L,EAAuB,YAAOhM,EAAI,CAAC,SAE7ImN,EAAgBF,GAAsBC,EACpC5B,EAAY5C,GACZ8B,EACF/G,EAlBgB,SAAUiF,EAAMjF,GACpC,OAAOiI,EAAuBhD,GACxBgD,EAAuBhD,GAAMjF,GAC7BA,EAeK2J,CAAkB1E,EAAM,YAAS,CAAEiD,KAAMqB,EAAQpB,SAAUjM,EAAMiD,eAAiBoJ,IAU7F,QAjIgCtL,EAyHR+C,GAxHf6C,eAAe,aAAe5F,EAAE4F,eAAe,kBAyHhD7C,EAAK8F,WACL9F,EAAK8F,SAAW6B,EAAsB3H,EAAK8F,WAE3C9F,EAAK4J,cACL5J,EAAK4J,YAAcjC,EAAsB3H,EAAK4J,eAG/C,CAACF,EAAe1J,IAO3B,SAAS6J,EAAe9I,EAAK7E,EAAOoN,EAAQ/M,GACxC,IAAIG,EAAKH,EAAGiM,MAAOsB,OAAiB,IAAPpN,EAAgB,EAAIA,EAAImM,EAAa,YAAOtM,EAAI,CAAC,UAC9E,OAAOL,EAAMkD,OAAM,SAAU6H,GACzB,IAAI8C,EACAxN,EAAK8M,EAAatI,EAAK7E,EAAOoN,EAAQT,GAAamB,EAAmBzN,EAAG,GAAIG,EAAKH,EAAG,GAAI0N,EAAavN,EAAG8L,MAAO0B,EAAU,YAAOxN,EAAI,CAAC,eACvHwE,IAAf+I,IACAH,EAAUG,GAEd,IAAIE,EAAU,WACV,IAAI9K,EAAY2K,EAAiBE,GAEjCH,EAAkB1K,EAAUD,MAAM,CAC9B4H,OAAQ,SAAU/J,GAAK,OAAOf,EAAMgC,IAAIjB,IACxCgK,SAAUA,KAalB,OARI6C,EACAC,EAAkB,YAAMpC,EAAsBmC,IAAU1K,MAAM,CAC1D6H,SAAUkD,IAIdA,IAEG,WACCJ,GACAA,EAAgBzK,WAShC,IAmCI8K,EAAwC,WACxC,SAASA,EAAuB7N,GAC5B,IAAIC,EAAQC,KACRkE,EAASpE,EAAGoE,OAAQ0J,EAAsB9N,EAAG8N,oBAAqBC,EAAuB/N,EAAG+N,qBAMhG7N,KAAKyF,MAAQ,GAIbzF,KAAK8N,SAAW,GAIhB9N,KAAK+N,WAAa,GAIlB/N,KAAKgO,UAAY,GAIjBhO,KAAKiO,kBAAoB,GAIzBjO,KAAKkO,gBAAkB,IAAIrM,IAI3B7B,KAAKmD,YAAc,IAAItB,IAKvB7B,KAAKmO,SAAW,SAAU7J,GAAO,OAAQvE,EAAMmE,OAAOG,IAAIC,IAC1DtE,KAAKkE,OAASA,EACdlE,KAAK4N,oBAAsBA,EAC3B5N,KAAK6N,qBAAuBA,EAC5B7N,KAAKkE,OAAOrD,SAAQ,SAAUpB,EAAO6E,GAAO,OAAQvE,EAAMgO,WAAWzJ,GAAO7E,EAAMgD,SAiatF,OA3ZAkL,EAAuBjM,UAAU0M,SAAW,SAAU3I,GAClDzF,KAAKyF,MAAQA,GAMjBkI,EAAuBjM,UAAU2M,YAAc,SAAUP,GACjDA,IACA9N,KAAK8N,SAAWA,IAMxBH,EAAuBjM,UAAU4M,qBAAuB,SAAUlC,GAC1DA,IACApM,KAAKuO,kBAAoBnC,IAQjCuB,EAAuBjM,UAAU8M,UAAY,SAAU1O,EAAIG,GACvD,IAAIF,EAAQC,KACRyO,OAAY,IAAPxO,EAAgB,GAAKA,EAAIyO,EAAKD,EAAGE,SAAUA,OAAkB,IAAPD,EAAgB,IAAI7M,IAAQ6M,EAAIE,EAAWH,EAAGG,SAC7EC,GAAf/O,EAAGsM,WAA4BtM,EAAG+O,eAAehC,EAAS,YAAO/M,EAAI,CAAC,aAAc,kBAErG,OADA+M,EAAS7M,KAAKyH,gBAAgB,YAAS,GAAIoF,EAAQgC,IAC5CxC,OAAOC,KAAKO,GAAQhM,SAAQ,SAAUyD,GACzC,IAAIqK,EAAStK,IAAIC,GAAjB,CAEAqK,EAAS7M,IAAIwC,GACb,IAAIwK,EAAc9G,EAA6B6E,EAAOvI,IACtD,GAAIvE,EAAMmE,OAAOG,IAAIC,GAAM,CACvB,IAAI7E,EAAQM,EAAMmE,OAAOzB,IAAI6B,GAC7B7E,GAASA,EAAMgC,IAAIqN,QAGnB/O,EAAMmE,OAAOzC,IAAI6C,EAAKhB,EAAYwL,IAEjCF,IACD7O,EAAMgO,WAAWzJ,GAAOwK,QAWpCnB,EAAuBjM,UAAU+F,gBAAkB,SAAUvD,GACzD,IAAIuD,EAAkBzH,KAAKyF,MAAMgC,gBACjC,OAAOA,EAAkBA,EAAgBvD,GAAUA,GAYvDyJ,EAAuBjM,UAAUqN,kBAAoB,SAAUlC,GAC3D,IAAImC,EAAe3C,OAAOC,KAAKO,GAAQoC,OAAOjP,KAAKmO,UAC/Ce,EAAeF,EAAa/G,OAChC,GAAKiH,EAEL,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAcC,IAAK,CACnC,IAAI7K,EAAM0K,EAAaG,GACnBL,EAAcjC,EAAOvI,GACrB7E,EAAQ,KAGRqI,MAAMC,QAAQ+G,KACdrP,EAAQqP,EAAY,IAKV,OAAVrP,IACAA,EAAQO,KAAK4N,oBAAoBtJ,GACjC,YAAoB,OAAV7E,EAAgB,yBAA4B6E,EAAM,mDAAuDA,EAAM,mCAExG,iBAAV7E,GA9IuB,cAAc0I,KA8IG1I,GAE/CA,EAAQE,WAAWF,IAEbkJ,EAAalJ,IAAU,IAAQ0I,KAAK2G,KAE1CrP,EAAQ,IAAQ2P,kBAAkBN,IAEtC9O,KAAKkE,OAAOzC,IAAI6C,EAAKhB,EAAY7D,IACjCO,KAAK+N,WAAWzJ,GAAO7E,IAO/BkO,EAAuBjM,UAAU2N,eAAiB,SAAUC,GACxD,IAAKA,EACD,MAAO,CACHzC,YAAQpI,EACR2H,gBAAY3H,EACZoK,mBAAepK,GAjMd,IAAUP,EACnBvD,EAmBgB,mBAgLK2O,IAEjBA,EAAUA,EAAQtP,KAAKyF,MAAM8J,QAtMdrL,EAsMiClE,KAAKkE,OArMzDvD,EAAU,GACduD,EAAOrD,SAAQ,SAAUpB,EAAO6E,GAAO,OAAQ3D,EAAQ2D,GAAO7E,EAAMgD,SAC7D9B,GAMO,SAAUuD,GACxB,IAAIwH,EAAW,GAEf,OADAxH,EAAOrD,SAAQ,SAAUpB,EAAO6E,GAAO,OAAQoH,EAASpH,GAAO7E,EAAMiD,iBAC9DgJ,EA0L+DhJ,CAAY1C,KAAKkE,UAEnF,IAAIpE,EAAKwP,EAAQlD,WACjB,MAAO,CAAEA,gBADwC,IAAPtM,EAAgBE,KAAKuO,kBAAoBzO,EAClD+O,cADsES,EAAQT,cAChDhC,OADwE,YAAOyC,EAAS,CAAC,aAAc,oBAM1K3B,EAAuBjM,UAAU8N,mBAAqB,WAClD,OAAKxP,KAAKkO,gBAAgBuB,KAEnBC,KAAKC,IAAIC,MAAMF,KAAM5H,MAAM2D,KAAKzL,KAAKkO,kBADjC,GAYfP,EAAuBjM,UAAUmO,YAAc,SAAUnF,EAAYoF,GACjE9P,KAAKgO,UAAU8B,GAAiBpF,EAC5B1K,KAAKe,UACLf,KAAKe,SAASF,SAAQ,SAAUW,GAC5B,OAAOA,EAAMqO,YAAYnF,EAAYoF,OAQjDnC,EAAuBjM,UAAUqO,cAAgB,SAAUD,GACvD,IAAIE,EAAWhQ,KAAKgO,UAAU8B,GAC9B,GAAIE,EACA,OAAOhQ,KAAK2C,MAAMqN,EAAU,CAAEpB,SAAUkB,KAQhDnC,EAAuBjM,UAAUuO,cAAgB,SAAUH,GACvD,IAAI/P,EAAQC,KAKZ,GAJIA,KAAKe,UACLf,KAAKe,SAASF,SAAQ,SAAUW,GAAS,OAAOA,EAAMyO,cAAcH,MAEzD9P,KAAKgO,UAAU8B,GAC9B,CAEA9P,KAAKkO,gBAAgBlM,OAAO8N,GAC5B,IAAII,EAAUlQ,KAAKwP,qBAEnB,GADAxP,KAAKmQ,mBACDD,EACsBlQ,KAAKgO,UAAUkC,IAClBlQ,KAAK+P,cAAcG,GAG1C,IAAIE,EAAiBpQ,KAAKiO,kBAAkB6B,GAC5C,GAAKM,EAAL,CAEA,IAAIC,EAAkB,GACtB,IAAK,IAAI/L,KAAOtE,KAAK+N,gBACWtJ,IAAxB2L,EAAe9L,KACf+L,EAAgB/L,GAAOtE,KAAK+N,WAAWzJ,IAG/CtE,KAAKsQ,UACLtQ,KAAK0N,QAAQ2C,GAAiBpN,MAAK,WAAc,OAAOlD,EAAMwQ,mBAKlE5C,EAAuBjM,UAAUkO,MAAQ,SAAUlF,GAC/C,OAAI5C,MAAMC,QAAQ2C,GACP1K,KAAKwQ,mBAAmB9F,GAEJ,iBAAfA,EACL1K,KAAKwQ,mBAAmB,CAAC9F,SAGhC1K,KAAKwO,UAAU9D,IAMvBiD,EAAuBjM,UAAU8O,mBAAqB,SAAUC,GAC5D,IAAI1Q,EAAQC,KACR2O,EAAW,IAAI9M,IACA4O,EAAiB9E,QAAQ+E,UAC/B7P,SAAQ,SAAUyD,GAC3B,IAAIxE,EAAKC,EAAMsP,eAAetP,EAAM+N,SAASxJ,IAAOuI,EAAS/M,EAAG+M,OAAQgC,EAAgB/O,EAAG+O,cACvFA,GACA9O,EAAMyO,UAAUK,EAAe,CAAEF,SAAUA,IAE3C9B,GACA9M,EAAMyO,UAAU3B,EAAQ,CAAE8B,SAAUA,IAEpC5O,EAAMgB,UAAYhB,EAAMgB,SAAS0O,MACjC1P,EAAMgB,SAASF,SAAQ,SAAUW,GAC7B,OAAOA,EAAMgP,mBAAmBC,UAKhD9C,EAAuBjM,UAAUiB,MAAQ,SAAU+H,EAAYnH,GAC3D,IAMIX,EAhSoBpC,EA0RpBT,EAAQC,KAiBZ,YAhBa,IAATuD,IAAmBA,EAAO,IAC1BA,EAAKqL,UACL5O,KAAKkO,gBAAgBpM,IAAIyB,EAAKqL,UAElC5O,KAAKmQ,iBAAiB5M,EAAKqL,UA/RHpO,EAiSJkK,EAChB9H,EAlSgCkF,MAAMC,QAAQvH,GAkSlCR,KAAK2Q,qBAAqBjG,EAAYnH,GAEvB,iBAAfmH,EACA1K,KAAK4Q,eAAelG,EAAYnH,GAGhCvD,KAAK0N,QAAQhD,EAAYnH,GAEzCvD,KAAKsQ,UACE1N,EAAUK,MAAK,WAAc,OAAOlD,EAAMwQ,iBAErD5C,EAAuBjM,UAAUgM,QAAU,SAAUmD,EAAqB/Q,GACtE,IAAIC,EAAQC,KACRC,OAAY,IAAPH,EAAgB,GAAKA,EAAI2O,EAAKxO,EAAG8L,MAAOA,OAAe,IAAP0C,EAAgB,EAAIA,EAAIC,EAAKzO,EAAG2O,SAAUA,OAAkB,IAAPF,EAAgB,EAAIA,EAAIoC,EAAqB7Q,EAAG6Q,mBAC1JC,EAAK/Q,KAAKqP,eAAewB,GAAsBhE,EAASkE,EAAGlE,OAAQT,EAAa2E,EAAG3E,WAAYyC,EAAgBkC,EAAGlC,cAItH,GAHIiC,IACA1E,EAAa0E,IAEZjE,EACD,OAAO/J,QAAQC,UAMnB,GALA8J,EAAS7M,KAAKyH,gBAAgBoF,GAC1BgC,IACAA,EAAgB7O,KAAKyH,gBAAgBoH,IAEzC7O,KAAK+O,kBAAkBlC,GACnB7M,KAAK6N,qBAAsB,CAC3B,IAAImD,EAAahR,KAAK6N,qBAAqBhB,EAAQgC,GACnDhC,EAASmE,EAAWnE,OACpBgC,EAAgBmC,EAAWnC,cAE3BD,IACA5O,KAAKiO,kBAAkBW,GAAY/B,GAEvC7M,KAAK+O,kBAAkBlC,GACvB,IAAIoE,EAAa,GACjB,IAAK,IAAI3M,KAAOuI,EAAQ,CACpB,IAAIpN,EAAQO,KAAKkE,OAAOzB,IAAI6B,GAC5B,GAAK7E,GAAUoN,QAA0BpI,IAAhBoI,EAAOvI,GAAhC,CAEA,IAAI4M,EAAcrE,EAAOvI,GACpBsK,IACD5O,KAAK+N,WAAWzJ,GAAO0D,EAA6BkJ,IAEpDlR,KAAKmD,YAAYkB,IAAIC,KAEzBtE,KAAKmD,YAAYrB,IAAIwC,GACrB2M,EAAW/K,KAAKkH,EAAe9I,EAAK7E,EAAOyR,EAAa,YAAS,CAAEnF,MAAOA,GAASK,OAEvF,IAAI+E,EAAgBrO,QAAQsO,IAAIH,GAChC,OAAOpC,EACDsC,EAAclO,MAAK,WACjBlD,EAAMyO,UAAUK,EAAe,CAAED,SAAUA,OAE7CuC,GAEVxD,EAAuBjM,UAAUiP,qBAAuB,SAAUU,EAAe9N,GAC7E,IAAIxD,EAAQC,KACRiR,EAAaI,EAAc1F,QAAQ+E,UAClC/K,KAAI,SAAU2L,GAAS,OAAOvR,EAAM6Q,eAAeU,EAAO/N,MAC/D,OAAOT,QAAQsO,IAAIH,IAEvBtD,EAAuBjM,UAAUkP,eAAiB,SAAUW,EAAchO,GACtE,IAAIxD,EAAQC,KACRgM,GAAO,EACPC,EAAgB,EAChBC,EAAkB,EAClBC,EAAmB,EACnByC,EAAYrL,GAAQA,EAAKqL,UAAa,EACtCU,EAAUtP,KAAK8N,SAASyD,GACxBC,EAAgBlC,EACd,WAAc,OAAOvP,EAAM2N,QAAQ4B,EAAS/L,IAC5C,WAAc,OAAOT,QAAQC,WAC/B0O,EAAwBzR,KAAKe,SAC3B,WACE,OAAOhB,EAAM2R,gBAAgBH,EAActF,EAAeC,EAAiBC,EAAkByC,IAE/F,WAAc,OAAO9L,QAAQC,WACnC,GAAIuM,GAAWtP,KAAKe,SAAU,CAC1B,IAAIqL,EAAapM,KAAKqP,eAAeC,GAASlD,WAC1CA,IACAJ,EAAOI,EAAWJ,MAAQA,EAC1BC,EAAgBG,EAAWH,eAAiBA,EAC5CC,EAAkBE,EAAWF,iBAAmBA,EAChDC,EACIC,EAAWD,kBAAoBA,GAG3C,GAAIH,EAAM,CACN,IAAIlM,EAAc,mBAATkM,EACH,CAACwF,EAAeC,GAChB,CAACA,EAAuBD,GAA+BG,EAAO7R,EAAG,GACvE,OAAO8R,EAD+C9R,EAAG,MAC1CmD,KAAK0O,GAGpB,OAAO7O,QAAQsO,IAAI,CAACI,IAAiBC,OAG7C9D,EAAuBjM,UAAUgQ,gBAAkB,SAAUH,EAActF,EAAeC,EAAiBC,EAAkByC,GAKzH,QAJsB,IAAlB3C,IAA4BA,EAAgB,QACxB,IAApBC,IAA8BA,EAAkB,QAC3B,IAArBC,IAA+BA,EAAmB,QACrC,IAAbyC,IAAuBA,EAAW,IACjC5O,KAAKe,SACN,OAAO+B,QAAQC,UAEnB,IAAIkO,EAAa,GACbY,GAAsB7R,KAAKe,SAAS0O,KAAO,GAAKvD,EAChD4F,EAA+C,IAArB3F,EACxB,SAAUgD,GAAK,OAAOA,EAAIjD,GAC1B,SAAUiD,GAAK,OAAO0C,EAAqB1C,EAAIjD,GAQrD,OAPApE,MAAM2D,KAAKzL,KAAKe,UAAUF,SAAQ,SAAUkR,EAAe5C,GACvD,IAAIvM,EAAYmP,EAAcnB,eAAeW,EAAc,CACvD3C,SAAUA,EACV7C,MAAOE,EAAgB6F,EAAwB3C,KAEnD8B,EAAW/K,KAAKtD,MAEbE,QAAQsO,IAAIH,IAEvBtD,EAAuBjM,UAAU4O,QAAU,WACvC,IAAI0B,EAAmBhS,KAAKyF,MAAMuM,iBAClCA,GAAoBA,KAExBrE,EAAuBjM,UAAU6O,WAAa,WAC1C,IAAI0B,EAAsBjS,KAAKyF,MAAMwM,oBACrCA,GAAuBA,KAE3BtE,EAAuBjM,UAAUwQ,yBAA2B,SAAUtD,GAElE,IADA,IAAIuD,EAAenS,KAAKgO,UAAU/F,OACzBkH,EAAIP,EAAW,EAAGO,EAAIgD,EAAchD,IAAK,CAC9C,IAAIiD,EAAmBpS,KAAKiO,kBAAkBkB,GAC9C,GAAIiD,EACA,IAAK,IAAI9N,KAAO8N,EACZpS,KAAKmD,YAAYrB,IAAIwC,KAKrCqJ,EAAuBjM,UAAUyO,iBAAmB,SAAUvB,QACzC,IAAbA,IAAuBA,EAAW,GACtC5O,KAAKmD,YAAYE,QAGbuL,EAAW5O,KAAKwP,sBAChBxP,KAAKkS,yBAAyBtD,GAE9B5O,KAAKe,UACLf,KAAKe,SAASF,SAAQ,SAAUW,GAAS,OAAOA,EAAM2O,iBAAiBvB,OAG/EjB,EAAuBjM,UAAUmB,KAAO,WACpC7C,KAAKkE,OAAOrD,SAAQ,SAAUpB,GAAS,OAAOA,EAAMoD,WAMxD8K,EAAuBjM,UAAUC,SAAW,SAAU0Q,GAC7CrS,KAAKe,WACNf,KAAKe,SAAW,IAAIc,KAExB7B,KAAKe,SAASe,IAAIuQ,GAGlBrS,KAAKgO,UAAUnN,SAAQ,SAAUmP,EAAUb,GACvCa,GAAYqC,EAASxC,YAAYG,EAAUb,OAGnDxB,EAAuBjM,UAAUK,YAAc,SAAUsQ,GAChDrS,KAAKe,UAGVf,KAAKe,SAASiB,OAAOqQ,IAEzB1E,EAAuBjM,UAAU4Q,cAAgB,WACzCtS,KAAKe,UACLf,KAAKe,SAASsC,SAEfsK,EA3cgC,GAie3C,IAAI4E,GAAmC,WACnC,SAASA,IAMLvS,KAAKiE,YAAa,EAMlBjE,KAAKwS,kBAAoB,GAMzBxS,KAAKyS,kBAAoB,IAAI5Q,IAiJjC,OAxIA0Q,EAAkB7Q,UAAU2M,YAAc,SAAUP,GAChD9N,KAAK8N,SAAWA,EAChB9N,KAAKyS,kBAAkB5R,SAAQ,SAAUwR,GACrC,OAAOA,EAAShE,YAAYP,OAUpCyE,EAAkB7Q,UAAU4M,qBAAuB,SAAUlC,GACzDpM,KAAKuO,kBAAoBnC,EACzBpM,KAAKyS,kBAAkB5R,SAAQ,SAAUwR,GACrC,OAAOA,EAAS/D,qBAAqBlC,OAW7CmG,EAAkB7Q,UAAUgR,UAAY,SAAUL,GAC9C,IAAItS,EAAQC,KAMZ,OALAA,KAAKyS,kBAAkB3Q,IAAIuQ,GACvBrS,KAAK8N,UACLuE,EAAShE,YAAYrO,KAAK8N,UAC1B9N,KAAKuO,mBACL8D,EAAS/D,qBAAqBtO,KAAKuO,mBAChC,WAAc,OAAOxO,EAAM0S,kBAAkBzQ,OAAOqQ,KAqB/DE,EAAkB7Q,UAAUiB,MAAQ,SAAU+H,EAAYoG,GACtD,IAAI/Q,EAAQC,KACZ,GAAIA,KAAKiE,WAAY,CACjB,IAAI0O,EAAe,GAOnB,OANA3S,KAAKyS,kBAAkB5R,SAAQ,SAAUwR,GACrC,IAAIzP,EAAYyP,EAAS1P,MAAM+H,EAAY,CACvCoG,mBAAoBA,IAExB6B,EAAazM,KAAKtD,MAEfE,QAAQsO,IAAIuB,GAGnB,OAAO,IAAI7P,SAAQ,SAAUC,GACzBhD,EAAMyS,kBAAkBtM,KAAK,CACzBtD,UAAW,CAAC8H,EAAYoG,GACxB/N,QAASA,QAyBzBwP,EAAkB7Q,UAAUD,IAAM,SAAUiJ,GAExC,OADA,YAAU1K,KAAKiE,WAAY,iHACpBjE,KAAKyS,kBAAkB5R,SAAQ,SAAUwR,GAC5C,OAAOA,EAASzC,MAAMlF,OAY9B6H,EAAkB7Q,UAAUmB,KAAO,WAC/B7C,KAAKyS,kBAAkB5R,SAAQ,SAAUwR,GAAY,OAAOA,EAASxP,WAOzE0P,EAAkB7Q,UAAUyD,MAAQ,WAChC,IAAIpF,EAAQC,KACZA,KAAKiE,YAAa,EAClBjE,KAAKwS,kBAAkB3R,SAAQ,SAAUf,GACrC,IAAI8C,EAAY9C,EAAG8C,UAAWG,EAAUjD,EAAGiD,QAC3C,OAAOhD,EAAM4C,MAAMiN,MAAM7P,EAAO6C,GAAWK,KAAKF,OAQxDwP,EAAkB7Q,UAAU0D,QAAU,WAClCpF,KAAKiE,YAAa,EAClBjE,KAAK6C,QAEF0P,EApK2B,GA8KlCK,GAAgB,wBAAc,CAC9BC,QAAQ,IAERC,GAAiB,SAAUtS,GAC3B,MAAoB,iBAANA,GAAkBsH,MAAMC,QAAQvH,IAE9CuS,GAAsB,SAAUvS,GAChC,OAAOA,aAAa+R,IAOpBS,GAAmB,SAAUC,EAAeZ,EAAUnO,EAAQqC,EAAUzG,QACvD,IAAbyG,IAAuBA,GAAW,GACtC,IAMI2M,EANAC,EAAUrT,EAAGqT,QAASzF,EAAU5N,EAAG4N,QAASI,EAAWhO,EAAGgO,SAAUsF,EAAWtT,EAAGsT,SAAUC,EAAavT,EAAGuT,WAE5GJ,EAAcK,gBACsB7O,IAApCwO,EAAcK,UAAUH,UACxBA,EAAUF,EAAcK,UAAUH,UAGtB,IAAZA,GAAsBJ,GAAoBrF,GAGlB,kBAAZyF,IACZD,EAAeC,GAHfD,EAAexF,EAOnB,IAzNiBhJ,EAAU6O,EAyNvBtP,EAAa,kBAAO,GAMpBuP,EAA0B1F,GAC1BgF,GAAepF,IACfoF,GAAeM,IACfN,GAAeO,IACfN,GAAoBrF,GAEpB+F,EAAgBX,GAAeI,GAC7BA,EACAD,EAAcE,QAGhBO,EAAgBZ,GAAepF,GAC7BA,EACAuF,EAAcvF,QAGhBiG,EAAoBpN,EAAWkN,EAAgB,KAK/CG,EAAoBJ,GAA2BV,GAAeY,GAC5DA,EACA,KAIFG,EAAU,mBAAQ,WAAc,MAAO,CACvCxB,SAAUmB,EACJnB,EACAY,EAAcZ,SACpBc,QAASM,EACT/F,QAASgG,EACTxP,OAAQA,EACRD,WAAYA,KACT,CAAC0P,EAAmBC,IAY3B,OAVAC,EAAQhB,OAAStM,EApQA7B,EAuQL,WACR,IAAIoP,EAAiBZ,GAAgBD,EAAcE,QACnDW,GAAkBzB,EAASzC,MAAMkE,SAxQvB,KADaP,EA0QxBhN,EAAWwN,IAAW,KAzQDR,EAAQ,GACpB,iBAAO,GACT5S,UAAY4S,GAClB7O,IAuQJ,qBAAU,WACNT,EAAWtD,SAAU,IACtB,IACIkT,GAeX,SAASG,GAA0BpS,EAAQ6D,EAAOwO,EAA2BhB,GACzE,IAAInF,EAAWrI,EAAMqI,SAAU1B,EAAa3G,EAAM2G,WAC9C8H,EAAiB,qBAAWtB,IAAeP,SAC3CA,EAAW7O,GAAY,WAAc,OAAO,IAAImK,EAAuB/L,MAqB3E,OAnBKqR,GACAA,EAAcK,WACdL,EAAcK,UAAUa,YACzB9B,EAASC,gBACTD,EAASjE,SAAS3I,GAClB4M,EAAShE,YAAYP,GACrBuE,EAAS/D,qBAAqBlC,GAC1B6H,GAA6BC,GAC7BA,EAAevS,SAAS0Q,IAGhC,qBAAU,WAAc,OAAO,WAID5M,EAAMwM,oBAAhC,IAAqDmC,EAAe,YAAO3O,EAAO,CAAC,wBACnF4M,EAASjE,SAASgG,GAClBF,GAAkBA,EAAenS,YAAYsQ,MAC3C,IACCA,EAGX,IAyNIgC,GAzNAC,GAA4B,SAAUxU,GACtC,IAAI4N,EAAU5N,EAAG4N,QAASI,EAAWhO,EAAGgO,SAAU7N,EAAKH,EAAGyU,QAC1D,YADoF,IAAPtU,GAAuBA,MAE9F6N,KACAJ,GAAWA,aAAmB6E,KAMpCiC,GAAwB,SAAU1U,GAClC,IAAI2U,EAAyB3U,EAAG2U,uBAAwBC,EAA8B5U,EAAG4U,4BAA6BC,EAAkB7U,EAAG6U,gBAsB3I,OAAO,sBArBP,SAAyBlP,EAAOe,GAC5B,IAAI/C,EAAM,iBAAO,MACbwP,EAAgB,qBAAWL,IAC3BrM,EAAW0M,EAAcJ,QAAUpN,EAAMoN,SAAU,EACnD3O,EAASsB,EAAgBC,GACzBiC,EAAQF,EAAgBtD,EAAQuB,EAAMiC,MAAOnB,EAAUd,EAAMgC,iBAC7DmN,EAAuBN,GAA0B7O,GAIjD4M,EAAW2B,GAHMxQ,GAAY,WAC7B,OAAOiR,EAAuBhR,EAAKS,MAEkBuB,EAAOmP,EAAsB3B,GAClFY,EAAUb,GAAiBC,EAAeZ,EAAUnO,EAAQqC,EAAUd,GACtEoP,EAAgBtO,EACd,KACAmO,EAA4BjR,EAAKS,EAAQuB,EAAOwN,EAAeZ,EAAUuC,GAC3EE,EAAoBH,EAAgBlR,EAAKiE,EAAOxD,EAAQuB,EAAOc,GACnE,OAAQ,uBAAD,CAAe,WAAU,KAC5B,wBAAcD,EAAU,CAAE7C,IAAKA,EAAK+C,YAAaA,EAAatC,OAAQA,EAAQqC,SAAUA,IACxFsO,EACA,wBAAcjC,GAAcmC,SAAU,CAAEtV,MAAOoU,GAAWiB,QA+HlEE,GAAc,CACd,UACA,SACA,WACA,OACA,OACA,UACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,eACA,SACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,SACA,SACA,OACA,WACA,QACA,MACA,SAKJ,SAAWX,GAEPA,EAAMY,SAAW,SAAUC,EAAGC,GAC1B,MAAO,CAAE3L,EAAG0L,EAAE1L,EAAI2L,EAAE3L,EAAGC,EAAGyL,EAAEzL,EAAI0L,EAAE1L,IAGtC4K,EAAMe,WAAa,SAAUC,GACzB,IAAIC,EAaJ,OAAO,SAAUxV,GACb,IAAI0J,EAAI1J,EAAG0J,EAAGC,EAAI3J,EAAG2J,EACjB8L,OAZS9Q,IAAT6Q,EACOA,EAEPA,EADoB,iBAAbD,EACAG,SAASC,eAAeJ,GAGxBA,EAOX,GAAKE,EAAL,CAEA,IAAIG,EAAOH,EAAUI,wBACrB,MAAO,CACHnM,EAAGA,EAAIkM,EAAKE,KAAOC,OAAOC,QAC1BrM,EAAGA,EAAIiM,EAAKK,IAAMF,OAAOG,YA5BzC,CAgCG3B,KAAUA,GAAQ,KAKrB,IAAI4B,GAAsB,wBAAc,CACpCC,mBAAoB,SAAUC,GAAK,OAAOA,KAmB9C,IAAIC,IAA0B,EACI,oBAAXP,QAEnBL,SAASa,iBAAiB,aAAa,SAAUC,GACzCF,IACAE,EAAMC,mBAEX,CAAEC,SAAS,IAElB,IAAIC,GAAsB,WAAc,OAAQL,IAA0B,GACtEM,GAAwB,WAAc,OAAQN,IAA0B,GAE5E,SAASO,GAAaL,GAElB,MAA4B,oBAAjBM,cAAgCN,aAAiBM,eACxB,UAAtBN,EAAMO,aAEbP,aAAiBQ,WAE5B,SAASC,GAAaT,GAElB,QADmBA,EAAMU,QAI7B,SAASC,GAAiBvS,GACtB,OAAO,qBAAU,WAAc,OAAO,WAAc,OAAOA,OAAkB,IAGjF,SAASwS,GAAYrK,EAAQsK,EAAWC,EAAS3J,GAC7C,GAAK2J,EAGL,OADAvK,EAAOwJ,iBAAiBc,EAAWC,EAAS3J,GACrC,WAAc,OAAOZ,EAAOwK,oBAAoBF,EAAWC,EAAS3J,IAgD/E,IAAI6J,GAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC1C,SAASC,GAAeC,GACpB,IACI5X,EADe4X,EAAEV,QAAQ,IAAMU,EAAEC,eAAe,IAC3BL,GACzB,MAAO,CAAE9N,EAD0C1J,EAAGyX,MACnC9N,EADkD3J,EAAG0X,OAG5E,SAASI,GAAe9X,GACpB,IAAIG,EAAKH,EAAGyX,MAAOA,OAAe,IAAPtX,EAAgB,EAAIA,EAAIwO,EAAK3O,EAAG0X,MAC3D,MAAO,CAAEhO,EAAG+N,EAAO9N,OAD8D,IAAPgF,EAAgB,EAAIA,GAUlG,IAAIoJ,GAAc,SAAUT,EAASU,GAEjC,QADmC,IAA/BA,IAAyCA,GAA6B,GACrEV,EAAL,CAEA,IAAIW,EAAW,SAAUzB,GAAS,OAAOc,EAAQd,EAXrD,SAA0BA,GACtB,MAAO,CACH0B,MAAOjB,GAAaT,GACdmB,GAAenB,GACfsB,GAAetB,IAO+B2B,CAAiB3B,KACzE,OAAOwB,EAlCX,SAA8BI,GAC1B,GAAKA,EAEL,OAAO,SAAU5B,GACb,IAAIK,EAAeL,aAAiBQ,aACZH,GACnBA,GAAiC,IAAjBL,EAAM6B,SAEvBD,EAAa5B,IA2Bf8B,CAAqBL,GACrBA,IAGNM,GAAgC,oBAAXxC,OAErByC,GAAwB,WACxB,OAAOD,IAAwC,OAAzBxC,OAAO0C,eAE7BC,GAAsB,WACtB,OAAOH,IAAuC,OAAxBxC,OAAO4C,cAE7BC,GAAsB,WACtB,OAAOL,IAAsC,OAAvBxC,OAAO8C,aAG7BC,GAAkB,CAClBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEdC,GAAkB,CAClBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,GAAoBC,GACzB,OAAIjB,KACOiB,EAEFf,KACEa,GAAgBE,GAElBb,KACEE,GAAgBW,GAEpBA,EAEX,SAASC,GAAgB3M,EAAQsK,EAAWC,EAAS3J,GACjD,OAAOyJ,GAAYrK,EAAQyM,GAAoBnC,GAAYU,GAAYT,EAAuB,gBAAdD,GAA8B1J,GAElH,SAASgM,GAAgBhW,EAAK0T,EAAWC,EAAS3J,GAC9C,OAhGJ,SAAqBhK,EAAK0T,EAAWC,EAAS3J,GAC1C,qBAAU,WACN,IAAIiM,EAAUjW,EAAI9C,QAClB,GAAIyW,GAAWsC,EACX,OAAOxC,GAAYwC,EAASvC,EAAWC,EAAS3J,KAErD,CAAChK,EAAK0T,EAAWC,EAAS3J,IA0FtBkM,CAAYlW,EAAK6V,GAAoBnC,GAAYU,GAAYT,EAAuB,gBAAdD,GAA8B1J,GAG/G,SAASmM,GAAiBhU,GACtB,OAAOA,EAAQiU,aAAa,GAEhC,SAASC,GAAgBlU,GACrB,OAAOA,EAAQiU,aAAajU,EAAQiU,aAAa5R,OAAS,GAE9D,SAAS8R,GAAcnU,EAASxF,GAC5B,IAAIyZ,EAAejU,EAAQiU,aAC3B,GAAIA,EAAa5R,OAAS,EACtB,MAAO,CAAEuB,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI0F,EAAI0K,EAAa5R,OAAS,EAC1B+R,EAAmB,KACnBC,EAAYH,GAAgBlU,GACzBuJ,GAAK,IACR6K,EAAmBH,EAAa1K,KAC5B8K,EAAU9Y,UAAY6Y,EAAiB7Y,UACvC+J,EAAsB9K,MAG1B+O,IAEJ,IAAK6K,EACD,MAAO,CAAExQ,EAAG,EAAGC,EAAG,GAEtB,IAAIyQ,GAAQD,EAAU9Y,UAAY6Y,EAAiB7Y,WAAa,IAChE,GAAa,IAAT+Y,EACA,MAAO,CAAE1Q,EAAG,EAAGC,EAAG,GAEtB,IAAI0Q,EAAkB,CAClB3Q,GAAIyQ,EAAUzQ,EAAIwQ,EAAiBxQ,GAAK0Q,EACxCzQ,GAAIwQ,EAAUxQ,EAAIuQ,EAAiBvQ,GAAKyQ,GAQ5C,OANIC,EAAgB3Q,IAAMuK,MACtBoG,EAAgB3Q,EAAI,GAEpB2Q,EAAgB1Q,IAAMsK,MACtBoG,EAAgB1Q,EAAI,GAEjB0Q,EAcX,SAASC,GAActa,EAAI2D,GACvB,IAAI4W,EAAQva,EAAGua,MAAOC,EAAaxa,EAAGwa,WAAYC,EAAWza,EAAGya,SAAUC,EAAoB1a,EAAG0a,kBAC7FC,EAAeJ,GAASC,GAAcC,GAAYC,EAClD5U,EAAU,iBAAO,MACjB8U,EAAgB,iBAAO,MACvBC,EAAoB,iBAAO,MAC3BzE,EAAqB,qBAAWD,IAAqBC,mBACrD0E,EAA2B,iBAAO,MAGlCC,EAAW,iBAAO,IAAIla,QAK1B,SAASma,IACLF,EAAyBja,SAAWia,EAAyBja,UAC7Dia,EAAyBja,QAAU,KAEvC,SAASoa,EAAWjb,GAChB,IAAIkY,EAAQlY,EAAGkY,MACXgD,EAAepV,EAAQjF,QAG3B,MAAO,CACHqX,MAAOA,EACP9W,MAAOmT,GAAMY,SAAS+C,EAAO8B,GAAgBkB,IAC7CC,OAAQ5G,GAAMY,SAAS+C,EAAO4B,GAAiBoB,IAC/CtP,SAAUqO,GAAciB,EAAc,KAG9C,SAASE,EAAeC,GACpB,MAAO,CAAEnD,MAAO9B,EAAmBiF,EAAKnD,QAE5C,SAASoD,IACLN,IACA,IAAWvQ,OAAO8Q,GAClB3E,KAEJ,SAAS2E,IACL,IAAKzV,EAAQjF,UACR+Z,EAAc/Z,UACdga,EAAkBha,QAGnB,OAFA,aAAQ,EAAO,oDACfya,IAGJ,IAAID,EAAOJ,EAAWJ,EAAkBha,SACpC2a,OAA4C7W,IAA/BmB,EAAQjF,QAAQ4a,WAI7BC,EAAwB,YAASL,EAAKF,OAAQ,CAAEzR,EAAG,EAAGC,EAAG,KAAQ,EACrE,GAAK6R,GAAeE,EAApB,CAEA,IAAIxD,EAAQmD,EAAKnD,MACb7W,EAAY,cAAeA,UAC/ByE,EAAQjF,QAAQkZ,aAAa3T,KAAK,YAAS,GAAI8R,EAAO,CAAE7W,UAAWA,KAC9Dma,IACDT,EAASP,YACLO,EAASP,WAAWI,EAAc/Z,QAASwa,GAC/CvV,EAAQjF,QAAQ4a,WAAab,EAAc/Z,SAE/Cka,EAASR,OAASQ,EAASR,MAAMK,EAAc/Z,QAASwa,IAE5D,SAASM,EAAcnF,EAAO6E,GAC1BT,EAAc/Z,QAAU2V,EACxBqE,EAAkBha,QAAUua,EAAeC,GAEvCxE,GAAaL,IAA4B,IAAlBA,EAAMoF,QAC7BC,EAAYrF,EAAO6E,GAIvB,IAAK5Q,OAAO8Q,GAAa,GAE7B,SAASM,EAAYrF,EAAO6E,GACxBC,IACKxV,EAAQjF,SAIbka,EAASN,UACLM,EAASN,SAASjE,EAAOyE,EAAWG,EAAeC,KACvDvV,EAAQjF,QAAU,MALd,aAAQ,EAAO,6CApEvBka,EAASL,kBAAoBA,EAC7BK,EAASP,WAAaA,EACtBO,EAASR,MAAQA,EACjBQ,EAASN,SAAWA,EA6FpBd,GAAgBhW,EAAK,cAAegX,GArBpC,SAAuBnE,EAAO6E,GAE1B,KAAIpE,GAAaT,IAAUA,EAAMU,QAAQ/O,OAAS,GAAlD,CAEA,IAAI2T,EAAcV,EAAeC,GAC7BnD,EAAQ4D,EAAY5D,MACpB7W,EAAY,cAAeA,UAC/ByE,EAAQjF,QAAU,CACdkM,OAAQyJ,EAAMzJ,OACdgN,aAAc,CAAC,YAAS,GAAI7B,EAAO,CAAE7W,UAAWA,MAEpD0Z,EAASL,mBACLK,EAASL,kBAAkBlE,EAAOyE,EAAWa,IACjDd,IACA,IAAIe,EAAsBrC,GAAgB3D,OAAQ,cAAe4F,GAC7DK,EAAoBtC,GAAgB3D,OAAQ,YAAa8F,GAC7Df,EAAyBja,QAAU,WAC/Bkb,GAAuBA,IACvBC,GAAqBA,QAI7B7E,GAAiBmE,GAUrB,IAAIW,GAAgB,SAAU5b,EAAQqB,GAClC,QAAKA,IAGIrB,IAAWqB,GAITua,GAAc5b,EAAQqB,EAAMwa,iBAIvCC,GAAQ,CAAC,aAAc,WAAY,aACnCC,GAAqB,SAAUC,GAC/B,OAAOF,GAAMG,QAAQD,GAAW,GAGpC,SAASE,GAAW9C,GAChB,IAAI+C,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO/C,EAJI,WACX+C,EAAO,QASnB,IAAIC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACpC,SAASI,GAAcC,GACnB,IAAIJ,GAAO,EACX,GAAa,MAATI,EACAJ,EAAOE,UAEN,GAAa,MAATE,EACLJ,EAAOC,SAEN,CACD,IAAII,EAAmBJ,KACnBK,EAAiBJ,KACjBG,GAAoBC,EACpBN,EAAO,WACHK,IACAC,MAKAD,GACAA,IACAC,GACAA,KAGZ,OAAON,EAGX,IAAIO,GAAqBX,GAAmB,YA2D5C,IAAIY,GAAgBZ,GAAmB,cACnCa,GAAc,SAAUhF,GAAY,OAAO,SAAUzB,EAAO6E,GACxDxE,GAAaL,IACbyB,EAASzB,EAAO6E,KAoCxB,SAAS6B,GAAYvX,EAAOhC,GACxB2W,GAAc3U,EAAOhC,GA9FzB,SAAuB3D,EAAI2D,GACvB,IAAIwZ,EAAQnd,EAAGmd,MAAOC,EAAapd,EAAGod,WAAYC,EAAcrd,EAAGqd,YAAa/J,EAAWtT,EAAGsT,SAAUf,EAAWvS,EAAGuS,SAClH+K,EAAkBH,GAASC,GAAcC,GAAe/J,EACxDiK,EAAY,kBAAO,GACnBC,EAA6B,iBAAO,MACxC,SAASC,IACLD,EAA2B3c,SACvB2c,EAA2B3c,UAC/B2c,EAA2B3c,QAAU,KAErCyS,GAAYf,GACZA,EAASxC,YAAYuD,EAAUyJ,IAInC,IAAIlB,EAAc,iBAAO,MACzBA,EAAYhb,QAAU,SAAU2V,EAAO6E,GACnC,IAAIzB,EAAUjW,EAAI9C,QAElB,GADA4c,IACKF,EAAU1c,SAAY+Y,EAA3B,CAEA2D,EAAU1c,SAAU,EAChB0R,GAAYe,GACZf,EAASpC,cAAc4M,IAI3B,IAAIW,EAAkBf,IAAc,GAC/Be,IAELA,IACKzB,GAAcrC,EAASpD,EAAMzJ,QAI9BoQ,GAASA,EAAM3G,EAAO6E,GAHtBgC,GAAeA,EAAY7G,EAAO6E,MAkB1C1B,GAAgBhW,EAAK,cAAe2Z,EAZpC,SAAuB9G,EAAO6E,GAC1BoC,IACAD,EAA2B3c,QAAU6Y,GAAgB3D,OAAQ,aAAa,SAAUS,EAAO6E,GAAQ,OAAOQ,EAAYhb,QAAQ2V,EAAO6E,MACvH1X,EAAI9C,UACF0c,EAAU1c,UAE1B0c,EAAU1c,SAAU,EACpBuc,GAAcA,EAAW5G,EAAO6E,GAC5B9I,GAAYe,GACZf,EAAStC,cAAc8M,WAGuCpY,GACtEwS,GAAiBsG,GA4CjBE,CAAchY,EAAOhC,GA9BzB,SAAyB3D,EAAI2D,GACzB,IAAI4P,EAAavT,EAAGuT,WAAYqK,EAAe5d,EAAG4d,aAAcC,EAAa7d,EAAG6d,WAAYtL,EAAWvS,EAAGuS,SACtGgB,GAAchB,GACdA,EAASxC,YAAYwD,EAAYyJ,IAErCrD,GAAgBhW,EAAK,eAAgBsZ,IAAY,SAAUzG,EAAO6E,GAC1DuC,GACAA,EAAapH,EAAO6E,GACpB9H,GAAchB,GACdA,EAAStC,cAAc+M,QAG/BrD,GAAgBhW,EAAK,eAAgBsZ,IAAY,SAAUzG,EAAO6E,GAC1DwC,GACAA,EAAWrH,EAAO6E,GAClB9H,GAAchB,GACdA,EAASpC,cAAc6M,QAe/Bc,CAAgBnY,EAAOhC,GAG3B,IAAIoa,GAA0B,SAAUC,GAAQ,OAAO,SAAUrY,GAE7D,OADAqY,EAAKrY,GACE,OAGPsY,GAAe,CACf,OACA,QACA,aACA,WACA,oBACA,QACA,aACA,cACA,WACA,aACA,eACA,cAEAC,GAAW,CACX1Z,IAAK,WACL2Z,aAAc,SAAUxY,GACpB,OAAOsY,GAAaG,MAAK,SAAU5Z,GAAO,OAAOmB,EAAMW,eAAe9B,OAE1E6Z,UAAWN,IAAwB,SAAU/d,GACzC,IAAIse,EAAWte,EAAGse,SAClBpB,GADoC,YAAOld,EAAI,CAAC,aAC7Bse,OAkD3B,SAASC,GAAelL,GACpB,OAAO3P,GAAY,WAAc,OAAOF,EAAY6P,MAMxD,IAAImL,GAA0B,IAAIzc,IAAI,CAAC,QAAS,WAAY,WACxD0c,GAAiB,SAAU9a,EAAKyS,GAChC,IAAIR,EAAOjS,EAAI9C,QAAQgV,wBACnB7V,EAAKoW,EAAmB,CACxB1M,EAAGkM,EAAKE,KACRnM,EAAGiM,EAAKK,MACRH,EAAO9V,EAAG0J,EAAGuM,EAAMjW,EAAG2J,EACtBxJ,EAAKiW,EAAmB,CACxB1M,EAAGkM,EAAK8I,MACR/U,EAAGiM,EAAK+I,SAEZ,MAAO,CAAE7I,KAAMA,EAAMG,IAAKA,EAAKyI,MADnBve,EAAGuJ,EAC8BiV,OADlBxe,EAAGwJ,IAG9BiV,GAAmB,SAAU1G,GAC7B,OAAOA,EAAQA,EAAMvV,MAAQ,GAQ7Bkc,GAA8B,SAAUC,EAAgBC,EAAc7G,EAAO9B,GAC7E,YAAqC,OAA3B0I,EAAeje,SAA6C,OAAzBke,EAAale,QAAkB,0GAC5E,IAAIme,EAAoBP,GAAeK,EAAgB1I,GACnD6I,EAAuBR,GAAeM,EAAc3I,GACpDN,EAAOkJ,EAAkBlJ,KACzBmJ,EAAqBnJ,KACrB8I,GAAiB1G,EAAMxO,GACvBuM,EAAM+I,EAAkB/I,IACxBgJ,EAAqBhJ,IACrB2I,GAAiB1G,EAAMvO,GAG3B,MAAO,CAAEsM,IAAKA,EAAKH,KAAMA,EAAMoJ,MAFnBF,EAAkBN,MAAQO,EAAqBP,MAAQ5I,EAEtBqJ,OADhCH,EAAkBL,OAASM,EAAqBN,OAAS1I,IAG1E,SAASmJ,GAAWC,EAAWzC,EAAM0C,GACjC,SAAkB,IAAT1C,GAAiBA,IAASyC,GACT,OAArBC,GAA6BA,IAAqBD,GAE3D,IAAIE,GAAiB,SAAUC,EAAMxf,GACjC,IAAIiW,EAAMjW,EAAGiW,IAAKiJ,EAAQlf,EAAGkf,MAAOC,EAASnf,EAAGmf,OAAQrJ,EAAO9V,EAAG8V,KAClE,MAAa,MAAT0J,EACO,CAAEC,IAAK3J,EAAMjG,IAAKqP,GAGlB,CAAEO,IAAKxJ,EAAKpG,IAAKsP,IAGhC,SAASO,GAAiBF,EAAM7f,EAAOggB,EAAaC,GAChD,IAAIC,EAAmBlgB,aAAiBG,EAAcH,EAAMgD,MAAQhD,EACpE,IAAKggB,EACD,OAAOE,EAEX,IAAI7f,EAAKuf,GAAeC,EAAMG,GAAcF,EAAMzf,EAAGyf,IAAK5P,EAAM7P,EAAG6P,IAcnE,YAbYlL,IAAR8a,GAAqBI,EAAmBJ,EACxCI,EAAmBD,EACbE,GAAcL,EAAKI,EAAkBD,GACrChQ,KAAKC,IAAI4P,EAAKI,QAEPlb,IAARkL,GAAqBgQ,EAAmBhQ,IAC7CgQ,EAAmBD,EACbE,GAAcjQ,EAAKgQ,EAAkBD,GACrChQ,KAAK6P,IAAI5P,EAAKgQ,IAEpBlgB,aAAiBG,GACjBH,EAAMgC,IAAIke,GAEPA,EAEX,SAASC,GAAc9S,EAAQnM,EAAS+e,GACpC,IAAIG,EAAoC,iBAAhBH,EAA2BA,EAAc,IACjE,OAAO,YAAI5S,EAAQnM,EAASkf,GAEhC,SAASC,GAAS1I,GACd,MAAO,CAACA,EAAQ,KAAMA,EAAQ,MAYlC,SAAS2I,GAAQjgB,EAAI2D,EAAKS,EAAQmO,GAC9B,IAAIpS,EAAKH,EAAG4c,KAAMA,OAAc,IAAPzc,GAAwBA,EAAIwO,EAAK3O,EAAGkgB,kBAAmBA,OAA2B,IAAPvR,GAAwBA,EAAIC,EAAK5O,EAAGmgB,gBAAiBA,OAAyB,IAAPvR,GAAwBA,EAAIqC,EAAKjR,EAAGogB,gBAAiBA,OAAyB,IAAPnP,GAAwBA,EAAIoP,EAAKrgB,EAAG4f,YAAaA,OAAqB,IAAPS,GAAuBA,EAAIC,EAAKtgB,EAAGugB,aAAcA,OAAsB,IAAPD,GAAuBA,EAAIE,EAAcxgB,EAAGwgB,YAAaC,EAAczgB,EAAGygB,YAAaC,EAA0B1gB,EAAG0gB,wBAAyBC,EAAc3gB,EAAG2gB,YAAaC,EAAc5gB,EAAG4gB,YAAaC,EAAiB7gB,EAAG6gB,eAAgBC,EAAkB9gB,EAAG8gB,gBAAiBC,EAAc/gB,EAAG+gB,YAAaC,EAAShhB,EAAGghB,OAAQC,EAAYjhB,EAAGihB,UAAWC,EAAsBlhB,EAAGkhB,oBAGruBC,EAA4B9a,EAAY+Z,GAGxCgB,EAAa,iBAAO,CACpBC,YAAY,EACZ/B,iBAAkB,KAClBK,aAAa,EACb5E,SAAU,KACXla,QAGCka,EAAWqG,EAAWrG,SAC1BA,EAASgG,YAAcA,EACvBhG,EAASiG,OAASA,EAClBjG,EAASkG,UAAYA,EACrBlG,EAAS+F,gBAAkBA,EAC3B/F,EAASmG,oBAAsBA,EAC/B,IAzJetH,EAAS0H,EAyJpBpJ,EAAQ,iBAAO,IAAIrX,QAEnB0gB,EAAiBhD,GAAe,GAChCiD,EAAiBjD,GAAe,GAChCvR,EAAS,CACTtD,EAAGiX,GAAeY,EAClB5X,EAAGiX,GAAeY,GAIlBC,EAAiB,iBAAO,MACxBrL,EAAqB,qBAAWD,IAAqBC,mBAGrDsL,EAAqB,iBAAO,CAC5BhD,MAAO,EACPC,OAAQ,EACRjV,EAAG,EACHC,EAAG,IACJ9I,QACC8gB,EAAa,WACb,GAAKtb,EAAY+Z,GAAjB,CAEA,IAAIwB,EAAiBnD,GAAe2B,EAAiBhK,GACjDyL,EAAepD,GAAe9a,EAAKyS,GAEnC0L,EAAiB,SAAUtC,EAAMuC,GACjC,IAAIC,EAAe9J,EAAMsH,GACzB,GAAKwC,EAAL,CAGA,GAAIA,EAAa3e,cAGb,OAFA2e,EAAajf,YACbkf,IAKJ,IAAI9X,EAAQuX,EAAmBK,IACxBH,EAAeG,GAAaF,EAAaE,IACxCL,EAAmBK,GACrB,EACNC,EAAargB,IAAI+f,EAAmBlC,GAAQrV,KAEhD2X,EAAe,IAAK,SACpBA,EAAe,IAAK,YAtMTlI,EAwMLwG,EAxMckB,EAwMGK,EAvM3B,qBAAU,WACN,GAAK/H,GAAYvT,EAAYuT,GAG7B,OADA7D,OAAOQ,iBAAiB,SAAU+K,GAC3B,WAAc,OAAOvL,OAAOwB,oBAAoB,SAAU+J,MAClE,CAAC1H,EAAS0H,IAqMb,IAAIW,EAAgB,SAAUtC,GAC1B,GAAIA,EAAa,CACb,IAAIT,EAAQS,EAAYT,MAAOpJ,EAAO6J,EAAY7J,KAAMqJ,EAASQ,EAAYR,OAAQ+C,EAAQvC,EAAY1J,IACzGyL,EAAmBhD,OAASQ,GAAS,IAAMpJ,GAAQ,GACnD4L,EAAmB/C,QAAUQ,GAAU,IAAM+C,GAAS,GAEtDhK,EAAMxO,IACNgY,EAAmBhY,EAAIwO,EAAMxO,EAAE/G,OAC/BuV,EAAMvO,IACN+X,EAAmB/X,EAAIuO,EAAMvO,EAAEhH,QAEnCwf,EAA0B,SAAUxC,GACpC,OAAOK,IAAS,SAAUR,GACtB,IAAI4C,EAAYlK,EAAMsH,GACtB4C,IACKA,EAAU/e,eACXqc,GAAiBF,EAAM4C,EAAWzC,EAAa,OAgC3D,SAAS0C,EAAiBhH,GACtB,OAAO,YAAS,GAAIA,EAAM,CAAEnD,MAAO,CAC3BxO,EAAGwO,EAAMxO,EAAIwO,EAAMxO,EAAE/G,MAAQ,EAC7BgH,EAAGuO,EAAMvO,EAAIuO,EAAMvO,EAAEhH,MAAQ,KAIzC,SAAS4Y,EAAYiE,EAAMrE,GACvB,IAAIiH,EAAYlK,EAAMsH,GAEtB,GAAKJ,GAAWI,EAAM5C,EAAMwE,EAAW9B,mBAClC8C,EADL,CAIA,IAAIvhB,EAAU6e,GAAiBF,EAAMxS,EAAOwS,GAAM7c,MAAQwY,EAAOqE,GAAO4B,EAAWzB,YAAaC,GAChGwC,EAAUzgB,IAAId,IA+ElB,SAASyhB,IACL1L,KACAwK,EAAWC,YAAa,GACnBlB,GAAmBsB,EAAe5gB,UACnC4gB,EAAe5gB,UACf4gB,EAAe5gB,QAAU,MA9HjC,qBAAU,WACN,GAAKsgB,EAAL,CAEA,IAAIxB,EAAcd,GAA4BuB,EAAiBzc,EAAKuU,EAAO9B,GAC3E+L,EAAwBxC,GACxBsC,EAActC,MACf,IAGHyB,EAAWzB,YAAcwB,EACnBC,EAAWzB,cAAe,EAC1BS,EAGNJ,IAAS,SAAUR,GACf,GAAKJ,GAAWI,EAAM5C,EAAMwE,EAAW9B,kBAAvC,CAEA,IAAI5a,EAAwB,MAAT8a,EAAegB,EAAcC,EAChDvI,EAAMsH,GAAQ9a,GAAgBN,EAAOzB,IAAI6c,EAAM,OAG9C4B,EAAWC,aACZD,EAAWzB,aACVwB,GACDgB,EAAwBf,EAAWzB,aA4JvCrF,GAAcsC,EAAO,CAAErC,MAhFvB,SAAe/D,EAAO6E,GAElB,GAAK8E,GAAoBsB,EAAe5gB,QAAxC,CAGA,IAAIsa,EAASE,EAAKF,OAElB,GAAI+E,GAAqD,OAAhCkB,EAAW9B,kBAGhC,GAFA8B,EAAW9B,iBAkFvB,SAA6BnE,EAAQoH,QACX,IAAlBA,IAA4BA,EAAgB,IAChD,IAAIlD,EAAY,KACZzP,KAAK4S,IAAIrH,EAAOxR,GAAK4Y,EACrBlD,EAAY,IAEPzP,KAAK4S,IAAIrH,EAAOzR,GAAK6Y,IAC1BlD,EAAY,KAEhB,OAAOA,EA3F+BoD,CAAoBtH,GAEd,OAAhCiG,EAAW9B,iBAA2B,CACtC,IAAIoD,EAAoB3H,EAAS+F,gBACjC4B,GAAqBA,EAAkBtB,EAAW9B,uBAL1D,CASA/D,EAAY,IAAKJ,GACjBI,EAAY,IAAKJ,GACjB,IAAI6F,EAASjG,EAASiG,OACtBA,GAAUA,EAAOxK,EAAO6L,EAAiBhH,OA6DRb,WA5GrC,SAAoBhE,EAAO6E,GAgBvB,GAfA+F,EAAWC,YAAa,EAEpBF,IACAC,EAAWzB,YAAcd,GAA4BuB,EAAiBzc,EAAKuU,EAAO9B,GAClF+L,EAAwBf,EAAWzB,cAGvCK,IAAS,SAAUR,GACf,IAAI4C,EAAYlK,EAAMsH,GACjB4C,IAELpV,EAAOwS,GAAM7d,IAAIygB,EAAUzf,OAC3Byf,EAAUrf,WAGTod,IACGsB,EAAe5gB,SACf4gB,EAAe5gB,UACnB4gB,EAAe5gB,QAAU8b,GAAcC,GAClC6E,EAAe5gB,SAJxB,CAQAugB,EAAW9B,iBAAmB,KAC9B,IAAIyB,EAAchG,EAASgG,YAC3BA,GAAeA,EAAYvK,EAAO6L,EAAiBhH,MAkFMZ,SAhB7D,SAAkBjE,EAAO6E,GACrB,IAAIgG,EAAaD,EAAWC,WAE5B,GADAiB,IACKjB,EAAL,CAGA,GAAId,GAAgBX,GAzCxB,SAAwBhU,GACpB,IAAI+W,EAAqB3C,IAAS,SAAUR,GACxC,IAAIxf,EACJ,GAAKof,GAAWI,EAAM5C,EAAMwE,EAAW9B,kBAAvC,CAGA,IAAIhT,EAAa8U,EAAWzB,YACtBJ,GAAeC,EAAM4B,EAAWzB,aAChC,GAOFiD,EAAkBhD,EAAc,IAAM,IACtCiD,EAAgBjD,EAAc,GAAK,IAEvC,OADwBc,GAA2BnO,GAC1B1P,QAAO7C,EAAK,IAC9Bwf,GAAQ,EAIXxf,EAAGsM,WAAa,YAAS,CAAE5D,KAAM,UAAWkD,SAAU2U,EAAe3U,EAAS4T,GAAQ,EAAGoD,gBAAiBA,EACtGC,cAAeA,EAAeC,aAAc,IAAK7Z,UAAW,GAAK4X,EAAgBvU,GACrFtM,QAGRgD,QAAQsO,IAAIqR,GAAoBxf,MAAK,WACjC8e,EAAcb,EAAWzB,aACzBgC,IACA,IAAIT,EAAsBnG,EAASmG,oBACnCA,GAAuBA,OAWvB6B,CADe1H,EAAKzP,eAIpBqW,EAAcb,EAAWzB,aAE7B,IAAIsB,EAAYlG,EAASkG,UACzBA,GAAaA,EAAUzK,EAAO6L,EAAiBhH,MAE8BX,kBAxIjF,SAA2BlE,GACnBA,EAAMzJ,SACLyR,GAAwBja,IAAIiS,EAAMzJ,OAAOiW,WAGrCtK,OAEDlC,EAAMC,iBAEFf,SAASuN,yBAAyBC,aAClCxN,SAASuN,cAAcE,SAUnCxM,KAGAqJ,IAAS,SAAUR,GACf,IAAI4C,EAAYlK,EAAMsH,GACtB4C,GAAaA,EAAUrf,YA+G2F,GAAIY,GAC9HwT,IAAiB,WAAc,OAAOiK,EAAWC,YAAciB,OAqBnE,IAAIc,GAAO,CACP5e,IAAK,OACL2Z,aAAc,SAAUxY,GAAS,QAASA,EAAMiX,MAChDyB,UAAWN,IAAwB,SAAU/d,GACzC,IAAIse,EAAWte,EAAGse,SAAUla,EAASpE,EAAGoE,OAAQmO,EAAWvS,EAAGuS,SAC9D,OAAO0N,GADyE,YAAOjgB,EAAI,CAAC,WAAY,SAAU,aAC5Fse,EAAUla,EAAQmO,OAIhD,SAAS8Q,GAAc1jB,GACnB,MAAwB,iBAAVA,GAAsBA,EAAMwL,WAAW,UAWzD,IAAImY,GAAmB,uDAQvB,IAAIC,GAAW,EACf,SAASC,GAAiB3iB,EAAS+Y,EAAS6J,QAC1B,IAAVA,IAAoBA,EAAQ,GAChC,YAAUA,GAASF,GAAU,yDAA4D1iB,EAAU,wDACnG,IAAIb,EAXR,SAA0Ba,GACtB,IAAI6iB,EAAQJ,GAAiBK,KAAK9iB,GAClC,OAAK6iB,EAGE,CADKA,EAAM,GAAeA,EAAM,IAD5B,CAAC,GAQHE,CAAiB/iB,GAAUgjB,EAAQ7jB,EAAG,GAAI8jB,EAAW9jB,EAAG,GAEjE,GAAK6jB,EAAL,CAGA,IAAIE,EAAWhO,OAAOiO,iBAAiBpK,GAASqK,iBAAiBJ,GACjE,OAAIE,IAGKV,GAAcS,GAEZN,GAAiBM,EAAUlK,EAAS6J,EAAQ,GAG5CK,IAgDf,IAuBII,GAvBAC,GAAiB,IAAIpiB,IAAI,CACzB,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEAqiB,GAAkB,SAAU5f,GAAO,OAAO2f,GAAe5f,IAAIC,IAC7D6f,GAAmB,SAAUtX,GAC7B,OAAOR,OAAOC,KAAKO,GAAQqR,KAAKgG,KAEhCE,GAAsB,SAAU3kB,EAAOyJ,GAGvCzJ,EAAMgC,IAAIyH,GAAI,GACdzJ,EAAMgC,IAAIyH,IAEVmb,GAAgB,SAAU7jB,GAC1B,OAAOA,IAAM,KAAUA,IAAM,MAGjC,SAAWwjB,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,SANrC,CAOGA,KAAyBA,GAAuB,KACnD,IAAIM,GAAmB,SAAUC,EAAQC,GACrC,OAAO7kB,WAAW4kB,EAAOE,MAAM,MAAMD,KAErCE,GAAyB,SAAUC,EAAMC,GAAQ,OAAO,SAAUC,EAAO/kB,GACzE,IAAIyH,EAAYzH,EAAGyH,UACnB,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAIud,EAAWvd,EAAUic,MAAM,sBAC/B,GAAIsB,EACA,OAAOR,GAAiBQ,EAAS,GAAIF,GAGrC,IAAIL,EAAShd,EAAUic,MAAM,oBAC7B,OAAOc,GAAiBC,EAAO,GAAII,KAGvCI,GAAgB,IAAIljB,IAAI,CAAC,IAAK,IAAK,MACnCmjB,GAAgC,IAAe/V,QAAO,SAAU3K,GAAO,OAAQygB,GAAc1gB,IAAIC,MAerG,IAAI2gB,GAAmB,CAEnBzG,MAAO,SAAU1e,GAEb,OADYA,EAAG0e,OAGnBC,OAAQ,SAAU3e,GAEd,OADaA,EAAG2e,QAGpB1I,IAAK,SAAU8O,EAAO/kB,GAClB,IAAIiW,EAAMjW,EAAGiW,IACb,OAAOpW,WAAWoW,IAEtBH,KAAM,SAAUiP,EAAO/kB,GACnB,IAAI8V,EAAO9V,EAAG8V,KACd,OAAOjW,WAAWiW,IAEtBqJ,OAAQ,SAAUnf,EAAIG,GAClB,IAAIwe,EAAS3e,EAAG2e,OACZ1I,EAAM9V,EAAG8V,IACb,OAAOpW,WAAWoW,GAAO0I,GAE7BO,MAAO,SAAUlf,EAAIG,GACjB,IAAIue,EAAQ1e,EAAG0e,MACX5I,EAAO3V,EAAG2V,KACd,OAAOjW,WAAWiW,GAAQ4I,GAG9BhV,EAAGkb,GAAuB,EAAG,IAC7Bjb,EAAGib,GAAuB,EAAG,KAwB7BQ,GAAmC,SAAUhhB,EAAQT,EAAKoJ,EAAQgC,QAC5C,IAAlBA,IAA4BA,EAAgB,IAChDhC,EAAS,YAAS,GAAIA,GACtBgC,EAAgB,YAAS,GAAIA,GAC7B,IAAI6K,EAAUjW,EAAI9C,QACdwkB,EAAgB,YAAOzL,GACvB0L,EAAuB/Y,OAAOC,KAAKO,GAAQoC,OAAOiV,IAGlDmB,EAAyB,GACzBC,GAAsC,EACtCC,EAAuBH,EAAqBI,QAAO,SAAUC,EAAKnhB,GAClE,IAAI7E,EAAQyE,EAAOzB,IAAI6B,GACvB,IAAK7E,EACD,OAAOgmB,EACX,IAGIC,EAHAja,EAAOhM,EAAMgD,MACbyG,EAAK2D,EAAOvI,GACZqhB,EAAWld,EAAsBgD,GAMrC,GAAI5D,EAAkBqB,GAElB,IADA,IAAI0c,EAAe1c,EAAGjB,OACbkH,EAAc,OAAVjG,EAAG,GAAc,EAAI,EAAGiG,EAAIyW,EAAczW,IAC9CuW,EAOD,YAAUjd,EAAsBS,EAAGiG,MAAQuW,EAAQ,2CANnDA,EAASjd,EAAsBS,EAAGiG,IAClC,YAAUuW,IAAWC,GAChBtB,GAAcsB,IACXtB,GAAcqB,GAAU,sEAQxCA,EAASjd,EAAsBS,GAEnC,GAAIyc,IAAaD,EAGb,GAAIrB,GAAcsB,IAAatB,GAAcqB,GAAS,CAClD,IAAI/kB,EAAUlB,EAAMgD,MACG,iBAAZ9B,GACPlB,EAAMgC,IAAI9B,WAAWgB,IAEP,iBAAPuI,EACP2D,EAAOvI,GAAO3E,WAAWuJ,GAEpBpB,MAAMC,QAAQmB,IAAOwc,IAAW,MACrC7Y,EAAOvI,GAAO4E,EAAGvD,IAAIhG,kBAMpB2lB,IACDD,EA/HpB,SAAyCnhB,EAAQihB,GAC7C,IAAIU,EAAoB,GAWxB,OAVAb,GAA8BnkB,SAAQ,SAAUyD,GAC5C,IAAI7E,EAAQyE,EAAOzB,IAAI6B,QACTG,IAAVhF,IACAomB,EAAkB3f,KAAK,CAAC5B,EAAK7E,EAAMgD,QACnChD,EAAMgC,IAAI6C,EAAI2G,WAAW,SAAW,EAAI,OAI5C4a,EAAkB5d,QAClBkd,EAAc1kB,SACXolB,EAmHkCC,CAAgC5hB,EAAQihB,GACjEG,GAAsC,GAE1CG,EAAIvf,KAAK5B,GACTuK,EAAcvK,QACaG,IAAvBoK,EAAcvK,GACRuK,EAAcvK,GACduI,EAAOvI,GACjB8f,GAAoB3kB,EAAOyJ,GAGnC,OAAOuc,IACR,IACH,GAAIF,EAAqBtd,OAAQ,CAC7B,IAAI8d,EA/FmB,SAAUlZ,EAAQ3I,EAAQwV,EAASyL,EAAea,GAC7E,IAAIC,EAAavM,EAAQ/D,wBACrBuQ,EAAuBpC,iBAAiBpK,GACxCyM,EAAUD,EAAqBC,QAC/BC,EAAsB,CAAErQ,IADsBmQ,EAAqBnQ,IACjCH,KAD6CsQ,EAAqBtQ,KACtDqJ,OADqEiH,EAAqBjH,OAC1ED,MAD0FkH,EAAqBlH,MACjGzX,UADoH2e,EAAqB3e,WAIzM,SAAZ4e,GACAhB,EAAc1jB,IAAI,UAAWoL,EAAOsZ,SAAW,SAGnDhB,EAAc1kB,SACd,IAAI4lB,EAAa3M,EAAQ/D,wBAQzB,OAPAqQ,EAAYnlB,SAAQ,SAAUyD,GAG1B,IAAI7E,EAAQyE,EAAOzB,IAAI6B,GACvB8f,GAAoB3kB,EAAOwlB,GAAiB3gB,GAAK2hB,EAAYG,IAC7DvZ,EAAOvI,GAAO2gB,GAAiB3gB,GAAK+hB,EAAYH,MAE7CrZ,EA2EmByZ,CAAyBzZ,EAAQ3I,EAAQwV,EAASyL,EAAeI,GAUvF,OARIF,EAAuBpd,QACvBod,EAAuBxkB,SAAQ,SAAUf,GACrC,IAAIwE,EAAMxE,EAAG,GAAIL,EAAQK,EAAG,GAC5BoE,EAAOzB,IAAI6B,GAAK7C,IAAIhC,MAI5B0lB,EAAc1kB,SACP,CAAEoM,OAAQkZ,EAAiBlX,cAAeA,GAGjD,MAAO,CAAEhC,OAAQA,EAAQgC,cAAeA,IAoBhD,IAAI0X,GAAkB,SAAUriB,EAAQT,GACpC,OAAO,SAAUoJ,EAAQgC,GACrB,IAAIgV,EA1QZ,SAA6B3f,EAAQT,EAAK3D,EAAI+O,GAC1C,IAAIhC,EAAS,YAAO/M,EAAI,IACpB4Z,EAAUjW,EAAI9C,QAClB,KAAM+Y,aAAmBsJ,aACrB,MAAO,CAAEnW,OAAQA,EAAQgC,cAAeA,GAiB5C,IAAK,IAAIvK,KAdLuK,IACAA,EAAgB,YAAS,GAAIA,IAGjC3K,EAAOrD,SAAQ,SAAUpB,GACrB,IAAIkB,EAAUlB,EAAMgD,MACpB,GAAK0gB,GAAcxiB,GAAnB,CAEA,IAAIkjB,EAAWP,GAAiB3iB,EAAS+Y,GACrCmK,GACApkB,EAAMgC,IAAIoiB,OAIFhX,EAAQ,CACpB,IAAIlM,EAAUkM,EAAOvI,GACrB,GAAK6e,GAAcxiB,GAAnB,CAEA,IAAIkjB,EAAWP,GAAiB3iB,EAAS+Y,GACpCmK,IAGLhX,EAAOvI,GAAOuf,EAIVhV,QAAwCpK,IAAvBoK,EAAcvK,KAC/BuK,EAAcvK,GAAO3D,KAG7B,MAAO,CAAEkM,OAAQA,EAAQgC,cAAeA,GAqOrB2X,CAAoBtiB,EAAQT,EAAKoJ,EAAQgC,GAGxD,OAFAhC,EAASgX,EAAShX,OAClBgC,EAAgBgV,EAAShV,cAVjC,SAAwB3K,EAAQT,EAAKoJ,EAAQgC,GACzC,OAAOsV,GAAiBtX,GAClBqY,GAAiChhB,EAAQT,EAAKoJ,EAAQgC,GACtD,CAAEhC,OAAQA,EAAQgC,cAAeA,GAQ5B4X,CAAeviB,EAAQT,EAAKoJ,EAAQgC,KAInD,SAAS6X,KACL,IAAI5mB,EAAK,mBAAS,GAAI6mB,EAAoB7mB,EAAG,GAAI8mB,EAAuB9mB,EAAG,GAC3E,OAAO,uBAAY,WAAc,OAAO8mB,EAAqBD,EAAoB,KAAO,CACpFA,IAIR,IAsCI7mB,GACA+mB,GAvCAC,GAAoB,wBAAc,OAwCtC,SAAWD,GACPA,EAAkB,QAAI,UACtBA,EAAe,KAAI,OACnBA,EAAiB,OAAI,SAHzB,CAIGA,KAAaA,GAAW,KAC3B,IACIE,GADY,CAACF,GAASG,QAASH,GAASI,KAAMJ,GAASK,QACtC1B,QAAO,SAAUC,EAAKnhB,GAEvC,OADAmhB,EAAInhB,GAAO,GACJmhB,IACR,IACC0B,IAAqB,EACzB,SAASC,GAAkBC,GAEvB,IADA,IAAIC,EAAUD,EAAKpf,OACVkH,EAAI,EAAGA,EAAImY,EAASnY,IACzBkY,EAAKlY,KAETkY,EAAKpf,OAAS,EAElB,SAASsf,KACAJ,KAELC,GAAkBL,GAAKS,SACvBJ,GAAkBL,GAAKU,MACvBL,GAAkBL,GAAKtmB,QACvB0mB,IAAqB,GAMzB,IAAIO,GAAsB,SAAUC,GAAY,OAAO,SAAUjjB,GACxDA,IAELyiB,IAAqB,EACrBJ,GAAKY,GAAUzhB,KAAKxB,MAEpBkjB,KAAc9nB,GAAK,IAChB+mB,GAASG,SAAWU,GAAoBb,GAASG,SACpDlnB,GAAG+mB,GAASI,MAAQS,GAAoBb,GAASI,MACjDnnB,GAAG+mB,GAASK,QAAUQ,GAAoBb,GAASK,QACnDpnB,IAYJ,IAAI+nB,GAA0B,CAC1Bxe,SAAU,GACVD,KAAM,CAAC,IAAM,IAAM,IAAM,IAEzB0e,GArrFyC,CACzCtf,KAAM,SACNK,UAAW,IACXC,QAAS,GACTC,UAAW,GACXC,UAAW,IAurFf,IAAI+e,GAAa,CACbve,EAAG,CACCwe,GAAI,IACJvY,KAAM,QACN8P,IAAK,OACL5P,IAAK,QACL7C,OAAQ,WAEZrD,EAAG,CACCue,GAAI,IACJvY,KAAM,SACN8P,IAAK,MACL5P,IAAK,SACL7C,OAAQ,YAGhB,SAASmb,GAAS1I,EAAK5P,GACnB,OAAQ4P,EAAM5P,GAAO,EAEzB,SAASuY,GAAcxnB,EAAMynB,EAAMC,GAC/B,IAAItoB,EACAuoB,EAAY3nB,EAAK0nB,EAAM3Y,MAAQ0Y,EAAKC,EAAM3Y,MAC1C3C,EAAS,GAsBb,OAlBIub,IACI3nB,EAAK0nB,EAAM7I,OAAS4I,EAAKC,EAAM7I,KAC/BzS,EAAS,EAEJpM,EAAK0nB,EAAMzY,OAASwY,EAAKC,EAAMzY,OACpC7C,EAAS,KAGJhN,EAAK,IACXsoB,EAAM3Y,MAAQ4Y,EACjBvoB,EAAGsoB,EAAMtb,QAAUA,EACnBhN,EAAGsoB,EAAMJ,IAEE,KAAXlb,EACMmb,GAASvnB,EAAK0nB,EAAM7I,KAAM7e,EAAK0nB,EAAMzY,MACnCsY,GAASE,EAAKC,EAAM7I,KAAM4I,EAAKC,EAAMzY,MACvC,EACN7P,EAOR,IAAImb,GAAS,CACTqN,UAAW,SAAUxoB,GAEjB,OADaA,EAAGmb,QAGpBsN,QAAS,SAAU7O,GACf,IAAI8O,EAAa9O,EAAQ8O,WAAYC,EAAY/O,EAAQ+O,UAAWC,EAAchP,EAAQgP,YAAaC,EAAejP,EAAQiP,aAC9H,MAAO,CACH/S,KAAM4S,EACNzS,IAAK0S,EACLzJ,MAAOwJ,EAAaE,EACpBzJ,OAAQwJ,EAAYE,EACpBnK,MAAOkK,EACPjK,OAAQkK,KAIhBC,GAAc,CACdN,UAAW,SAAUxoB,GAEjB,OADkBA,EAAG8oB,aAGzBL,QAAS,SAAU7O,GACf,IAAI5Z,EAAK4Z,EAAQ/D,wBACjB,MAAO,CAAEC,KADwC9V,EAAG8V,KAC/BG,IAD2CjW,EAAGiW,IACpCyI,MADiD1e,EAAG0e,MACtCC,OADsD3e,EAAG2e,OACzCO,MADyDlf,EAAGkf,MAC9CC,OAD8Dnf,EAAGmf,UAIpJ,SAAS4J,GAAkBnP,GACvB,OAAO7D,OAAOiO,iBAAiBpK,GAASoP,SAK5C,SAASC,GAAUzkB,GACf,MAAe,UAARA,GAA2B,WAARA,EAE9B,SAAS0kB,GAAmBvlB,EAAKS,EAAQmO,EAAU4W,EAAkBC,QAC5C,IAAjBA,IAA2BA,GAAe,GAE9C,qBAAWpC,IACX,IAAIpN,EAAUjW,EAAI9C,QAGlB,GA/GO,0BAAgB4mB,IAG3B,SAAuB7N,GACnB,OAAOA,aAAmBsJ,YA2GrBmG,CAAczP,GAAnB,CAMA,IAOIyO,EACAiB,EARAC,EAAeR,GAAkBnP,GACjChZ,EAAO,CACPua,OAAQA,GAAOsN,QAAQ7O,GACvBkP,YAAaA,GAAYL,QAAQ7O,IAGjCnS,EAAY,GAMhBqgB,GAAWJ,SAAQ,WAGfjgB,EAAYmS,EAAQhS,MAAMH,UAC1BmS,EAAQhS,MAAMH,UAAY,MAE9BqgB,GAAWH,MAAK,WAEZU,EAAO,CACHlN,OAAQA,GAAOsN,QAAQ7O,GACvBkP,YAAaA,GAAYL,QAAQ7O,IAErC,IAAI4P,EAAeT,GAAkBnP,GACrC0P,EA5CR,SAAuB1oB,EAAMynB,EAAMe,GAC/B,OAAOA,GAAgBxoB,IAASynB,EAAOlN,GAAS2N,GA2ClCW,CAAcF,EAAcC,EAAcJ,MAExDtB,GAAWnnB,QAAO,WAGd,IAEIS,EArFZ,SAAmBR,EAAMynB,GAErB,OADY,YAAS,GAAID,GAAcxnB,EAAMynB,EAAMJ,GAAWve,GAAI0e,GAAcxnB,EAAMynB,EAAMJ,GAAWte,IAoFvF+f,CAFKJ,EAAQd,UAAU5nB,GAClB0oB,EAAQd,UAAUH,IAGnC,GADoBjnB,EAAMsI,GAAKtI,EAAMuI,GAAKvI,EAAMsd,OAAStd,EAAMud,OAC/D,CAKA,YAAO/E,GAASjY,IAAI,CAAEgoB,QAASvoB,EAAMuoB,QAASC,QAASxoB,EAAMwoB,UAC7D7jB,EAAkBE,OAClB,IAAI8G,EAAS,GACTT,EAAa,GACbN,EAjJZ,SAAoBM,GAChB,MAA6B,mBAAfA,EAgJiBud,CAAWV,GAChCA,EAAiB,CAAE/nB,MAAOA,IAC1B+nB,EAqBNW,EAAe,OAAQ,IAAK,EAAG1oB,EAAMsI,GACrCogB,EAAe,MAAO,IAAK,EAAG1oB,EAAMuI,GAC/Byf,IACDU,EAAe,QAAS,SAAU,EAAGlpB,EAAKkoB,YAAYpK,MAAQ2J,EAAKS,YAAYpK,OAC/EoL,EAAe,SAAU,SAAU,EAAGlpB,EAAKkoB,YAAYnK,OAAS0J,EAAKS,YAAYnK,SAErF5R,EAAOT,WAAaA,EAGpBN,GAAwBuG,EAAS1P,MAAMkK,GAEvChH,EAAkBG,aAzCduB,IAAcmS,EAAQhS,MAAMH,UAAYA,GAU5C,SAASqiB,EAAeC,EAAWC,EAAchb,EAAaib,GAE1D,IAAIC,EAAWjB,GAAUc,GAAaA,EAAYC,EAClD,GAAK5oB,EAAM8oB,GAAX,CAEA,IAAIC,EAAiD,kBAAzBne,EACtB,YAAS,GA7J3B,SAAoCod,GAChC,OAAOA,EAAepB,GAA4BD,GA4JvBqC,CAA2BhB,IAAiBpd,EAC3DrM,EAAQyE,EAAOzB,IAAIqnB,EAAchb,GACjCpD,EAAWjM,EAAMiD,cACrB0J,EAAW0d,GAAgBG,EAAeH,GACpC,YAAS,GAAIG,EAAeH,IAAiB,YAAS,GAAIG,QACtBxlB,IAAtC2H,EAAW0d,GAAcpe,WACzBU,EAAW0d,GAAcpe,SAAWA,GAAY,GAIpDmB,EAAOid,GAAgBhb,EACvB,IAAIqb,EAAiBpB,GAAUc,IAAcT,IAAYnO,GAAuB,EAAdxb,EAAMgD,MACxEhD,EAAMgC,IAAIsoB,EAAeI,SAgBrC,IA6EIC,GA7EAC,GAAS,CACT/lB,IAAK,SACL2Z,aAAc,SAAUne,GACpB,IAAIwqB,EAAqBxqB,EAAGwqB,mBAAoBrB,EAAmBnpB,EAAGmpB,iBAEtE,OADA,cAAYqB,GAAsBrB,GAAmB,gFAC3B,oBAAXpT,WACRyU,IAAsBrB,IAEjC9K,UAAWN,IAAwB,SAAU/d,GACzC,IAAIse,EAAWte,EAAGse,SAAU/L,EAAWvS,EAAGuS,SAAUnO,EAASpE,EAAGoE,OAAQomB,EAAqBxqB,EAAGwqB,mBAChGtB,GAAmB5K,EAAUla,EAAQmO,EADkGvS,EAAGmpB,kBACvEqB,IAAsBA,OAU7FC,GAAmB,IAAI1oB,IAAI,CAC3B,UACA,UACA,OACA,QACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,qBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,kBACA,sBACA,OACA,kBACA,oBACA,cACA,eACA,kBACA,iBACA,cACA,cACA,0BACA,cACA,cACA,QACA,aACA,WACA,oBACA,QACA,aACA,cACA,aACA,WACA,aACA,iBAUJ,SAAS2oB,GAAkBlmB,GACvB,OAAOimB,GAAiBlmB,IAAIC,IAIhC,SAAW8lB,GACPA,EAAwB,OAAI,SAC5BA,EAA8B,aAAI,eAClCA,EAAuC,sBAAI,wBAH/C,CAIGA,KAAoBA,GAAkB,KAezC,IAAIK,GAAa,SAAU/pB,EAAMynB,GAC7B,YAAiB1jB,IAAT0jB,IACHrgB,MAAMC,QAAQrH,IAASoH,MAAMC,QAAQogB,IAf9C,SAAwBA,EAAMznB,GAC1B,GAAa,OAATA,EACA,OAAO,EACX,IAAIgqB,EAAahqB,EAAKuH,OACtB,GAAIyiB,IAAevC,EAAKlgB,OACpB,OAAO,EACX,IAAK,IAAIkH,EAAI,EAAGA,EAAIub,EAAYvb,IAC5B,GAAIzO,EAAKyO,KAAOgZ,EAAKhZ,GACjB,OAAO,EAEf,OAAO,EAMIwb,CAAexC,EAAMznB,GACtBA,IAASynB,IAEvB,SAASyC,GAAwB9qB,EAAI+qB,QACN,IAAvBA,IAAiCA,GAAqB,GACzC/qB,EAAGsM,WAApB,IAAgCyC,EAAgB/O,EAAG+O,cAAehC,EAAS,YAAO/M,EAAI,CAAC,aAAc,kBACrG,OAAO+qB,EACD,YAAS,GAAIhe,EAAQgC,GACrBhC,EA0DV,IA6EIie,GAAM7qB,GApEN8qB,GAAuB,SAAUzb,GACjC,IAV0BgC,EAUtB0Z,EAAoB1b,aAAmB1P,EAAc0P,EAAQ7M,MAAQ6M,EACzE,OAAOxH,MAAM2D,KAAK,IAAI5J,KAXIyP,EAWc0Z,GAPpCljB,MAAMC,QAAQuJ,GACPA,EAEJ,CAACA,GALG,MAgBX2Z,GAAmB,SAAU5D,GAAQ,MAAO,CAC5CA,EAAK6D,KAAK,OAGVC,GAAoB,SAAUC,EAAYC,GAC1C,OAAOD,EAAWF,KAAK,OAASG,EAAWH,KAAK,MAuDpD,IAAII,KAAyBR,GAAO,IAC3BV,GAAgBmB,QAAU1N,IAAwB,SAAU/d,GAE7D,OApHR,SAAwB0rB,EAAqBnZ,EAAUnO,EAAQqK,GAC3D,IAAIkd,EAAkB,kBAAO,GACzBC,EAAa,iBAAO,MACnBA,EAAW/qB,UACZ+qB,EAAW/qB,QAAUiqB,GAAwBY,GAAqB,IAEtE,qBAAU,WACN,IAAIG,EAAkB,GAElBC,EAAkBhB,GAAwBY,GAE1CK,EAAcjB,GAAwBY,GAAqB,GAE/D,IAAK,IAAIlnB,KAAOsnB,EAAiB,CAG7B,IAAIE,EAAuBL,EAAgB9qB,WACrCuD,EAAOG,IAAIC,IACTJ,EAAOzB,IAAI6B,GAAK7B,QAAUopB,EAAYvnB,IAG1CynB,EAAoC,OAArBF,EAAYvnB,GAC3B0nB,EAAkBvB,GAAWiB,EAAW/qB,QAAQ2D,GAAMunB,EAAYvnB,IAClEynB,IAAiBC,GAAmBF,KACpCH,EAAgBrnB,GAAOsnB,EAAgBtnB,IAG/CmnB,EAAgB9qB,SAAU,EAC1B+qB,EAAW/qB,QAAU,YAAS,GAAI+qB,EAAW/qB,QAASkrB,GAClDxf,OAAOC,KAAKqf,GAAiB1jB,QAC7BoK,EAAS1P,MAAM,YAAS,GAAIgpB,EAAiB,CAAEvf,WAAYof,EAAoBpf,YAAcmC,EAAmBM,cAAe2c,EAAoB3c,mBAExJ,CAAC2c,IAoFOS,CADOnsB,EAAG4N,QAAoB5N,EAAGuS,SAAmBvS,EAAGoE,OAAqBpE,EAAGsM,eAG1F0e,GAAKV,GAAgB8B,cAAgBrO,IAAwB,SAAU/d,GACnE,IAAI4N,EAAU5N,EAAG4N,QAASzN,EAAKH,EAAGyU,QAASA,OAAiB,IAAPtU,GAAuBA,EAAIoS,EAAWvS,EAAGuS,SAC9F,OAlDR,SAAqBc,EAASzF,EAAS6G,EAASlC,GAC5C,IAAI8Z,EAAiBpB,GAAqBrd,GACtCmG,EAAU,qBAAWjB,IACrBwZ,EAAuBvY,EAAQ5P,YAAc4P,EAAQ5P,WAAWtD,QAChEsD,EAAa,kBAAO,GACxB,qBAAU,WACN,IAAIooB,GAAgB,EAChB9X,GAIA8X,IAAkBD,EAClBD,EAAiBpB,GAAqBlX,EAAQnG,UAG9C2e,EACIpoB,EAAWtD,SACPwqB,GAAkBJ,GAAqB5X,GAAUgZ,GAE7DE,GAAiBha,EAAS1P,MAAMwpB,GAChCloB,EAAWtD,SAAU,IACtBsqB,GAAiBkB,IA6BTG,CAD2GxsB,EAAGqT,QACzFzF,EAAS6G,EAASlC,MAElDyY,GAAKV,GAAgBmC,uBAAyB1O,IAAwB,SAAU/d,GAE5E,OArBR,SAAuC8C,EAAWyP,GAC9C,IAAI/M,EAAc,mBAAQ,WAAc,OAAO1C,EAAU8P,UAAUL,KAAc,CAC7EzP,IAEJ,qBAAU,WAAc,OAAO,WAC3B0C,GAAeA,OACb,CAACA,IAeIknB,CADO1sB,EAAG4N,QAAoB5N,EAAGuS,aAG5CyY,IAIA2B,GAA0B,SAAU3sB,GAEpC,OADcA,EAAG4N,mBACS6E,IAE1Bma,GAAiB,CAAC,UAAW,UAAW,WAAY,cACpDC,KAAwB1sB,GAAK,IAC1BmqB,GAAgBmB,QAAU,SAAU9lB,GACnC,aAA0BhB,IAAlBgB,EAAMiI,UAVWkf,EAWHnnB,EAAMiI,QAVzB5F,MAAMC,QAAQ6kB,IAAyB,iBAATA,IAW5BH,GAAwBhnB,IAZd,IAAUmnB,GAc7B3sB,GAAGmqB,GAAgB8B,cAAgB,SAAUzmB,GACzC,YAA2BhB,IAAnBgB,EAAMqI,UACV4e,GAAexO,MAAK,SAAU5Z,GAAO,MAA6B,iBAAfmB,EAAMnB,OAEjErE,GAAGmqB,GAAgBmC,uBAAyBE,GAC5CxsB,IACA4sB,GAAwB,SAAUpnB,GAClC,IAAIqnB,OAAkBroB,EACtB,IAAK,IAAIH,KAAO8lB,GACRuC,GAAqBroB,GAAKmB,KAC1BqnB,EAAkBxoB,GAG1B,OAAOwoB,EAAkBxB,GAAsBwB,QAAmBroB,GAGlEsoB,GAAO,CACPzoB,IAAK,OACL2Z,aAAc,SAAUne,EAAIG,GACxB,IAAI+sB,EAAOltB,EAAGktB,KAEVC,IADYhtB,EAAGqT,UAEf4Z,IAAqBF,EAEzB,OADA,aAAWC,GAAiBA,GAAgBC,EAAmB,uDACxDD,GAAgBC,GAE3B/O,UAAWN,IAAwB,SAAUpY,GACzC,IAAIiI,EAAUjI,EAAMiI,QAAS2E,EAAW5M,EAAM4M,SAAUY,EAAgBxN,EAAMwN,cAAe+Z,EAAOvnB,EAAMunB,KACtG1Z,EAAYL,EAAcK,UAC1B6Z,EAAyB,kBAAO,GAEpC,GAAK7Z,GAAc0Z,EAAnB,CAEA,IAAI7Y,EAAYb,EAAUa,UAAW5E,EAAS+D,EAAU/D,OAAQ6d,EAAiB9Z,EAAU8Z,eAC3F,qBAAU,WACFjZ,IACKgZ,EAAuBxsB,SAAWqsB,IACnC3a,EAASjE,SAAS,YAAS,GAAI3I,EAAO,CAAE8J,YAAmB9K,IAAX8K,EAAuBA,EAAS9J,EAAM8J,UACtF8C,EAAS1P,MAAMqqB,GAAM/pB,KAAKmqB,IAE9BD,EAAuBxsB,SAAU,IAE5BwsB,EAAuBxsB,UAC5B+M,GACEA,aAAmB6E,IACrBF,EAAS1P,MAAM+K,GAEdyG,IACDgZ,EAAuBxsB,SAAU,KAEtC,CAACwT,SAIRkZ,GAAc,SAAU/oB,GAAO,OAAQkmB,GAAkBlmB,IAc7D,IACI,IAAIgpB,GAAuB,EAAQ,KAA0BjjB,QAC7DgjB,GAAc,SAAU/oB,GAEpB,OAAIA,EAAI2G,WAAW,OACPuf,GAAkBlmB,GAGnBgpB,GAAqBhpB,IAIxC,MAAOxE,KAYP,IAAIytB,GAAgB,SAAUrpB,EAAQwD,GAClC,IAAIJ,EAAoBN,EAAe9C,GACnCuB,EAAQ,YAAc6B,OAAmB7C,OAAWA,OAAWA,OAAWA,GAAW,GAEzF,OADAgB,EAAMiC,MAAQ,YAAS,GAAIA,EAAOjC,EAAMiC,OACjCjC,GAEP+nB,GAA0B,CAACnD,GAAQnH,GAAMlF,GAAU+O,IACnDU,GAA6BD,GAAwBvlB,OAMzD,SAASylB,GAAsBvP,GAC3B,IAAIwP,EAA6B,iBAAdxP,EACfyP,EAAQD,IAA6C,IAApC3Y,GAAYoH,QAAQ+B,GACzC,MAAO,CACHxJ,gBAAiB,SAAUlR,EAAKiE,EAAOxD,EAAQuB,EAAOc,GAClD,IAAIsnB,EAAiBF,EA3BjC,SAA0BloB,GACtB,IAAIqoB,EAAW,GACf,IAAK,IAAIxpB,KAAOmB,EACR4nB,GAAY/oB,KACZwpB,EAASxpB,GAAOmB,EAAMnB,IAG9B,OAAOwpB,EAoB8BC,CAAiBtoB,GAASA,EACnDuoB,EAAqBJ,EACnBL,GAAcrpB,EAAQwD,GACtB,CAAEA,MAAON,EAAelD,EAAQwD,EAAOnB,IAC7C,OAAO,wBAAc4X,EAAW,YAAS,GAAI0P,EAAgB,CAAEpqB,IAAKA,GAAOuqB,KAqB/EtZ,4BAA6B,SAAUjR,EAAKS,EAAQuB,EAAOoO,EAASxB,EAAUkC,GAC1E,IAAI0Z,EAAmB,GAEnBC,EAAYrB,GAAsBpnB,GAClCyoB,GACAD,EAAiB/nB,KAAK,wBAAcgoB,EAAW,CAAE5pB,IAAK,YAAa6O,QAAS1N,EAAM0N,QAASzF,QAASjI,EAAMiI,QAASI,SAAUrI,EAAMqI,SAAU1B,WAAY3G,EAAM2G,WAAYiG,SAAUA,EAAUkC,QAASA,EAASrQ,OAAQA,KAE7N,IAAK,IAAIiL,EAAI,EAAGA,EAAIse,GAA4Bte,IAAK,CACjD,IAAIrP,EAAK0tB,GAAwBre,GAAI8O,EAAene,EAAGme,aAAc3Z,EAAMxE,EAAGwE,IAAK6pB,EAAcruB,EAAGqe,UAChGF,EAAaxY,EAAOoO,IACpBoa,EAAiB/nB,KAAK,wBAAcioB,EAAa,YAAS,CAAE7pB,IAAKA,GAAOmB,EAAO,CAAEwN,cAAeY,EAAS3P,OAAQA,EAAQmO,SAAUA,EAAU+L,SAAU3a,MAG/J,OAAOwqB,GAEXxZ,uBAAwB,SAAUhR,EAAKS,GACnC,MAAO,CACHA,OAAQA,EACR0J,oBAAqB,SAAUtJ,GAC3B,OAAO,YAAOb,EAAI9C,SAAS8B,IAAI6B,IAKnCuJ,qBAAsB0Y,GAAgBriB,EAAQT,MAM9D,IAAI2qB,GAnsEe,CACf,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MACA,WAilEoC5I,QAAO,SAAUC,EAAKtH,GAC1D,IAAIvc,EAAS8rB,GAAsBvP,GAInC,OADAsH,EAAItH,GAAa3J,GAAsB5S,GAChC6jB,IACR,IACC4I,GAAsBrZ,GAAYwQ,QAAO,SAAUC,EAAKtH,GAIxD,OADAsH,EAAItH,GAAa3J,GAAsBkZ,GAAsBvP,IACtDsH,IACR,IAoBC6I,GAAS,YAAS,CAgBlB/e,OAAQ,SAAgB4O,GACpB,OAAO3J,GAAsBkZ,GAAsBvP,MAClDiQ,GAAsBC,IAwJj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","file":"npm.framer-motion.js","sourcesContent":["import { __assign, __rest } from 'tslib';\nimport { useRef, useEffect, memo, forwardRef, createContext, useMemo, useContext, createElement, Fragment, useCallback, useState, useLayoutEffect, cloneElement, Children, isValidElement } from 'react';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { velocityPerSecond, distance, mix, interpolate, wrap } from '@popmotion/popcorn';\nimport styler, { createStylerFactory, buildStyleProperty, isTransformProp, transformProps, buildSVGAttrs } from 'stylefire';\nimport { invariant, warning } from 'hey-listen';\nimport { number, px, percent, degrees, vw, vh, color, complex } from 'style-value-types';\nimport { action, delay, tween, spring, keyframes as keyframes$1, inertia } from 'popmotion';\nimport * as easingLookup from '@popmotion/easing';\nimport { cubicBezier, linear } from '@popmotion/easing';\n\nvar isFloat = function (value) {\r\n    return !isNaN(parseFloat(value));\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nvar MotionValue = /** @class */ (function () {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    function MotionValue(init, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, transformer = _b.transformer, parent = _b.parent;\r\n        /**\r\n         * Duration, in milliseconds, since last updating frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.timeDelta = 0;\r\n        /**\r\n         * Timestamp of the last time this `MotionValue` was updated.\r\n         *\r\n         * @internal\r\n         */\r\n        this.lastUpdated = 0;\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = false;\r\n        this.updateAndNotify = function (v, render) {\r\n            if (render === void 0) { render = true; }\r\n            _this.prev = _this.current;\r\n            _this.current = _this.transformer ? _this.transformer(v) : v;\r\n            if (_this.updateSubscribers && _this.prev !== _this.current) {\r\n                _this.updateSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            if (_this.children) {\r\n                _this.children.forEach(_this.setChild);\r\n            }\r\n            if (render && _this.renderSubscribers) {\r\n                _this.renderSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            // Update timestamp\r\n            var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\r\n            if (_this.lastUpdated !== timestamp) {\r\n                _this.timeDelta = delta;\r\n                _this.lastUpdated = timestamp;\r\n                sync.postRender(_this.scheduleVelocityCheck);\r\n            }\r\n        };\r\n        /**\r\n         * Notify a subscriber with the latest value.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @param subscriber - The subscriber to notify.\r\n         *\r\n         * @internal\r\n         */\r\n        this.notifySubscriber = function (subscriber) {\r\n            subscriber(_this.current);\r\n        };\r\n        /**\r\n         * Schedule a velocity check for the next frame.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.scheduleVelocityCheck = function () { return sync.postRender(_this.velocityCheck); };\r\n        /**\r\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n         * This ensures velocity calculations return `0`.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityCheck = function (_a) {\r\n            var timestamp = _a.timestamp;\r\n            if (timestamp !== _this.lastUpdated) {\r\n                _this.prev = _this.current;\r\n            }\r\n        };\r\n        /**\r\n         * Updates child `MotionValue`.\r\n         *\r\n         * @param child - Child `MotionValue`.\r\n         *\r\n         * @internal\r\n         */\r\n        this.setChild = function (child) { return child.set(_this.current); };\r\n        this.parent = parent;\r\n        this.transformer = transformer;\r\n        this.set(init, false);\r\n        this.canTrackVelocity = isFloat(this.current);\r\n    }\r\n    /**\r\n     * Creates a new `MotionValue` that's subscribed to the output of this one.\r\n     *\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.addChild = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        var child = new MotionValue(this.current, __assign({ parent: this }, config));\r\n        if (!this.children)\r\n            this.children = new Set();\r\n        this.children.add(child);\r\n        return child;\r\n    };\r\n    /**\r\n     * Stops a `MotionValue` from being subscribed to this one.\r\n     *\r\n     * @param child - The subscribed `MotionValue`\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.removeChild = function (child) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(child);\r\n    };\r\n    /**\r\n     * Subscribes a subscriber function to a subscription list.\r\n     *\r\n     * @param subscriptions - A `Set` of subscribers.\r\n     * @param subscription - A subscriber function.\r\n     */\r\n    MotionValue.prototype.subscribeTo = function (subscriptions, subscription) {\r\n        var _this = this;\r\n        var updateSubscriber = function () { return subscription(_this.current); };\r\n        subscriptions.add(updateSubscriber);\r\n        return function () { return subscriptions.delete(updateSubscriber); };\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * @library\r\n     *\r\n     * ```jsx\r\n     * function MyComponent() {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <Frame x={x} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @motion\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     *\r\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n     *\r\n     * ```jsx\r\n     * useOnChange(x, () => {})\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.onChange = function (subscription) {\r\n        if (!this.updateSubscribers)\r\n            this.updateSubscribers = new Set();\r\n        return this.subscribeTo(this.updateSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` requests a render.\r\n     *\r\n     * @param subscriber - A function that's provided the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.onRenderRequest = function (subscription) {\r\n        if (!this.renderSubscribers)\r\n            this.renderSubscribers = new Set();\r\n        // Render immediately\r\n        this.notifySubscriber(subscription);\r\n        return this.subscribeTo(this.renderSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.attach = function (passiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n    };\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.set = function (v, render) {\r\n        if (render === void 0) { render = true; }\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.get = function () {\r\n        return this.current;\r\n    };\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.getVelocity = function () {\r\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\r\n        return this.canTrackVelocity\r\n            ? // These casts could be avoided if parseFloat would be typed better\r\n                velocityPerSecond(parseFloat(this.current) -\r\n                    parseFloat(this.prev), this.timeDelta)\r\n            : 0;\r\n    };\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.start = function (animation) {\r\n        var _this = this;\r\n        this.stop();\r\n        return new Promise(function (resolve) {\r\n            _this.stopAnimation = animation(resolve);\r\n        }).then(function () { return _this.clearAnimation(); });\r\n    };\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.stop = function () {\r\n        if (this.stopAnimation)\r\n            this.stopAnimation();\r\n        this.clearAnimation();\r\n    };\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.isAnimating = function () {\r\n        return !!this.stopAnimation;\r\n    };\r\n    MotionValue.prototype.clearAnimation = function () {\r\n        this.stopAnimation = null;\r\n    };\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.destroy = function () {\r\n        this.updateSubscribers && this.updateSubscribers.clear();\r\n        this.renderSubscribers && this.renderSubscribers.clear();\r\n        this.parent && this.parent.removeChild(this);\r\n        this.stop();\r\n    };\r\n    return MotionValue;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nfunction motionValue(init, opts) {\r\n    return new MotionValue(init, opts);\r\n}\n\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    var ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\n\nvar isMotionValue = function (value) {\r\n    return value instanceof MotionValue;\r\n};\n\n// Creating a styler factory for the `onUpdate` prop allows all values\r\n// to fire and the `onUpdate` prop will only fire once per frame\r\nvar updateStyler = createStylerFactory({\r\n    onRead: function () { return null; },\r\n    onRender: function (state, _a) {\r\n        var onUpdate = _a.onUpdate;\r\n        return onUpdate(state);\r\n    },\r\n});\r\nvar MotionValuesMap = /** @class */ (function () {\r\n    function MotionValuesMap() {\r\n        this.hasMounted = false;\r\n        this.values = new Map();\r\n        this.unsubscribers = new Map();\r\n    }\r\n    MotionValuesMap.prototype.has = function (key) {\r\n        return this.values.has(key);\r\n    };\r\n    MotionValuesMap.prototype.set = function (key, value) {\r\n        this.values.set(key, value);\r\n        if (this.hasMounted) {\r\n            this.bindValueToOutput(key, value);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.get = function (key, defaultValue) {\r\n        var value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = new MotionValue(defaultValue);\r\n            this.set(key, value);\r\n        }\r\n        return value;\r\n    };\r\n    MotionValuesMap.prototype.forEach = function (callback) {\r\n        return this.values.forEach(callback);\r\n    };\r\n    MotionValuesMap.prototype.bindValueToOutput = function (key, value) {\r\n        var _this = this;\r\n        var onRender = function (v) { return _this.output && _this.output(key, v); };\r\n        var unsubscribeOnRender = value.onRenderRequest(onRender);\r\n        var onChange = function (v) {\r\n            _this.onUpdate && _this.onUpdate.set(key, v);\r\n        };\r\n        var unsubscribeOnChange = value.onChange(onChange);\r\n        if (this.unsubscribers.has(key)) {\r\n            this.unsubscribers.get(key)();\r\n        }\r\n        this.unsubscribers.set(key, function () {\r\n            unsubscribeOnRender();\r\n            unsubscribeOnChange();\r\n        });\r\n    };\r\n    MotionValuesMap.prototype.setOnUpdate = function (onUpdate) {\r\n        this.onUpdate = undefined;\r\n        if (onUpdate) {\r\n            this.onUpdate = updateStyler({ onUpdate: onUpdate });\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.setTransformTemplate = function (transformTemplate) {\r\n        if (this.transformTemplate !== transformTemplate) {\r\n            this.transformTemplate = transformTemplate;\r\n            this.updateTransformTemplate();\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.getTransformTemplate = function () {\r\n        return this.transformTemplate;\r\n    };\r\n    MotionValuesMap.prototype.updateTransformTemplate = function () {\r\n        if (this.output) {\r\n            this.output(\"transform\", this.transformTemplate);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.mount = function (output) {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        if (output)\r\n            this.output = output;\r\n        this.values.forEach(function (value, key) { return _this.bindValueToOutput(key, value); });\r\n        this.updateTransformTemplate();\r\n    };\r\n    MotionValuesMap.prototype.unmount = function () {\r\n        var _this = this;\r\n        this.values.forEach(function (_value, key) {\r\n            var unsubscribe = _this.unsubscribers.get(key);\r\n            unsubscribe && unsubscribe();\r\n        });\r\n    };\r\n    return MotionValuesMap;\r\n}());\r\nvar specialMotionValueProps = new Set([\"dragOriginX\", \"dragOriginY\"]);\r\nvar useMotionValues = function (props) {\r\n    var motionValues = useConstant(function () {\r\n        var map = new MotionValuesMap();\r\n        /**\r\n         * Loop through every prop and add any detected `MotionValue`s. This is SVG-specific\r\n         * code that should be extracted, perhaps considered hollistically with `useMotionStyles`.\r\n         *\r\n         * <motion.circle cx={motionValue(0)} />\r\n         */\r\n        for (var key in props) {\r\n            if (isMotionValue(props[key]) &&\r\n                !specialMotionValueProps.has(key)) {\r\n                map.set(key, props[key]);\r\n            }\r\n        }\r\n        return map;\r\n    });\r\n    motionValues.setOnUpdate(props.onUpdate);\r\n    motionValues.setTransformTemplate(props.transformTemplate);\r\n    return motionValues;\r\n};\n\nvar session = null;\r\nvar syncRenderSession = {\r\n    isOpen: function () { return session !== null; },\r\n    open: function () {\r\n        invariant(!session, \"Sync render session already open\");\r\n        session = [];\r\n    },\r\n    flush: function () {\r\n        invariant(session !== null, \"No sync render session found\");\r\n        session && session.forEach(function (styler) { return styler.render(); });\r\n        session = null;\r\n    },\r\n    push: function (styler) {\r\n        invariant(session !== null, \"No sync render session found\");\r\n        session && session.push(styler);\r\n    },\r\n};\n\nvar isRefObject = function (ref) {\r\n    return typeof ref === \"object\" && ref.hasOwnProperty(\"current\");\r\n};\n\n/**\r\n * Uses the ref that is passed in, or creates a new one\r\n * @param external - External ref\r\n * @internal\r\n */\r\nfunction useExternalRef(internalRef, externalRef) {\r\n    useEffect(function () {\r\n        // If there's no external ref, we don't need to handle it in a special way\r\n        if (!externalRef)\r\n            return;\r\n        if (typeof externalRef === \"function\") {\r\n            externalRef(internalRef.current);\r\n            return function () { return externalRef(null); };\r\n        }\r\n        else if (isRefObject(externalRef)) {\r\n            var mutableExternal_1 = externalRef;\r\n            // If we've been provided a RefObject, we need to assign its current with our\r\n            // current on mount\r\n            mutableExternal_1.current = internalRef.current;\r\n            return function () {\r\n                // We only set our external ref value to null on unmount if it still contains the\r\n                // same element as our internal ref. This is because the component might be a child\r\n                // of `AnimatePresence` where we might be in a situation where a user is providing\r\n                // the same ref to multiple components.\r\n                if (externalRef.current === internalRef.current) {\r\n                    mutableExternal_1.current = null;\r\n                }\r\n            };\r\n        }\r\n    }, []);\r\n}\n\n/**\r\n * `useEffect` gets resolved bottom-up. We defer some optional functionality to child\r\n * components, so to ensure everything runs correctly we export the ref-binding logic\r\n * to a new component rather than in `useMotionValues`.\r\n */\r\nvar MountRefComponent = function (_a, ref) {\r\n    var values = _a.values, isStatic = _a.isStatic, externalRef = _a.externalRef;\r\n    useEffect(function () {\r\n        invariant(ref.current instanceof Element, \"No `ref` found. Ensure components created with `motion.custom` forward refs using `React.forwardRef`\");\r\n        var domStyler = styler(ref.current, {\r\n            preparseOutput: false,\r\n            enableHardwareAcceleration: !isStatic,\r\n        });\r\n        values.mount(function (key, value) {\r\n            domStyler.set(key, value);\r\n            if (syncRenderSession.isOpen()) {\r\n                syncRenderSession.push(domStyler);\r\n            }\r\n        });\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    useExternalRef(ref, externalRef);\r\n    return null;\r\n};\r\nvar MountRef = memo(forwardRef(MountRefComponent));\n\nvar createValueResolver = function (resolver) { return function (values) {\r\n    var resolvedValues = {};\r\n    values.forEach(function (value, key) { return (resolvedValues[key] = resolver(value)); });\r\n    return resolvedValues;\r\n}; };\r\nvar resolveCurrent = createValueResolver(function (value) { return value.get(); });\n\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\r\nvar isTransformOriginProp = function (key) { return transformOriginProps.has(key); };\r\nvar buildStyleAttr = function (values, styleProp, isStatic) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var transformTemplate = values.getTransformTemplate();\r\n    if (transformTemplate) {\r\n        // If `transform` has been manually set as a string, pass that through the template\r\n        // otherwise pass it forward to Stylefire's style property builder\r\n        motionValueStyles.transform = styleProp.transform\r\n            ? transformTemplate({}, styleProp.transform)\r\n            : transformTemplate;\r\n    }\r\n    return buildStyleProperty(__assign({}, styleProp, motionValueStyles), !isStatic);\r\n};\r\nvar useMotionStyles = function (values, styleProp, isStatic, transformValues) {\r\n    if (styleProp === void 0) { styleProp = {}; }\r\n    var style = {};\r\n    var prevMotionStyles = useRef({}).current;\r\n    for (var key in styleProp) {\r\n        var thisStyle = styleProp[key];\r\n        if (isMotionValue(thisStyle)) {\r\n            // If this is a motion value, add it to our MotionValuesMap\r\n            values.set(key, thisStyle);\r\n        }\r\n        else if (!isStatic &&\r\n            (isTransformProp(key) || isTransformOriginProp(key))) {\r\n            // Or if it's a transform prop, create a motion value (or update an existing one)\r\n            // to ensure Stylefire can reconcile all the transform values together.\r\n            // A further iteration on this would be to create a single styler per component that gets\r\n            // used in the DOM renderer's buildStyleAttr *and* animations, then we would only\r\n            // have to convert animating values to `MotionValues` (we could probably remove this entire function).\r\n            // The only architectural consideration is to allow Stylefire to have elements mounted after\r\n            // a styler is created.\r\n            if (!values.has(key)) {\r\n                // If it doesn't exist as a motion value, create it\r\n                values.set(key, motionValue(thisStyle));\r\n            }\r\n            else {\r\n                // Otherwise only update it if it's changed from a previous render\r\n                if (thisStyle !== prevMotionStyles[key]) {\r\n                    var value = values.get(key);\r\n                    value.set(thisStyle);\r\n                }\r\n            }\r\n            prevMotionStyles[key] = thisStyle;\r\n        }\r\n        else {\r\n            style[key] = thisStyle;\r\n        }\r\n    }\r\n    return transformValues ? transformValues(style) : style;\r\n};\n\nvar isKeyframesTarget = function (v) {\r\n    return Array.isArray(v);\r\n};\n\nvar isCustomValue = function (v) {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nvar resolveFinalValueInKeyframes = function (v) {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\n\nvar auto = {\r\n    test: function (v) { return v === \"auto\"; },\r\n    parse: function (v) { return v; },\r\n};\r\nvar dimensionTypes = [number, px, percent, degrees, vw, vh, auto];\r\nvar valueTypes = dimensionTypes.concat([color, complex]);\r\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\r\nvar getDimensionValueType = function (v) {\r\n    return dimensionTypes.find(testValueType(v));\r\n};\r\nvar getValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\nvar underDampedSpring = function () { return ({\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restDelta: 0.5,\r\n    restSpeed: 10,\r\n}); };\r\nvar overDampedSpring = function (to) { return ({\r\n    type: \"spring\",\r\n    stiffness: 700,\r\n    damping: to === 0 ? 100 : 35,\r\n}); };\r\nvar linearTween = function () { return ({\r\n    ease: \"linear\",\r\n    duration: 0.3,\r\n}); };\r\nvar keyframes = function (values) { return ({\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n    values: values,\r\n}); };\r\nvar defaultTransitions = {\r\n    x: underDampedSpring,\r\n    y: underDampedSpring,\r\n    z: underDampedSpring,\r\n    rotate: underDampedSpring,\r\n    rotateX: underDampedSpring,\r\n    rotateY: underDampedSpring,\r\n    rotateZ: underDampedSpring,\r\n    scaleX: overDampedSpring,\r\n    scaleY: overDampedSpring,\r\n    scale: overDampedSpring,\r\n    opacity: linearTween,\r\n    backgroundColor: linearTween,\r\n    color: linearTween,\r\n    default: overDampedSpring,\r\n};\r\nvar getDefaultTransition = function (valueKey, to) {\r\n    var transitionFactory;\r\n    if (isKeyframesTarget(to)) {\r\n        transitionFactory = keyframes;\r\n    }\r\n    else {\r\n        transitionFactory =\r\n            defaultTransitions[valueKey] || defaultTransitions.default;\r\n    }\r\n    return __assign({ to: to }, transitionFactory(to));\r\n};\n\n/**\r\n * A Popmotion action that accepts a single `to` prop. When it starts, it immediately\r\n * updates with `to` and then completes. By using this we can compose instant transitions\r\n * in with the same logic that applies `delay` or returns a `Promise` etc.\r\n *\r\n * Accepting `duration` is a little bit of a hack that simply defers the completetion of\r\n * the animation until after the duration finishes. This is for situations when you're **only**\r\n * animating non-animatable values and then setting something on `transitionEnd`. Really\r\n * you want this to fire after the \"animation\" finishes, rather than instantly.\r\n *\r\n * ```\r\n * animate={{\r\n *   display: 'block',\r\n *   transitionEnd: { display: 'none' }\r\n * }}\r\n * ```\r\n */\r\nvar just = function (_a) {\r\n    var to = _a.to, duration = _a.duration;\r\n    return action(function (_a) {\r\n        var update = _a.update, complete = _a.complete;\r\n        update(to);\r\n        duration ? delay(duration).start({ complete: complete }) : complete();\r\n    });\r\n};\n\nvar easingDefinitionToFunction = function (definition) {\r\n    if (Array.isArray(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\r\n        var x1 = definition[0], y1 = definition[1], x2 = definition[2], y2 = definition[3];\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\nvar isEasingArray = function (ease) {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\n\nvar isDurationAnimation = function (v) {\r\n    return v.hasOwnProperty(\"duration\") || v.hasOwnProperty(\"repeatDelay\");\r\n};\n\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nvar isAnimatable = function (key, value) {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (key === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        complex.test(value) && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\n\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar transitions = { tween: tween, spring: spring, keyframes: keyframes$1, inertia: inertia, just: just };\r\nvar transitionOptionParser = {\r\n    tween: function (opts) {\r\n        if (opts.ease) {\r\n            var ease = isEasingArray(opts.ease) ? opts.ease[0] : opts.ease;\r\n            opts.ease = easingDefinitionToFunction(ease);\r\n        }\r\n        return opts;\r\n    },\r\n    keyframes: function (_a) {\r\n        var from = _a.from, to = _a.to, velocity = _a.velocity, opts = __rest(_a, [\"from\", \"to\", \"velocity\"]);\r\n        if (opts.values && opts.values[0] === null) {\r\n            var values = opts.values.slice();\r\n            values[0] = from;\r\n            opts.values = values;\r\n        }\r\n        if (opts.ease) {\r\n            opts.easings = isEasingArray(opts.ease)\r\n                ? opts.ease.map(easingDefinitionToFunction)\r\n                : easingDefinitionToFunction(opts.ease);\r\n        }\r\n        opts.ease = linear;\r\n        return opts;\r\n    },\r\n};\r\nvar isTransitionDefined = function (_a) {\r\n    var when = _a.when, delay = _a.delay, delayChildren = _a.delayChildren, staggerChildren = _a.staggerChildren, staggerDirection = _a.staggerDirection, transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\"]);\r\n    return Object.keys(transition).length;\r\n};\r\nvar getTransitionDefinition = function (key, to, transitionDefinition) {\r\n    var delay = transitionDefinition ? transitionDefinition.delay : 0;\r\n    // If no object, return default transition\r\n    // A better way to handle this would be to deconstruct out all the shared Orchestration props\r\n    // and see if there's any props remaining\r\n    if (transitionDefinition === undefined ||\r\n        !isTransitionDefined(transitionDefinition)) {\r\n        return __assign({ delay: delay }, getDefaultTransition(key, to));\r\n    }\r\n    var valueTransitionDefinition = transitionDefinition[key] ||\r\n        transitionDefinition.default ||\r\n        transitionDefinition;\r\n    if (valueTransitionDefinition.type === false) {\r\n        return {\r\n            delay: valueTransitionDefinition.hasOwnProperty(\"delay\")\r\n                ? valueTransitionDefinition.delay\r\n                : delay,\r\n            to: isKeyframesTarget(to)\r\n                ? to[to.length - 1]\r\n                : to,\r\n            type: \"just\",\r\n        };\r\n    }\r\n    else if (isKeyframesTarget(to)) {\r\n        return __assign({ values: to, duration: 0.8, delay: delay, ease: \"linear\" }, valueTransitionDefinition, { \r\n            // This animation must be keyframes if we're animating through an array\r\n            type: \"keyframes\" });\r\n    }\r\n    else {\r\n        return __assign({ type: \"tween\", to: to,\r\n            delay: delay }, valueTransitionDefinition);\r\n    }\r\n};\r\nvar preprocessOptions = function (type, opts) {\r\n    return transitionOptionParser[type]\r\n        ? transitionOptionParser[type](opts)\r\n        : opts;\r\n};\r\nvar getAnimation = function (key, value, target, transition) {\r\n    var origin = value.get();\r\n    var isOriginAnimatable = isAnimatable(key, origin);\r\n    var isTargetAnimatable = isAnimatable(key, target);\r\n    // TODO we could probably improve this check to ensure both values are of the same type -\r\n    // for instance 100 to #fff. This might live better in Popmotion.\r\n    warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \" + target + \". \\\"\" + origin + \"\\\" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\r\n    // Parse the `transition` prop and return options for the Popmotion animation\r\n    var _a = getTransitionDefinition(key, target, transition), _b = _a.type, type = _b === void 0 ? \"tween\" : _b, transitionDefinition = __rest(_a, [\"type\"]);\r\n    // If this is an animatable pair of values, return an animation, otherwise use `just`\r\n    var actionFactory = isOriginAnimatable && isTargetAnimatable\r\n        ? transitions[type]\r\n        : just;\r\n    var opts = preprocessOptions(type, __assign({ from: origin, velocity: value.getVelocity() }, transitionDefinition));\r\n    // Convert duration from Framer Motion's seconds into Popmotion's milliseconds\r\n    if (isDurationAnimation(opts)) {\r\n        if (opts.duration) {\r\n            opts.duration = secondsToMilliseconds(opts.duration);\r\n        }\r\n        if (opts.repeatDelay) {\r\n            opts.repeatDelay = secondsToMilliseconds(opts.repeatDelay);\r\n        }\r\n    }\r\n    return [actionFactory, opts];\r\n};\r\n/**\r\n * Start animation on a value. This function completely encapsulates Popmotion-specific logic.\r\n *\r\n * @internal\r\n */\r\nfunction startAnimation(key, value, target, _a) {\r\n    var _b = _a.delay, delay$1 = _b === void 0 ? 0 : _b, transition = __rest(_a, [\"delay\"]);\r\n    return value.start(function (complete) {\r\n        var activeAnimation;\r\n        var _a = getAnimation(key, value, target, transition), animationFactory = _a[0], _b = _a[1], valueDelay = _b.delay, options = __rest(_b, [\"delay\"]);\r\n        if (valueDelay !== undefined) {\r\n            delay$1 = valueDelay;\r\n        }\r\n        var animate = function () {\r\n            var animation = animationFactory(options);\r\n            // Bind animation opts to animation\r\n            activeAnimation = animation.start({\r\n                update: function (v) { return value.set(v); },\r\n                complete: complete,\r\n            });\r\n        };\r\n        // If we're delaying this animation, only resolve it **after** the delay to\r\n        // ensure the value's resolve velocity is up-to-date.\r\n        if (delay$1) {\r\n            activeAnimation = delay(secondsToMilliseconds(delay$1)).start({\r\n                complete: animate,\r\n            });\r\n        }\r\n        else {\r\n            animate();\r\n        }\r\n        return function () {\r\n            if (activeAnimation)\r\n                activeAnimation.stop();\r\n        };\r\n    });\r\n}\n\n/**\r\n * Get the current value of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getCurrent = function (values) {\r\n    var current = {};\r\n    values.forEach(function (value, key) { return (current[key] = value.get()); });\r\n    return current;\r\n};\r\n/**\r\n * Get the current velocity of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getVelocity = function (values) {\r\n    var velocity = {};\r\n    values.forEach(function (value, key) { return (velocity[key] = value.getVelocity()); });\r\n    return velocity;\r\n};\r\n/**\r\n * Check if value is a function that returns a `Target`. A generic typeof === 'function'\r\n * check, just helps with typing.\r\n * @param p -\r\n */\r\nvar isTargetResolver = function (p) {\r\n    return typeof p === \"function\";\r\n};\r\n/**\r\n * Check if value is a list of variant labels\r\n * @param v -\r\n */\r\nvar isVariantLabels = function (v) { return Array.isArray(v); };\r\n/**\r\n * Check if value is a numerical string, ie \"100\" or \"100px\"\r\n */\r\nvar isNumericalString = function (v) { return /^\\d*\\.?\\d+$/.test(v); };\r\n/**\r\n * Control animations for a single component\r\n * @internal\r\n */\r\nvar ValueAnimationControls = /** @class */ (function () {\r\n    function ValueAnimationControls(_a) {\r\n        var _this = this;\r\n        var values = _a.values, readValueFromSource = _a.readValueFromSource, makeTargetAnimatable = _a.makeTargetAnimatable;\r\n        /**\r\n         * A reference to the component's latest props. We could probably ditch this in\r\n         * favour to a reference to the `custom` prop now we don't send all props through\r\n         * to target resolvers.\r\n         */\r\n        this.props = {};\r\n        /**\r\n         * The component's variants, as provided by `variants`\r\n         */\r\n        this.variants = {};\r\n        /**\r\n         * A set of values that we animate back to when a value is cleared of all overrides.\r\n         */\r\n        this.baseTarget = {};\r\n        /**\r\n         * A series of target overrides that we can animate to/from when overrides are set/cleared.\r\n         */\r\n        this.overrides = [];\r\n        /**\r\n         * A series of target overrides as they were originally resolved.\r\n         */\r\n        this.resolvedOverrides = [];\r\n        /**\r\n         * A Set of currently active override indexes\r\n         */\r\n        this.activeOverrides = new Set();\r\n        /**\r\n         * A Set of value keys that are currently animating.\r\n         */\r\n        this.isAnimating = new Set();\r\n        /**\r\n         * Check if the associated `MotionValueMap` has a key with the provided string.\r\n         * Pre-bound to the class so we can provide directly to the `filter` in `checkForNewValues`.\r\n         */\r\n        this.hasValue = function (key) { return !_this.values.has(key); };\r\n        this.values = values;\r\n        this.readValueFromSource = readValueFromSource;\r\n        this.makeTargetAnimatable = makeTargetAnimatable;\r\n        this.values.forEach(function (value, key) { return (_this.baseTarget[key] = value.get()); });\r\n    }\r\n    /**\r\n     * Set the reference to the component's props.\r\n     * @param props -\r\n     */\r\n    ValueAnimationControls.prototype.setProps = function (props) {\r\n        this.props = props;\r\n    };\r\n    /**\r\n     * Set the reference to the component's variants\r\n     * @param variants -\r\n     */\r\n    ValueAnimationControls.prototype.setVariants = function (variants) {\r\n        if (variants)\r\n            this.variants = variants;\r\n    };\r\n    /**\r\n     * Set the component's default transition\r\n     * @param transition -\r\n     */\r\n    ValueAnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        if (transition)\r\n            this.defaultTransition = transition;\r\n    };\r\n    /**\r\n     * Set motion values without animation.\r\n     *\r\n     * @param target -\r\n     * @param isActive -\r\n     */\r\n    ValueAnimationControls.prototype.setValues = function (_a, _b) {\r\n        var _this = this;\r\n        var _c = _b === void 0 ? {} : _b, _d = _c.isActive, isActive = _d === void 0 ? new Set() : _d, priority = _c.priority;\r\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\r\n        target = this.transformValues(__assign({}, target, transitionEnd));\r\n        return Object.keys(target).forEach(function (key) {\r\n            if (isActive.has(key))\r\n                return;\r\n            isActive.add(key);\r\n            var targetValue = resolveFinalValueInKeyframes(target[key]);\r\n            if (_this.values.has(key)) {\r\n                var value = _this.values.get(key);\r\n                value && value.set(targetValue);\r\n            }\r\n            else {\r\n                _this.values.set(key, motionValue(targetValue));\r\n            }\r\n            if (!priority)\r\n                _this.baseTarget[key] = targetValue;\r\n        });\r\n    };\r\n    /**\r\n     * Allows `transformValues` to be set by a component that allows us to\r\n     * transform the values in a given `Target`. This allows Framer Library\r\n     * to extend Framer Motion to animate `Color` variables etc. Currently we have\r\n     * to manually support these extended types here in Framer Motion.\r\n     *\r\n     * @param values -\r\n     */\r\n    ValueAnimationControls.prototype.transformValues = function (values) {\r\n        var transformValues = this.props.transformValues;\r\n        return transformValues ? transformValues(values) : values;\r\n    };\r\n    /**\r\n     * Check a `Target` for new values we haven't animated yet, and add them\r\n     * to the `MotionValueMap`.\r\n     *\r\n     * Currently there's functionality here that is DOM-specific, we should allow\r\n     * this functionality to be injected by the factory that creates DOM-specific\r\n     * components.\r\n     *\r\n     * @param target -\r\n     */\r\n    ValueAnimationControls.prototype.checkForNewValues = function (target) {\r\n        var newValueKeys = Object.keys(target).filter(this.hasValue);\r\n        var numNewValues = newValueKeys.length;\r\n        if (!numNewValues)\r\n            return;\r\n        for (var i = 0; i < numNewValues; i++) {\r\n            var key = newValueKeys[i];\r\n            var targetValue = target[key];\r\n            var value = null;\r\n            // If this is a keyframes value, we can attempt to use the first value in the\r\n            // array as that's going to be the first value of the animation anyway\r\n            if (Array.isArray(targetValue)) {\r\n                value = targetValue[0];\r\n            }\r\n            // If it isn't a keyframes or the first keyframes value was set as `null`, read the\r\n            // value from the DOM. It might be worth investigating whether to check props (for SVG)\r\n            // or props.style (for HTML) if the value exists there before attempting to read.\r\n            if (value === null) {\r\n                value = this.readValueFromSource(key);\r\n                invariant(value !== null, \"No initial value for \\\"\" + key + \"\\\" can be inferred. Ensure an initial value for \\\"\" + key + \"\\\" is defined on the component.\");\r\n            }\r\n            if (typeof value === \"string\" && isNumericalString(value)) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!getValueType(value) && complex.test(targetValue)) {\r\n                // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n                value = complex.getAnimatableNone(targetValue);\r\n            }\r\n            this.values.set(key, motionValue(value));\r\n            this.baseTarget[key] = value;\r\n        }\r\n    };\r\n    /**\r\n     * Resolve a variant from its label or resolver into an actual `Target` we can animate to.\r\n     * @param variant -\r\n     */\r\n    ValueAnimationControls.prototype.resolveVariant = function (variant) {\r\n        if (!variant) {\r\n            return {\r\n                target: undefined,\r\n                transition: undefined,\r\n                transitionEnd: undefined,\r\n            };\r\n        }\r\n        if (isTargetResolver(variant)) {\r\n            // resolve current and velocity\r\n            variant = variant(this.props.custom, getCurrent(this.values), getVelocity(this.values));\r\n        }\r\n        var _a = variant.transition, transition = _a === void 0 ? this.defaultTransition : _a, transitionEnd = variant.transitionEnd, target = __rest(variant, [\"transition\", \"transitionEnd\"]);\r\n        return { transition: transition, transitionEnd: transitionEnd, target: target };\r\n    };\r\n    /**\r\n     * Get the highest active override priority index\r\n     */\r\n    ValueAnimationControls.prototype.getHighestPriority = function () {\r\n        if (!this.activeOverrides.size)\r\n            return 0;\r\n        return Math.max.apply(Math, Array.from(this.activeOverrides));\r\n    };\r\n    /**\r\n     * Set an override. We add this layer of indirection so if, for instance, a tap gesture\r\n     * starts and overrides a hover gesture, when we clear the tap gesture and fallback to the\r\n     * hover gesture, if that hover gesture has changed in the meantime we can go to that rather\r\n     * than the one that was resolved when the hover gesture animation started.\r\n     *\r\n     * @param definition -\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.setOverride = function (definition, overrideIndex) {\r\n        this.overrides[overrideIndex] = definition;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) {\r\n                return child.setOverride(definition, overrideIndex);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Start an override animation.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.startOverride = function (overrideIndex) {\r\n        var override = this.overrides[overrideIndex];\r\n        if (override) {\r\n            return this.start(override, { priority: overrideIndex });\r\n        }\r\n    };\r\n    /**\r\n     * Clear an override. We check every value we animated to in this override to see if\r\n     * its present on any lower-priority overrides. If not, we animate it back to its base target.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.clearOverride = function (overrideIndex) {\r\n        var _this = this;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.clearOverride(overrideIndex); });\r\n        }\r\n        var override = this.overrides[overrideIndex];\r\n        if (!override)\r\n            return;\r\n        this.activeOverrides.delete(overrideIndex);\r\n        var highest = this.getHighestPriority();\r\n        this.resetIsAnimating();\r\n        if (highest) {\r\n            var highestOverride = this.overrides[highest];\r\n            highestOverride && this.startOverride(highest);\r\n        }\r\n        // Figure out which remaining values were affected by the override and animate those\r\n        var overrideTarget = this.resolvedOverrides[overrideIndex];\r\n        if (!overrideTarget)\r\n            return;\r\n        var remainingValues = {};\r\n        for (var key in this.baseTarget) {\r\n            if (overrideTarget[key] !== undefined) {\r\n                remainingValues[key] = this.baseTarget[key];\r\n            }\r\n        }\r\n        this.onStart();\r\n        this.animate(remainingValues).then(function () { return _this.onComplete(); });\r\n    };\r\n    /**\r\n     * Apply a target/variant without any animation\r\n     */\r\n    ValueAnimationControls.prototype.apply = function (definition) {\r\n        if (Array.isArray(definition)) {\r\n            return this.applyVariantLabels(definition);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            return this.applyVariantLabels([definition]);\r\n        }\r\n        else {\r\n            this.setValues(definition);\r\n        }\r\n    };\r\n    /**\r\n     * Apply variant labels without animation\r\n     */\r\n    ValueAnimationControls.prototype.applyVariantLabels = function (variantLabelList) {\r\n        var _this = this;\r\n        var isActive = new Set();\r\n        var reversedList = variantLabelList.slice().reverse();\r\n        reversedList.forEach(function (key) {\r\n            var _a = _this.resolveVariant(_this.variants[key]), target = _a.target, transitionEnd = _a.transitionEnd;\r\n            if (transitionEnd) {\r\n                _this.setValues(transitionEnd, { isActive: isActive });\r\n            }\r\n            if (target) {\r\n                _this.setValues(target, { isActive: isActive });\r\n            }\r\n            if (_this.children && _this.children.size) {\r\n                _this.children.forEach(function (child) {\r\n                    return child.applyVariantLabels(variantLabelList);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.start = function (definition, opts) {\r\n        var _this = this;\r\n        if (opts === void 0) { opts = {}; }\r\n        if (opts.priority) {\r\n            this.activeOverrides.add(opts.priority);\r\n        }\r\n        this.resetIsAnimating(opts.priority);\r\n        var animation;\r\n        if (isVariantLabels(definition)) {\r\n            animation = this.animateVariantLabels(definition, opts);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            animation = this.animateVariant(definition, opts);\r\n        }\r\n        else {\r\n            animation = this.animate(definition, opts);\r\n        }\r\n        this.onStart();\r\n        return animation.then(function () { return _this.onComplete(); });\r\n    };\r\n    ValueAnimationControls.prototype.animate = function (animationDefinition, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.delay, delay = _c === void 0 ? 0 : _c, _d = _b.priority, priority = _d === void 0 ? 0 : _d, transitionOverride = _b.transitionOverride;\r\n        var _e = this.resolveVariant(animationDefinition), target = _e.target, transition = _e.transition, transitionEnd = _e.transitionEnd;\r\n        if (transitionOverride) {\r\n            transition = transitionOverride;\r\n        }\r\n        if (!target)\r\n            return Promise.resolve();\r\n        target = this.transformValues(target);\r\n        if (transitionEnd) {\r\n            transitionEnd = this.transformValues(transitionEnd);\r\n        }\r\n        this.checkForNewValues(target);\r\n        if (this.makeTargetAnimatable) {\r\n            var animatable = this.makeTargetAnimatable(target, transitionEnd);\r\n            target = animatable.target;\r\n            transitionEnd = animatable.transitionEnd;\r\n        }\r\n        if (priority) {\r\n            this.resolvedOverrides[priority] = target;\r\n        }\r\n        this.checkForNewValues(target);\r\n        var animations = [];\r\n        for (var key in target) {\r\n            var value = this.values.get(key);\r\n            if (!value || !target || target[key] === undefined)\r\n                continue;\r\n            var valueTarget = target[key];\r\n            if (!priority) {\r\n                this.baseTarget[key] = resolveFinalValueInKeyframes(valueTarget);\r\n            }\r\n            if (this.isAnimating.has(key))\r\n                continue;\r\n            this.isAnimating.add(key);\r\n            animations.push(startAnimation(key, value, valueTarget, __assign({ delay: delay }, transition)));\r\n        }\r\n        var allAnimations = Promise.all(animations);\r\n        return transitionEnd\r\n            ? allAnimations.then(function () {\r\n                _this.setValues(transitionEnd, { priority: priority });\r\n            })\r\n            : allAnimations;\r\n    };\r\n    ValueAnimationControls.prototype.animateVariantLabels = function (variantLabels, opts) {\r\n        var _this = this;\r\n        var animations = variantLabels.slice().reverse()\r\n            .map(function (label) { return _this.animateVariant(label, opts); });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.animateVariant = function (variantLabel, opts) {\r\n        var _this = this;\r\n        var when = false;\r\n        var delayChildren = 0;\r\n        var staggerChildren = 0;\r\n        var staggerDirection = 1;\r\n        var priority = (opts && opts.priority) || 0;\r\n        var variant = this.variants[variantLabel];\r\n        var getAnimations = variant\r\n            ? function () { return _this.animate(variant, opts); }\r\n            : function () { return Promise.resolve(); };\r\n        var getChildrenAnimations = this.children\r\n            ? function () {\r\n                return _this.animateChildren(variantLabel, delayChildren, staggerChildren, staggerDirection, priority);\r\n            }\r\n            : function () { return Promise.resolve(); };\r\n        if (variant && this.children) {\r\n            var transition = this.resolveVariant(variant).transition;\r\n            if (transition) {\r\n                when = transition.when || when;\r\n                delayChildren = transition.delayChildren || delayChildren;\r\n                staggerChildren = transition.staggerChildren || staggerChildren;\r\n                staggerDirection =\r\n                    transition.staggerDirection || staggerDirection;\r\n            }\r\n        }\r\n        if (when) {\r\n            var _a = when === \"beforeChildren\"\r\n                ? [getAnimations, getChildrenAnimations]\r\n                : [getChildrenAnimations, getAnimations], first = _a[0], last = _a[1];\r\n            return first().then(last);\r\n        }\r\n        else {\r\n            return Promise.all([getAnimations(), getChildrenAnimations()]);\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.animateChildren = function (variantLabel, delayChildren, staggerChildren, staggerDirection, priority) {\r\n        if (delayChildren === void 0) { delayChildren = 0; }\r\n        if (staggerChildren === void 0) { staggerChildren = 0; }\r\n        if (staggerDirection === void 0) { staggerDirection = 1; }\r\n        if (priority === void 0) { priority = 0; }\r\n        if (!this.children) {\r\n            return Promise.resolve();\r\n        }\r\n        var animations = [];\r\n        var maxStaggerDuration = (this.children.size - 1) * staggerChildren;\r\n        var generateStaggerDuration = staggerDirection === 1\r\n            ? function (i) { return i * staggerChildren; }\r\n            : function (i) { return maxStaggerDuration - i * staggerChildren; };\r\n        Array.from(this.children).forEach(function (childControls, i) {\r\n            var animation = childControls.animateVariant(variantLabel, {\r\n                priority: priority,\r\n                delay: delayChildren + generateStaggerDuration(i),\r\n            });\r\n            animations.push(animation);\r\n        });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.onStart = function () {\r\n        var onAnimationStart = this.props.onAnimationStart;\r\n        onAnimationStart && onAnimationStart();\r\n    };\r\n    ValueAnimationControls.prototype.onComplete = function () {\r\n        var onAnimationComplete = this.props.onAnimationComplete;\r\n        onAnimationComplete && onAnimationComplete();\r\n    };\r\n    ValueAnimationControls.prototype.checkOverrideIsAnimating = function (priority) {\r\n        var numOverrides = this.overrides.length;\r\n        for (var i = priority + 1; i < numOverrides; i++) {\r\n            var resolvedOverride = this.resolvedOverrides[i];\r\n            if (resolvedOverride) {\r\n                for (var key in resolvedOverride) {\r\n                    this.isAnimating.add(key);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.resetIsAnimating = function (priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this.isAnimating.clear();\r\n        // If this isn't the highest priority gesture, block the animation\r\n        // of anything that's currently being animated\r\n        if (priority < this.getHighestPriority()) {\r\n            this.checkOverrideIsAnimating(priority);\r\n        }\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.resetIsAnimating(priority); });\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.stop = function () {\r\n        this.values.forEach(function (value) { return value.stop(); });\r\n    };\r\n    /**\r\n     * Add the controls of a child component.\r\n     * @param controls -\r\n     */\r\n    ValueAnimationControls.prototype.addChild = function (controls) {\r\n        if (!this.children) {\r\n            this.children = new Set();\r\n        }\r\n        this.children.add(controls);\r\n        // We set child overrides when `setOverride` is called, but also have to do it here\r\n        // as the first time `setOverride` is called all the children might not have been added yet.\r\n        this.overrides.forEach(function (override, i) {\r\n            override && controls.setOverride(override, i);\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.removeChild = function (controls) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(controls);\r\n    };\r\n    ValueAnimationControls.prototype.resetChildren = function () {\r\n        if (this.children)\r\n            this.children.clear();\r\n    };\r\n    return ValueAnimationControls;\r\n}());\n\n/**\r\n * Use a callback a maximum number of times\r\n * @param callback - Callback to run\r\n * @param times - Maximum number of times to run the callback. Defaults to `1`\r\n *\r\n * @public\r\n */\r\nfunction useMaxTimes(callback, times) {\r\n    if (times === void 0) { times = 1; }\r\n    var count = useRef(0);\r\n    if (count.current++ < times)\r\n        callback();\r\n}\n\n/**\r\n * Control animations on one or more components.\r\n *\r\n * @public\r\n */\r\nvar AnimationControls = /** @class */ (function () {\r\n    function AnimationControls() {\r\n        /**\r\n         * Track whether the host component has mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.hasMounted = false;\r\n        /**\r\n         * Pending animations that are started before a component is mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.pendingAnimations = [];\r\n        /**\r\n         * A collection of linked component animation controls.\r\n         *\r\n         * @internal\r\n         */\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Set variants on this and all child components.\r\n     *\r\n     * @param variants - The variants to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setVariants = function (variants) {\r\n        this.variants = variants;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setVariants(variants);\r\n        });\r\n    };\r\n    /**\r\n     * Set a default transition on this and all child components\r\n     *\r\n     * @param transition - The default transition to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        this.defaultTransition = transition;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setDefaultTransition(transition);\r\n        });\r\n    };\r\n    /**\r\n     * Subscribes a component's animation controls to this.\r\n     *\r\n     * @param controls - The controls to subscribe\r\n     * @returns An unsubscribe function.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        if (this.variants)\r\n            controls.setVariants(this.variants);\r\n        if (this.defaultTransition)\r\n            controls.setDefaultTransition(this.defaultTransition);\r\n        return function () { return _this.componentControls.delete(controls); };\r\n    };\r\n    /**\r\n     * Starts an animation on all linked components.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * controls.start(\"variantLabel\")\r\n     * controls.start({\r\n     *   x: 0,\r\n     *   transition: { duration: 1 }\r\n     * })\r\n     * ```\r\n     *\r\n     * @param definition - Properties or variant label to animate to\r\n     * @param transition - Optional `transtion` to apply to a variant\r\n     * @returns - A `Promise` that resolves when all animations have completed.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.start = function (definition, transitionOverride) {\r\n        var _this = this;\r\n        if (this.hasMounted) {\r\n            var animations_1 = [];\r\n            this.componentControls.forEach(function (controls) {\r\n                var animation = controls.start(definition, {\r\n                    transitionOverride: transitionOverride,\r\n                });\r\n                animations_1.push(animation);\r\n            });\r\n            return Promise.all(animations_1);\r\n        }\r\n        else {\r\n            return new Promise(function (resolve) {\r\n                _this.pendingAnimations.push({\r\n                    animation: [definition, transitionOverride],\r\n                    resolve: resolve,\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Instantly set to a set of properties or a variant.\r\n     *\r\n     * ```jsx\r\n     * // With properties\r\n     * controls.set({ opacity: 0 })\r\n     *\r\n     * // With variants\r\n     * controls.set(\"hidden\")\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     * We could perform a similar trick to `.start` where this can be called before mount\r\n     * and we maintain a list of of pending actions that get applied on mount. But the\r\n     * expectation of `set` is that it happens synchronously and this would be difficult\r\n     * to do before any children have even attached themselves. It's also poor practise\r\n     * and we should discourage render-synchronous `.start` calls rather than lean into this.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.set = function (definition) {\r\n        invariant(this.hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\r\n        return this.componentControls.forEach(function (controls) {\r\n            return controls.apply(definition);\r\n        });\r\n    };\r\n    /**\r\n     * Stops animations on all linked components.\r\n     *\r\n     * ```jsx\r\n     * controls.stop()\r\n     * ```\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.stop = function () {\r\n        this.componentControls.forEach(function (controls) { return controls.stop(); });\r\n    };\r\n    /**\r\n     * Initialises the animation controls.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.mount = function () {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        this.pendingAnimations.forEach(function (_a) {\r\n            var animation = _a.animation, resolve = _a.resolve;\r\n            return _this.start.apply(_this, animation).then(resolve);\r\n        });\r\n    };\r\n    /**\r\n     * Stops all child animations when the host component unmounts.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.unmount = function () {\r\n        this.hasMounted = false;\r\n        this.stop();\r\n    };\r\n    return AnimationControls;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nvar animationControls = function () { return new AnimationControls(); };\n\n/**\r\n * @internal\r\n */\r\nvar MotionContext = createContext({\r\n    static: false,\r\n});\r\nvar isVariantLabel = function (v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n};\r\nvar isAnimationControls = function (v) {\r\n    return v instanceof AnimationControls;\r\n};\r\n/**\r\n * Set up the context for children motion components.\r\n *\r\n * We also use this opportunity to apply `initial` values\r\n */\r\nvar useMotionContext = function (parentContext, controls, values, isStatic, _a) {\r\n    if (isStatic === void 0) { isStatic = false; }\r\n    var initial = _a.initial, animate = _a.animate, variants = _a.variants, whileTap = _a.whileTap, whileHover = _a.whileHover;\r\n    // Override initial with that from a parent context, if defined\r\n    if (parentContext.exitProps &&\r\n        parentContext.exitProps.initial !== undefined) {\r\n        initial = parentContext.exitProps.initial;\r\n    }\r\n    var initialState;\r\n    if (initial === false && !isAnimationControls(animate)) {\r\n        initialState = animate;\r\n    }\r\n    else if (typeof initial !== \"boolean\") {\r\n        initialState = initial;\r\n    }\r\n    // Track mounted status so children can detect whether they were present during their\r\n    // parent's first render\r\n    var hasMounted = useRef(false);\r\n    // We propagate this component's ValueAnimationControls *if* we're being provided variants,\r\n    // if we're being used to control variants, or if we're being passed animation controls.\r\n    // Otherwise this component should be \"invisible\" to variant propagation. This is a slight concession\r\n    // to Framer X where every `Frame` is a `motion` component and it might be if we change that in the future\r\n    // that this restriction is removed.\r\n    var shouldPropagateControls = variants ||\r\n        isVariantLabel(animate) ||\r\n        isVariantLabel(whileTap) ||\r\n        isVariantLabel(whileHover) ||\r\n        isAnimationControls(animate);\r\n    // If this component's `initial` prop is a variant label, propagate it. Otherwise pass the parent's.\r\n    var targetInitial = isVariantLabel(initialState)\r\n        ? initialState\r\n        : parentContext.initial;\r\n    // If this is a variant tree we need to propagate the `animate` prop in case new children are added after\r\n    // the tree initially animates.\r\n    var targetAnimate = isVariantLabel(animate)\r\n        ? animate\r\n        : parentContext.animate;\r\n    // Only allow `initial` to trigger context re-renders if this is a `static` component (ie we're on the Framer canvas)\r\n    // or in another non-animation/interaction environment.\r\n    var initialDependency = isStatic ? targetInitial : null;\r\n    // Only allow `animate` to trigger context re-renders if it's a variant label. If this is an array of\r\n    // variant labels there's probably an optimisation to deep-compare but it might be an over-optimisation.\r\n    // We want to do this as we rely on React's component rendering order each render cycle to determine\r\n    // the new order of any child components for the `staggerChildren` functionality.\r\n    var animateDependency = shouldPropagateControls && isVariantLabel(targetAnimate)\r\n        ? targetAnimate\r\n        : null;\r\n    // The context to provide to the child. We `useMemo` because although `controls` and `initial` are\r\n    // unlikely to change, by making the context an object it'll be considered a new value every render.\r\n    // So all child motion components will re-render as a result.\r\n    var context = useMemo(function () { return ({\r\n        controls: shouldPropagateControls\r\n            ? controls\r\n            : parentContext.controls,\r\n        initial: targetInitial,\r\n        animate: targetAnimate,\r\n        values: values,\r\n        hasMounted: hasMounted,\r\n    }); }, [initialDependency, animateDependency]);\r\n    // Update the `static` property every render. This is unlikely to change but also essentially free.\r\n    context.static = isStatic;\r\n    // Set initial state. If this is a static component (ie in Framer canvas), respond to updates\r\n    // in `initial`.\r\n    useMaxTimes(function () {\r\n        var initialToApply = initialState || parentContext.initial;\r\n        initialToApply && controls.apply(initialToApply);\r\n    }, isStatic ? Infinity : 1);\r\n    useEffect(function () {\r\n        hasMounted.current = true;\r\n    }, []);\r\n    return context;\r\n};\n\n/**\r\n * Creates an imperative set of controls to trigger animations.\r\n *\r\n * This allows a consolidated, uniform API for animations, to be triggered by other APIs like the `animate` prop, or the gesture handlers.\r\n *\r\n * @param values\r\n * @param props\r\n * @param ref\r\n * @param subscribeToParentControls\r\n *\r\n * @internal\r\n */\r\nfunction useValueAnimationControls(config, props, subscribeToParentControls, parentContext) {\r\n    var variants = props.variants, transition = props.transition;\r\n    var parentControls = useContext(MotionContext).controls;\r\n    var controls = useConstant(function () { return new ValueAnimationControls(config); });\r\n    // Reset and resubscribe children every render to ensure stagger order is correct\r\n    if (!parentContext ||\r\n        !parentContext.exitProps ||\r\n        !parentContext.exitProps.isExiting) {\r\n        controls.resetChildren();\r\n        controls.setProps(props);\r\n        controls.setVariants(variants);\r\n        controls.setDefaultTransition(transition);\r\n        if (subscribeToParentControls && parentControls) {\r\n            parentControls.addChild(controls);\r\n        }\r\n    }\r\n    useEffect(function () { return function () {\r\n        // Remove reference to onAnimationComplete from controls. All the MotionValues\r\n        // are unsubscribed from this component separately. We let animations run out\r\n        // as they might be animating other components.\r\n        var onAnimationComplete = props.onAnimationComplete, unmountProps = __rest(props, [\"onAnimationComplete\"]);\r\n        controls.setProps(unmountProps);\r\n        parentControls && parentControls.removeChild(controls);\r\n    }; }, []);\r\n    return controls;\r\n}\n\nvar checkShouldInheritVariant = function (_a) {\r\n    var animate = _a.animate, variants = _a.variants, _b = _a.inherit, inherit = _b === void 0 ? true : _b;\r\n    return (inherit &&\r\n        !!variants &&\r\n        (!animate || animate instanceof AnimationControls));\r\n};\n\n/**\r\n * @internal\r\n */\r\nvar createMotionComponent = function (_a) {\r\n    var getValueControlsConfig = _a.getValueControlsConfig, loadFunctionalityComponents = _a.loadFunctionalityComponents, renderComponent = _a.renderComponent;\r\n    function MotionComponent(props, externalRef) {\r\n        var ref = useRef(null);\r\n        var parentContext = useContext(MotionContext);\r\n        var isStatic = parentContext.static || props.static || false;\r\n        var values = useMotionValues(props);\r\n        var style = useMotionStyles(values, props.style, isStatic, props.transformValues);\r\n        var shouldInheritVariant = checkShouldInheritVariant(props);\r\n        var controlsConfig = useConstant(function () {\r\n            return getValueControlsConfig(ref, values);\r\n        });\r\n        var controls = useValueAnimationControls(controlsConfig, props, shouldInheritVariant, parentContext);\r\n        var context = useMotionContext(parentContext, controls, values, isStatic, props);\r\n        var functionality = isStatic\r\n            ? null\r\n            : loadFunctionalityComponents(ref, values, props, parentContext, controls, shouldInheritVariant);\r\n        var renderedComponent = renderComponent(ref, style, values, props, isStatic);\r\n        return (createElement(Fragment, null,\r\n            createElement(MountRef, { ref: ref, externalRef: externalRef, values: values, isStatic: isStatic }),\r\n            functionality,\r\n            createElement(MotionContext.Provider, { value: context }, renderedComponent)));\r\n    }\r\n    return forwardRef(MotionComponent);\r\n};\n\n/**\r\n * @internal\r\n */\r\nvar htmlElements = [\r\n    \"a\",\r\n    \"abbr\",\r\n    \"address\",\r\n    \"area\",\r\n    \"article\",\r\n    \"aside\",\r\n    \"audio\",\r\n    \"b\",\r\n    \"base\",\r\n    \"bdi\",\r\n    \"bdo\",\r\n    \"big\",\r\n    \"blockquote\",\r\n    \"body\",\r\n    \"br\",\r\n    \"button\",\r\n    \"canvas\",\r\n    \"caption\",\r\n    \"cite\",\r\n    \"code\",\r\n    \"col\",\r\n    \"colgroup\",\r\n    \"data\",\r\n    \"datalist\",\r\n    \"dd\",\r\n    \"del\",\r\n    \"details\",\r\n    \"dfn\",\r\n    \"dialog\",\r\n    \"div\",\r\n    \"dl\",\r\n    \"dt\",\r\n    \"em\",\r\n    \"embed\",\r\n    \"fieldset\",\r\n    \"figcaption\",\r\n    \"figure\",\r\n    \"footer\",\r\n    \"form\",\r\n    \"h1\",\r\n    \"h2\",\r\n    \"h3\",\r\n    \"h4\",\r\n    \"h5\",\r\n    \"h6\",\r\n    \"head\",\r\n    \"header\",\r\n    \"hgroup\",\r\n    \"hr\",\r\n    \"html\",\r\n    \"i\",\r\n    \"iframe\",\r\n    \"img\",\r\n    \"input\",\r\n    \"ins\",\r\n    \"kbd\",\r\n    \"keygen\",\r\n    \"label\",\r\n    \"legend\",\r\n    \"li\",\r\n    \"link\",\r\n    \"main\",\r\n    \"map\",\r\n    \"mark\",\r\n    \"menu\",\r\n    \"menuitem\",\r\n    \"meta\",\r\n    \"meter\",\r\n    \"nav\",\r\n    \"noscript\",\r\n    \"object\",\r\n    \"ol\",\r\n    \"optgroup\",\r\n    \"option\",\r\n    \"output\",\r\n    \"p\",\r\n    \"param\",\r\n    \"picture\",\r\n    \"pre\",\r\n    \"progress\",\r\n    \"q\",\r\n    \"rp\",\r\n    \"rt\",\r\n    \"ruby\",\r\n    \"s\",\r\n    \"samp\",\r\n    \"script\",\r\n    \"section\",\r\n    \"select\",\r\n    \"small\",\r\n    \"source\",\r\n    \"span\",\r\n    \"strong\",\r\n    \"style\",\r\n    \"sub\",\r\n    \"summary\",\r\n    \"sup\",\r\n    \"table\",\r\n    \"tbody\",\r\n    \"td\",\r\n    \"textarea\",\r\n    \"tfoot\",\r\n    \"th\",\r\n    \"thead\",\r\n    \"time\",\r\n    \"title\",\r\n    \"tr\",\r\n    \"track\",\r\n    \"u\",\r\n    \"ul\",\r\n    \"var\",\r\n    \"video\",\r\n    \"wbr\",\r\n    \"webview\",\r\n];\r\n/**\r\n * @internal\r\n */\r\nvar svgElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"clipPath\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"feBlend\",\r\n    \"feColorMatrix\",\r\n    \"feComponentTransfer\",\r\n    \"feComposite\",\r\n    \"feConvolveMatrix\",\r\n    \"feDiffuseLighting\",\r\n    \"feDisplacementMap\",\r\n    \"feDistantLight\",\r\n    \"feDropShadow\",\r\n    \"feFlood\",\r\n    \"feFuncA\",\r\n    \"feFuncB\",\r\n    \"feFuncG\",\r\n    \"feFuncR\",\r\n    \"feGaussianBlur\",\r\n    \"feImage\",\r\n    \"feMerge\",\r\n    \"feMergeNode\",\r\n    \"feMorphology\",\r\n    \"feOffset\",\r\n    \"fePointLight\",\r\n    \"feSpecularLighting\",\r\n    \"feSpotLight\",\r\n    \"feTile\",\r\n    \"feTurbulence\",\r\n    \"filter\",\r\n    \"foreignObject\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"linearGradient\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"radialGradient\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"svg\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"text\",\r\n    \"textPath\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\n\n/** @public */\r\nvar Point;\r\n(function (Point) {\r\n    /** @beta */\r\n    Point.subtract = function (a, b) {\r\n        return { x: a.x - b.x, y: a.y - b.y };\r\n    };\r\n    /** @beta */\r\n    Point.relativeTo = function (idOrElem) {\r\n        var elem;\r\n        var getElem = function () {\r\n            // Caching element here could be leaky because of React lifecycle\r\n            if (elem !== undefined)\r\n                return elem;\r\n            if (typeof idOrElem === \"string\") {\r\n                elem = document.getElementById(idOrElem);\r\n            }\r\n            else {\r\n                elem = idOrElem;\r\n            }\r\n            return elem;\r\n        };\r\n        return function (_a) {\r\n            var x = _a.x, y = _a.y;\r\n            var localElem = getElem();\r\n            if (!localElem)\r\n                return undefined;\r\n            var rect = localElem.getBoundingClientRect();\r\n            return {\r\n                x: x - rect.left - window.scrollX,\r\n                y: y - rect.top - window.scrollY,\r\n            };\r\n        };\r\n    };\r\n})(Point || (Point = {}));\n\n/**\r\n * @internal\r\n */\r\nvar MotionPluginContext = createContext({\r\n    transformPagePoint: function (p) { return p; },\r\n});\r\n/**\r\n * @internal\r\n * @internalremarks For now I think this should remain a private API for our own use\r\n * until we can figure out a nicer way of allowing people to add these\r\n */\r\nfunction MotionPlugins(_a) {\r\n    var children = _a.children, props = __rest(_a, [\"children\"]);\r\n    var pluginContext = useContext(MotionPluginContext);\r\n    var value = useRef(__assign({}, pluginContext)).current;\r\n    // Mutative to prevent triggering rerenders in all listening\r\n    // components every time this component renders\r\n    for (var key in props) {\r\n        value[key] = props[key];\r\n    }\r\n    return (createElement(MotionPluginContext.Provider, { value: value }, children));\r\n}\n\nvar isViewportScrollBlocked = false;\r\nvar isBrowser = typeof window !== \"undefined\";\r\nif (isBrowser) {\r\n    document.addEventListener(\"touchmove\", function (event) {\r\n        if (isViewportScrollBlocked) {\r\n            event.preventDefault();\r\n        }\r\n    }, { passive: false });\r\n}\r\nvar blockViewportScroll = function () { return (isViewportScrollBlocked = true); };\r\nvar unblockViewportScroll = function () { return (isViewportScrollBlocked = false); };\n\nfunction isMouseEvent(event) {\r\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\r\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\r\n        return !!(event.pointerType === \"mouse\");\r\n    }\r\n    return event instanceof MouseEvent;\r\n}\r\nfunction isTouchEvent(event) {\r\n    var hasTouches = !!event.touches;\r\n    return hasTouches;\r\n}\n\nfunction useUnmountEffect(callback) {\r\n    return useEffect(function () { return function () { return callback(); }; }, []);\r\n}\n\nfunction addDomEvent(target, eventName, handler, options) {\r\n    if (!handler)\r\n        return;\r\n    target.addEventListener(eventName, handler, options);\r\n    return function () { return target.removeEventListener(eventName, handler, options); };\r\n}\r\n/**\r\n * Attaches an event listener directly to the provided DOM element.\r\n *\r\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n * event handlers.\r\n *\r\n * ```jsx\r\n * const ref = useRef(null)\r\n *\r\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n *\r\n * return <div ref={ref} />\r\n * ```\r\n *\r\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n * @param eventName - Name of the event you want listen for.\r\n * @param handler - Function to fire when receiving the event.\r\n * @param options - Options to pass to `Event.addEventListener`.\r\n *\r\n * @public\r\n */\r\nfunction useDomEvent(ref, eventName, handler, options) {\r\n    useEffect(function () {\r\n        var element = ref.current;\r\n        if (handler && element) {\r\n            return addDomEvent(element, eventName, handler, options);\r\n        }\r\n    }, [ref, eventName, handler, options]);\r\n}\n\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\r\nfunction filterPrimaryPointer(eventHandler) {\r\n    if (!eventHandler)\r\n        return undefined;\r\n    return function (event) {\r\n        var isMouseEvent = event instanceof MouseEvent;\r\n        var isPrimaryPointer = !isMouseEvent ||\r\n            (isMouseEvent && event.button === 0);\r\n        if (isPrimaryPointer) {\r\n            eventHandler(event);\r\n        }\r\n    };\r\n}\r\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\r\nfunction pointFromTouch(e) {\r\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\r\n    var _a = primaryTouch || defaultPagePoint, pageX = _a.pageX, pageY = _a.pageY;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction pointFromMouse(_a) {\r\n    var _b = _a.pageX, pageX = _b === void 0 ? 0 : _b, _c = _a.pageY, pageY = _c === void 0 ? 0 : _c;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: isTouchEvent(event)\r\n            ? pointFromTouch(event)\r\n            : pointFromMouse(event),\r\n    };\r\n}\r\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\r\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\r\n    if (!handler)\r\n        return;\r\n    var listener = function (event) { return handler(event, extractEventInfo(event)); };\r\n    return shouldFilterPrimaryPointer\r\n        ? filterPrimaryPointer(listener)\r\n        : listener;\r\n};\n\nvar isBrowser$1 = typeof window !== \"undefined\";\r\n// We check for event support via functions in case they've been mocked by a testing suite.\r\nvar supportsPointerEvents = function () {\r\n    return isBrowser$1 && window.onpointerdown === null;\r\n};\r\nvar supportsTouchEvents = function () {\r\n    return isBrowser$1 && window.ontouchstart === null;\r\n};\r\nvar supportsMouseEvents = function () {\r\n    return isBrowser$1 && window.onmousedown === null;\r\n};\n\nvar mouseEventNames = {\r\n    pointerdown: \"mousedown\",\r\n    pointermove: \"mousemove\",\r\n    pointerup: \"mouseup\",\r\n    pointercancel: \"mousecancel\",\r\n    pointerover: \"mouseover\",\r\n    pointerout: \"mouseout\",\r\n    pointerenter: \"mouseenter\",\r\n    pointerleave: \"mouseleave\",\r\n};\r\nvar touchEventNames = {\r\n    pointerdown: \"touchstart\",\r\n    pointermove: \"touchmove\",\r\n    pointerup: \"touchend\",\r\n    pointercancel: \"touchcancel\",\r\n};\r\nfunction getPointerEventName(name) {\r\n    if (supportsPointerEvents()) {\r\n        return name;\r\n    }\r\n    else if (supportsTouchEvents()) {\r\n        return touchEventNames[name];\r\n    }\r\n    else if (supportsMouseEvents()) {\r\n        return mouseEventNames[name];\r\n    }\r\n    return name;\r\n}\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\r\nfunction usePointerEvent(ref, eventName, handler, options) {\r\n    return useDomEvent(ref, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\n\nfunction startDevicePoint(session) {\r\n    return session.pointHistory[0];\r\n}\r\nfunction lastDevicePoint(session) {\r\n    return session.pointHistory[session.pointHistory.length - 1];\r\n}\r\nfunction getVelocity$1(session, timeDelta) {\r\n    var pointHistory = session.pointHistory;\r\n    if (pointHistory.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var i = pointHistory.length - 1;\r\n    var timestampedPoint = null;\r\n    var lastPoint = lastDevicePoint(session);\r\n    while (i >= 0) {\r\n        timestampedPoint = pointHistory[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n/**\r\n *\r\n * @param handlers -\r\n * @param ref -\r\n *\r\n * @internalremarks\r\n * Currently this sets new pan gesture functions every render. The memo route has been explored\r\n * in the past but ultimately we're still creating new functions every render. An optimisation\r\n * to explore is creating the pan gestures and loading them into a `ref`.\r\n *\r\n * @internal\r\n */\r\nfunction usePanGesture(_a, ref) {\r\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart;\r\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\r\n    var session = useRef(null);\r\n    var lastMoveEvent = useRef(null);\r\n    var lastMoveEventInfo = useRef(null);\r\n    var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\r\n    var pointerEventSubscription = useRef(null);\r\n    // Load the callbacks into mutable state to ensure that even if we don't create a new\r\n    // gesture handler every render, we still reference the latest callbacks (which are almost certain to change per render)\r\n    var handlers = useRef({}).current;\r\n    handlers.onPanSessionStart = onPanSessionStart;\r\n    handlers.onPanStart = onPanStart;\r\n    handlers.onPan = onPan;\r\n    handlers.onPanEnd = onPanEnd;\r\n    function removePointerEvents() {\r\n        pointerEventSubscription.current && pointerEventSubscription.current();\r\n        pointerEventSubscription.current = null;\r\n    }\r\n    function getPanInfo(_a) {\r\n        var point = _a.point;\r\n        var currentPoint = session.current;\r\n        // TODO: A potential optimisation here that might be a breaking change would be\r\n        // to keep one mutable ref to a point that we update\r\n        return {\r\n            point: point,\r\n            delta: Point.subtract(point, lastDevicePoint(currentPoint)),\r\n            offset: Point.subtract(point, startDevicePoint(currentPoint)),\r\n            velocity: getVelocity$1(currentPoint, 0.1),\r\n        };\r\n    }\r\n    function transformPoint(info) {\r\n        return { point: transformPagePoint(info.point) };\r\n    }\r\n    function cancelPan() {\r\n        removePointerEvents();\r\n        cancelSync.update(updatePoint);\r\n        unblockViewportScroll();\r\n    }\r\n    function updatePoint() {\r\n        if (!session.current ||\r\n            !lastMoveEvent.current ||\r\n            !lastMoveEventInfo.current) {\r\n            warning(false, \"onPointerMove fired without pointer session\");\r\n            cancelPan();\r\n            return;\r\n        }\r\n        var info = getPanInfo(lastMoveEventInfo.current);\r\n        var panStarted = session.current.startEvent !== undefined;\r\n        // Only start panning if the offset is larger than 3 pixels. If we make it\r\n        // any larger than this we'll want to reset the pointer history\r\n        // on the first update to avoid visual snapping to the cursoe.\r\n        var distancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\r\n        if (!panStarted && !distancePastThreshold)\r\n            return;\r\n        var point = info.point;\r\n        var timestamp = getFrameData().timestamp;\r\n        session.current.pointHistory.push(__assign({}, point, { timestamp: timestamp }));\r\n        if (!panStarted) {\r\n            handlers.onPanStart &&\r\n                handlers.onPanStart(lastMoveEvent.current, info);\r\n            session.current.startEvent = lastMoveEvent.current;\r\n        }\r\n        handlers.onPan && handlers.onPan(lastMoveEvent.current, info);\r\n    }\r\n    function onPointerMove(event, info) {\r\n        lastMoveEvent.current = event;\r\n        lastMoveEventInfo.current = transformPoint(info);\r\n        // Because Safari doesn't trigger mouseup events when it's above a `<select>`\r\n        if (isMouseEvent(event) && event.buttons === 0) {\r\n            onPointerUp(event, info);\r\n            return;\r\n        }\r\n        // Throttle mouse move event to once per frame\r\n        sync.update(updatePoint, true);\r\n    }\r\n    function onPointerUp(event, info) {\r\n        cancelPan();\r\n        if (!session.current) {\r\n            warning(false, \"onPointerUp fired without pointer session\");\r\n            return;\r\n        }\r\n        handlers.onPanEnd &&\r\n            handlers.onPanEnd(event, getPanInfo(transformPoint(info)));\r\n        session.current = null;\r\n    }\r\n    function onPointerDown(event, info) {\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (isTouchEvent(event) && event.touches.length > 1)\r\n            return;\r\n        var initialInfo = transformPoint(info);\r\n        var point = initialInfo.point;\r\n        var timestamp = getFrameData().timestamp;\r\n        session.current = {\r\n            target: event.target,\r\n            pointHistory: [__assign({}, point, { timestamp: timestamp })],\r\n        };\r\n        handlers.onPanSessionStart &&\r\n            handlers.onPanSessionStart(event, getPanInfo(initialInfo));\r\n        removePointerEvents();\r\n        var removeOnPointerMove = addPointerEvent(window, \"pointermove\", onPointerMove);\r\n        var removeOnPointerUp = addPointerEvent(window, \"pointerup\", onPointerUp);\r\n        pointerEventSubscription.current = function () {\r\n            removeOnPointerMove && removeOnPointerMove();\r\n            removeOnPointerUp && removeOnPointerUp();\r\n        };\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasPanEvents && onPointerDown);\r\n    useUnmountEffect(cancelPan);\r\n}\n\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nvar isNodeOrChild = function (parent, child) {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\n\nvar order = [\"whileHover\", \"whileTap\", \"whileDrag\"];\r\nvar getGesturePriority = function (gesture) {\r\n    return order.indexOf(gesture) + 1;\r\n};\n\nfunction createLock(name) {\r\n    var lock = null;\r\n    return function () {\r\n        var openLock = function () {\r\n            lock = null;\r\n        };\r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\r\nvar globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    var lock = false;\r\n    if (drag === \"y\") {\r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        var openHorizontal_1 = globalHorizontalLock();\r\n        var openVertical_1 = globalVerticalLock();\r\n        if (openHorizontal_1 && openVertical_1) {\r\n            lock = function () {\r\n                openHorizontal_1();\r\n                openVertical_1();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal_1)\r\n                openHorizontal_1();\r\n            if (openVertical_1)\r\n                openVertical_1();\r\n        }\r\n    }\r\n    return lock;\r\n}\n\nvar tapGesturePriority = getGesturePriority(\"whileTap\");\r\n/**\r\n * @param handlers -\r\n * @internal\r\n */\r\nfunction useTapGesture(_a, ref) {\r\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, controls = _a.controls;\r\n    var hasTapListeners = onTap || onTapStart || onTapCancel || whileTap;\r\n    var isTapping = useRef(false);\r\n    var cancelPointerEventListener = useRef(null);\r\n    function removePointerUp() {\r\n        cancelPointerEventListener.current &&\r\n            cancelPointerEventListener.current();\r\n        cancelPointerEventListener.current = null;\r\n    }\r\n    if (whileTap && controls) {\r\n        controls.setOverride(whileTap, tapGesturePriority);\r\n    }\r\n    // We load this event handler into a ref so we can later refer to\r\n    // onPointerUp.current which will always have reference to the latest props\r\n    var onPointerUp = useRef(null);\r\n    onPointerUp.current = function (event, info) {\r\n        var element = ref.current;\r\n        removePointerUp();\r\n        if (!isTapping.current || !element)\r\n            return;\r\n        isTapping.current = false;\r\n        if (controls && whileTap) {\r\n            controls.clearOverride(tapGesturePriority);\r\n        }\r\n        // Check the gesture lock - if we get it, it means no drag gesture is active\r\n        // and we can safely fire the tap gesture.\r\n        var openGestureLock = getGlobalLock(true);\r\n        if (!openGestureLock)\r\n            return;\r\n        openGestureLock();\r\n        if (!isNodeOrChild(element, event.target)) {\r\n            onTapCancel && onTapCancel(event, info);\r\n        }\r\n        else {\r\n            onTap && onTap(event, info);\r\n        }\r\n    };\r\n    function onPointerDown(event, info) {\r\n        removePointerUp();\r\n        cancelPointerEventListener.current = addPointerEvent(window, \"pointerup\", function (event, info) { return onPointerUp.current(event, info); });\r\n        var element = ref.current;\r\n        if (!element || isTapping.current)\r\n            return;\r\n        isTapping.current = true;\r\n        onTapStart && onTapStart(event, info);\r\n        if (controls && whileTap) {\r\n            controls.startOverride(tapGesturePriority);\r\n        }\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasTapListeners ? onPointerDown : undefined);\r\n    useUnmountEffect(removePointerUp);\r\n}\n\nvar hoverPriority = getGesturePriority(\"whileHover\");\r\nvar filterTouch = function (listener) { return function (event, info) {\r\n    if (isMouseEvent(event))\r\n        listener(event, info);\r\n}; };\r\n/**\r\n *\r\n * @param props\r\n * @param ref\r\n * @internal\r\n */\r\nfunction useHoverGesture(_a, ref) {\r\n    var whileHover = _a.whileHover, onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, controls = _a.controls;\r\n    if (whileHover && controls) {\r\n        controls.setOverride(whileHover, hoverPriority);\r\n    }\r\n    usePointerEvent(ref, \"pointerenter\", filterTouch(function (event, info) {\r\n        if (onHoverStart)\r\n            onHoverStart(event, info);\r\n        if (whileHover && controls) {\r\n            controls.startOverride(hoverPriority);\r\n        }\r\n    }));\r\n    usePointerEvent(ref, \"pointerleave\", filterTouch(function (event, info) {\r\n        if (onHoverEnd)\r\n            onHoverEnd(event, info);\r\n        if (whileHover && controls) {\r\n            controls.clearOverride(hoverPriority);\r\n        }\r\n    }));\r\n}\n\n/**\r\n * Add pan and tap gesture recognition to an element.\r\n *\r\n * @param props - Gesture event handlers\r\n * @param ref - React `ref` containing a DOM `Element`\r\n * @public\r\n */\r\nfunction useGestures(props, ref) {\r\n    usePanGesture(props, ref);\r\n    useTapGesture(props, ref);\r\n    useHoverGesture(props, ref);\r\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\r\n    hook(props);\r\n    return null;\r\n}; };\n\nvar gestureProps = [\r\n    \"drag\",\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileTap\",\r\n    \"whileHover\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n];\r\nvar Gestures = {\r\n    key: \"gestures\",\r\n    shouldRender: function (props) {\r\n        return gestureProps.some(function (key) { return props.hasOwnProperty(key); });\r\n    },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, props = __rest(_a, [\"innerRef\"]);\r\n        useGestures(props, innerRef);\r\n    }),\r\n};\n\n/**\r\n * A hook to use the window resize listener. In future it might be cool to use `ResizeObserver`\r\n * but it currently needs to be polyfilled and the size trade-off isn't there for this use-case.\r\n *\r\n * TODO: Debounce this bad boy\r\n *\r\n * @param onResize\r\n */\r\nfunction useResize(element, onResize) {\r\n    useEffect(function () {\r\n        if (!element || !isRefObject(element))\r\n            return;\r\n        window.addEventListener(\"resize\", onResize);\r\n        return function () { return window.removeEventListener(\"resize\", onResize); };\r\n    }, [element, onResize]);\r\n}\n\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * export function MyComponent() {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <Frame scale={scale} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\r\nfunction useMotionValue(initial) {\r\n    return useConstant(function () { return motionValue(initial); });\r\n}\n\n/**\r\n * Don't block the default pointerdown behaviour of these elements.\r\n */\r\nvar allowDefaultPointerDown = new Set([\"INPUT\", \"TEXTAREA\", \"SELECT\"]);\r\nvar getBoundingBox = function (ref, transformPagePoint) {\r\n    var rect = ref.current.getBoundingClientRect();\r\n    var _a = transformPagePoint({\r\n        x: rect.left,\r\n        y: rect.top,\r\n    }), left = _a.x, top = _a.y;\r\n    var _b = transformPagePoint({\r\n        x: rect.width,\r\n        y: rect.height,\r\n    }), width = _b.x, height = _b.y;\r\n    return { left: left, top: top, width: width, height: height };\r\n};\r\nvar getCurrentOffset = function (point) {\r\n    return point ? point.get() : 0;\r\n};\r\n/**\r\n * Takes a parent Element and a draggable Element and returns pixel-based drag constraints.\r\n *\r\n * @param constraintsRef\r\n * @param draggableRef\r\n */\r\nvar calculateConstraintsFromDom = function (constraintsRef, draggableRef, point, transformPagePoint) {\r\n    invariant(constraintsRef.current !== null && draggableRef.current !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n    var parentBoundingBox = getBoundingBox(constraintsRef, transformPagePoint);\r\n    var draggableBoundingBox = getBoundingBox(draggableRef, transformPagePoint);\r\n    var left = parentBoundingBox.left -\r\n        draggableBoundingBox.left +\r\n        getCurrentOffset(point.x);\r\n    var top = parentBoundingBox.top -\r\n        draggableBoundingBox.top +\r\n        getCurrentOffset(point.y);\r\n    var right = parentBoundingBox.width - draggableBoundingBox.width + left;\r\n    var bottom = parentBoundingBox.height - draggableBoundingBox.height + top;\r\n    return { top: top, left: left, right: right, bottom: bottom };\r\n};\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\nvar getConstraints = function (axis, _a) {\r\n    var top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;\r\n    if (axis === \"x\") {\r\n        return { min: left, max: right };\r\n    }\r\n    else {\r\n        return { min: top, max: bottom };\r\n    }\r\n};\r\nfunction applyConstraints(axis, value, constraints, dragElastic) {\r\n    var constrainedValue = value instanceof MotionValue ? value.get() : value;\r\n    if (!constraints) {\r\n        return constrainedValue;\r\n    }\r\n    var _a = getConstraints(axis, constraints), min = _a.min, max = _a.max;\r\n    if (min !== undefined && constrainedValue < min) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(min, constrainedValue, dragElastic)\r\n            : Math.max(min, constrainedValue);\r\n    }\r\n    else if (max !== undefined && constrainedValue > max) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(max, constrainedValue, dragElastic)\r\n            : Math.min(max, constrainedValue);\r\n    }\r\n    if (value instanceof MotionValue) {\r\n        value.set(constrainedValue);\r\n    }\r\n    return constrainedValue;\r\n}\r\nfunction applyOverdrag(origin, current, dragElastic) {\r\n    var dragFactor = typeof dragElastic === \"number\" ? dragElastic : 0.35;\r\n    return mix(origin, current, dragFactor);\r\n}\r\nfunction bothAxis(handler) {\r\n    return [handler(\"x\"), handler(\"y\")];\r\n}\r\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @param param\r\n * @param ref\r\n * @param values\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useDrag(_a, ref, values, controls) {\r\n    var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? true : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, _dragValueX = _a._dragValueX, _dragValueY = _a._dragValueY, _dragTransitionControls = _a._dragTransitionControls, dragOriginX = _a.dragOriginX, dragOriginY = _a.dragOriginY, dragTransition = _a.dragTransition, onDirectionLock = _a.onDirectionLock, onDragStart = _a.onDragStart, onDrag = _a.onDrag, onDragEnd = _a.onDragEnd, onDragTransitionEnd = _a.onDragTransitionEnd;\r\n    // If `dragConstraints` is a React `ref`, we should resolve the constraints once the\r\n    // component has rendered.\r\n    var constraintsNeedResolution = isRefObject(dragConstraints);\r\n    // We create a mutable state using a ref as we want to keep track of certain data, even across renders,\r\n    // but we don't want to re-render as a result of them.\r\n    var dragStatus = useRef({\r\n        isDragging: false,\r\n        currentDirection: null,\r\n        constraints: false,\r\n        handlers: {},\r\n    }).current;\r\n    // Load the callbacks into mutable state to ensure that even if we don't create a new\r\n    // gesture handler every render, we still reference the latest callbacks (which are almost certain to change per render)\r\n    var handlers = dragStatus.handlers;\r\n    handlers.onDragStart = onDragStart;\r\n    handlers.onDrag = onDrag;\r\n    handlers.onDragEnd = onDragEnd;\r\n    handlers.onDirectionLock = onDirectionLock;\r\n    handlers.onDragTransitionEnd = onDragTransitionEnd;\r\n    var point = useRef({}).current;\r\n    // Track origin\r\n    var defaultOriginX = useMotionValue(0);\r\n    var defaultOriginY = useMotionValue(0);\r\n    var origin = {\r\n        x: dragOriginX || defaultOriginX,\r\n        y: dragOriginY || defaultOriginY,\r\n    };\r\n    // This is a reference to the global drag gesture lock, ensuring only one component\r\n    // can \"capture\" the drag of one or both axes.\r\n    var openGlobalLock = useRef(null);\r\n    var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\r\n    // If `dragConstraints` is a React `ref`, we need to track changes in its\r\n    // size and update the current draggable position relative to that.\r\n    var prevConstraintsBox = useRef({\r\n        width: 0,\r\n        height: 0,\r\n        x: 0,\r\n        y: 0,\r\n    }).current;\r\n    var scalePoint = function () {\r\n        if (!isRefObject(dragConstraints))\r\n            return;\r\n        var constraintsBox = getBoundingBox(dragConstraints, transformPagePoint);\r\n        var draggableBox = getBoundingBox(ref, transformPagePoint);\r\n        // Scale a point relative to the transformation of a constraints-providing element.\r\n        var scaleAxisPoint = function (axis, dimension) {\r\n            var pointToScale = point[axis];\r\n            if (!pointToScale)\r\n                return;\r\n            // Stop any current animations as they bug out if you resize during one\r\n            if (pointToScale.isAnimating()) {\r\n                pointToScale.stop();\r\n                recordBoxInfo();\r\n                return;\r\n            }\r\n            // If the previous dimension was `0` (default), set `scale` to `1` to prevent\r\n            // divide by zero errors.\r\n            var scale = prevConstraintsBox[dimension]\r\n                ? (constraintsBox[dimension] - draggableBox[dimension]) /\r\n                    prevConstraintsBox[dimension]\r\n                : 1;\r\n            pointToScale.set(prevConstraintsBox[axis] * scale);\r\n        };\r\n        scaleAxisPoint(\"x\", \"width\");\r\n        scaleAxisPoint(\"y\", \"height\");\r\n    };\r\n    useResize(dragConstraints, scalePoint);\r\n    // If our drag constraints are a potentially live bounding box, record its previously-calculated\r\n    // dimensions and the current x/y\r\n    var recordBoxInfo = function (constraints) {\r\n        if (constraints) {\r\n            var right = constraints.right, left = constraints.left, bottom = constraints.bottom, top_1 = constraints.top;\r\n            prevConstraintsBox.width = (right || 0) - (left || 0);\r\n            prevConstraintsBox.height = (bottom || 0) - (top_1 || 0);\r\n        }\r\n        if (point.x)\r\n            prevConstraintsBox.x = point.x.get();\r\n        if (point.y)\r\n            prevConstraintsBox.y = point.y.get();\r\n    };\r\n    var applyConstraintsToPoint = function (constraints) {\r\n        return bothAxis(function (axis) {\r\n            var axisPoint = point[axis];\r\n            axisPoint &&\r\n                !axisPoint.isAnimating() &&\r\n                applyConstraints(axis, axisPoint, constraints, 0);\r\n        });\r\n    };\r\n    // On mount, if our bounding box is a ref, we need to resolve the constraints\r\n    // and immediately apply them to our point.\r\n    useEffect(function () {\r\n        if (!constraintsNeedResolution)\r\n            return;\r\n        var constraints = calculateConstraintsFromDom(dragConstraints, ref, point, transformPagePoint);\r\n        applyConstraintsToPoint(constraints);\r\n        recordBoxInfo(constraints);\r\n    }, []);\r\n    // If `dragConstraints` is set to `false` or `Constraints`, set constraints immediately.\r\n    // Otherwise we'll resolve on mount.\r\n    dragStatus.constraints = constraintsNeedResolution\r\n        ? dragStatus.constraints || false\r\n        : dragConstraints;\r\n    // Get the `MotionValue` for both draggable axes, or create them if they don't already\r\n    // exist on this component.\r\n    bothAxis(function (axis) {\r\n        if (!shouldDrag(axis, drag, dragStatus.currentDirection))\r\n            return;\r\n        var defaultValue = axis === \"x\" ? _dragValueX : _dragValueY;\r\n        point[axis] = defaultValue || values.get(axis, 0);\r\n    });\r\n    // Apply constraints immediately, even before render, if our constraints are a plain object.\r\n    if (!dragStatus.isDragging &&\r\n        dragStatus.constraints &&\r\n        !constraintsNeedResolution) {\r\n        applyConstraintsToPoint(dragStatus.constraints);\r\n    }\r\n    // Add additional information to the `PanInfo` object before passing it to drag listeners.\r\n    function convertPanToDrag(info) {\r\n        return __assign({}, info, { point: {\r\n                x: point.x ? point.x.get() : 0,\r\n                y: point.y ? point.y.get() : 0,\r\n            } });\r\n    }\r\n    // This function will be used to update each axis point every frame.\r\n    function updatePoint(axis, offset) {\r\n        var axisPoint = point[axis];\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!shouldDrag(axis, drag, dragStatus.currentDirection) ||\r\n            !axisPoint) {\r\n            return;\r\n        }\r\n        var current = applyConstraints(axis, origin[axis].get() + offset[axis], dragStatus.constraints, dragElastic);\r\n        axisPoint.set(current);\r\n    }\r\n    function onPanSessionStart(event) {\r\n        if (event.target &&\r\n            !allowDefaultPointerDown.has(event.target.tagName)) {\r\n            // On iOS it's important to not `preventDefault` the `touchstart`\r\n            // event, as otherwise clicks won't fire inside the draggable element.\r\n            if (!supportsTouchEvents()) {\r\n                // Prevent browser-specific behaviours like text selection or Chrome's image dragging.\r\n                event.preventDefault();\r\n                // Make sure input elements loose focus when we prevent the default.\r\n                if (document.activeElement instanceof HTMLElement) {\r\n                    document.activeElement.blur();\r\n                }\r\n            }\r\n        }\r\n        // Initiate viewport scroll blocking on touch start. This is a very aggressive approach\r\n        // which has come out of the difficulty in us being able to do this once a scroll gesture\r\n        // has initiated in mobile browsers. This means if there's a horizontally-scrolling carousel\r\n        // on a page we can't let a user scroll the page itself from it. Ideally what we'd do is\r\n        // trigger this once we've got a scroll direction determined. This approach sort-of worked\r\n        // but if the component was dragged too far in a single frame page scrolling would initiate.\r\n        blockViewportScroll();\r\n        // Stop any animations on both axis values immediately. This allows the user to throw and catch\r\n        // the component.\r\n        bothAxis(function (axis) {\r\n            var axisPoint = point[axis];\r\n            axisPoint && axisPoint.stop();\r\n        });\r\n    }\r\n    function onPanStart(event, info) {\r\n        dragStatus.isDragging = true;\r\n        // Resolve the constraints again in case anything has changed in the meantime.\r\n        if (constraintsNeedResolution) {\r\n            dragStatus.constraints = calculateConstraintsFromDom(dragConstraints, ref, point, transformPagePoint);\r\n            applyConstraintsToPoint(dragStatus.constraints);\r\n        }\r\n        // Set point origin and stop any existing animations.\r\n        bothAxis(function (axis) {\r\n            var axisPoint = point[axis];\r\n            if (!axisPoint)\r\n                return;\r\n            origin[axis].set(axisPoint.get());\r\n            axisPoint.stop();\r\n        });\r\n        // Attempt to grab the global drag gesture lock.\r\n        if (!dragPropagation) {\r\n            if (openGlobalLock.current)\r\n                openGlobalLock.current();\r\n            openGlobalLock.current = getGlobalLock(drag);\r\n            if (!openGlobalLock.current) {\r\n                return;\r\n            }\r\n        }\r\n        dragStatus.currentDirection = null;\r\n        var onDragStart = handlers.onDragStart;\r\n        onDragStart && onDragStart(event, convertPanToDrag(info));\r\n    }\r\n    function onPan(event, info) {\r\n        // If we didn't successfully receive the gesture lock, early return.\r\n        if (!dragPropagation && !openGlobalLock.current) {\r\n            return;\r\n        }\r\n        var offset = info.offset;\r\n        // Attempt to detect drag direction if directionLock is true\r\n        if (dragDirectionLock && dragStatus.currentDirection === null) {\r\n            dragStatus.currentDirection = getCurrentDirection(offset);\r\n            // If we've successfully set a direction, notify listener\r\n            if (dragStatus.currentDirection !== null) {\r\n                var onDirectionLock_1 = handlers.onDirectionLock;\r\n                onDirectionLock_1 && onDirectionLock_1(dragStatus.currentDirection);\r\n            }\r\n            return;\r\n        }\r\n        updatePoint(\"x\", offset);\r\n        updatePoint(\"y\", offset);\r\n        var onDrag = handlers.onDrag;\r\n        onDrag && onDrag(event, convertPanToDrag(info));\r\n    }\r\n    function cancelDrag() {\r\n        unblockViewportScroll();\r\n        dragStatus.isDragging = false;\r\n        if (!dragPropagation && openGlobalLock.current) {\r\n            openGlobalLock.current();\r\n            openGlobalLock.current = null;\r\n        }\r\n    }\r\n    function animateDragEnd(velocity) {\r\n        var momentumAnimations = bothAxis(function (axis) {\r\n            var _a;\r\n            if (!shouldDrag(axis, drag, dragStatus.currentDirection)) {\r\n                return;\r\n            }\r\n            var transition = dragStatus.constraints\r\n                ? getConstraints(axis, dragStatus.constraints)\r\n                : {};\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            var bounceStiffness = dragElastic ? 200 : 1000000;\r\n            var bounceDamping = dragElastic ? 40 : 10000000;\r\n            var animationControls = _dragTransitionControls || controls;\r\n            return animationControls.start((_a = {},\r\n                _a[axis] = 0,\r\n                // TODO: It might be possible to allow `type` animations to be set as\r\n                // Popmotion animations as well as strings. Then people could define their own\r\n                // and it'd open another route for us to code-split.\r\n                _a.transition = __assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\r\n                    bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1 }, dragTransition, transition),\r\n                _a));\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        Promise.all(momentumAnimations).then(function () {\r\n            recordBoxInfo(dragStatus.constraints);\r\n            scalePoint();\r\n            var onDragTransitionEnd = handlers.onDragTransitionEnd;\r\n            onDragTransitionEnd && onDragTransitionEnd();\r\n        });\r\n    }\r\n    function onPanEnd(event, info) {\r\n        var isDragging = dragStatus.isDragging;\r\n        cancelDrag();\r\n        if (!isDragging)\r\n            return;\r\n        // If we have either `dragMomentum` or `dragElastic`, initiate momentum and boundary spring animation for both axes.\r\n        if (dragMomentum || dragElastic) {\r\n            var velocity = info.velocity;\r\n            animateDragEnd(velocity);\r\n        }\r\n        else {\r\n            recordBoxInfo(dragStatus.constraints);\r\n        }\r\n        var onDragEnd = handlers.onDragEnd;\r\n        onDragEnd && onDragEnd(event, convertPanToDrag(info));\r\n    }\r\n    usePanGesture(drag ? { onPan: onPan, onPanStart: onPanStart, onPanEnd: onPanEnd, onPanSessionStart: onPanSessionStart } : {}, ref);\r\n    useUnmountEffect(function () { return dragStatus.isDragging && cancelDrag(); });\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold) {\r\n    if (lockThreshold === void 0) { lockThreshold = 10; }\r\n    var direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\n\nvar Drag = {\r\n    key: \"drag\",\r\n    shouldRender: function (props) { return !!props.drag; },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, values = _a.values, controls = _a.controls, props = __rest(_a, [\"innerRef\", \"values\", \"controls\"]);\r\n        return useDrag(props, innerRef, values, controls);\r\n    }),\r\n};\n\nfunction isCSSVariable(value) {\r\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\r\n}\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\nfunction parseCSSVariable(current) {\r\n    var match = cssVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    var token = match[1], fallback = match[2];\r\n    return [token, fallback];\r\n}\r\nvar maxDepth = 4;\r\nfunction getVariableValue(current, element, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\r\n    var _a = parseCSSVariable(current), token = _a[0], fallback = _a[1];\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        return resolved;\r\n    }\r\n    else if (isCSSVariable(fallback)) {\r\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\r\n        return getVariableValue(fallback, element, depth + 1);\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\r\nfunction resolveCSSVariables(values, ref, _a, transitionEnd) {\r\n    var target = __rest(_a, []);\r\n    var element = ref.current;\r\n    if (!(element instanceof HTMLElement))\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\r\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\r\n    if (transitionEnd) {\r\n        transitionEnd = __assign({}, transitionEnd);\r\n    }\r\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\r\n    values.forEach(function (value) {\r\n        var current = value.get();\r\n        if (!isCSSVariable(current))\r\n            return;\r\n        var resolved = getVariableValue(current, element);\r\n        if (resolved)\r\n            value.set(resolved);\r\n    });\r\n    // Cycle through every target property and resolve CSS variables. Currently\r\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\r\n    for (var key in target) {\r\n        var current = target[key];\r\n        if (!isCSSVariable(current))\r\n            continue;\r\n        var resolved = getVariableValue(current, element);\r\n        if (!resolved)\r\n            continue;\r\n        // Clone target if it hasn't already been\r\n        target[key] = resolved;\r\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\r\n        // CSS variable. This will ensure that after the animation the component will reflect\r\n        // changes in the value of the CSS variable.\r\n        if (transitionEnd && transitionEnd[key] === undefined) {\r\n            transitionEnd[key] = current;\r\n        }\r\n    }\r\n    return { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"x\",\r\n    \"y\",\r\n]);\r\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\r\nvar hasPositionalKey = function (target) {\r\n    return Object.keys(target).some(isPositionalKey);\r\n};\r\nvar setAndResetVelocity = function (value, to) {\r\n    // Looks odd but setting it twice doesn't render, it'll just\r\n    // set both prev and current to the latest value\r\n    value.set(to, false);\r\n    value.set(to);\r\n};\r\nvar isNumOrPxType = function (v) {\r\n    return v === number || v === px;\r\n};\r\nvar BoundingBoxDimension;\r\n(function (BoundingBoxDimension) {\r\n    BoundingBoxDimension[\"width\"] = \"width\";\r\n    BoundingBoxDimension[\"height\"] = \"height\";\r\n    BoundingBoxDimension[\"left\"] = \"left\";\r\n    BoundingBoxDimension[\"right\"] = \"right\";\r\n    BoundingBoxDimension[\"top\"] = \"top\";\r\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\r\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\r\nvar getPosFromMatrix = function (matrix, pos) {\r\n    return parseFloat(matrix.split(\", \")[pos]);\r\n};\r\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\r\n    var transform = _a.transform;\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\r\n        return getPosFromMatrix(matrix[1], pos2);\r\n    }\r\n}; };\r\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\r\nfunction removeNonTranslationalTransform(values, elementStyler) {\r\n    var removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach(function (key) {\r\n        var value = values.get(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    // Apply changes to element before measurement\r\n    if (removedTransforms.length)\r\n        elementStyler.render();\r\n    return removedTransforms;\r\n}\r\nvar positionalValues = {\r\n    // Dimensions\r\n    width: function (_a) {\r\n        var width = _a.width;\r\n        return width;\r\n    },\r\n    height: function (_a) {\r\n        var height = _a.height;\r\n        return height;\r\n    },\r\n    top: function (_bbox, _a) {\r\n        var top = _a.top;\r\n        return parseFloat(top);\r\n    },\r\n    left: function (_bbox, _a) {\r\n        var left = _a.left;\r\n        return parseFloat(left);\r\n    },\r\n    bottom: function (_a, _b) {\r\n        var height = _a.height;\r\n        var top = _b.top;\r\n        return parseFloat(top) + height;\r\n    },\r\n    right: function (_a, _b) {\r\n        var width = _a.width;\r\n        var left = _b.left;\r\n        return parseFloat(left) + width;\r\n    },\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\nvar convertChangedValueTypes = function (target, values, element, elementStyler, changedKeys) {\r\n    var originBbox = element.getBoundingClientRect();\r\n    var elementComputedStyle = getComputedStyle(element);\r\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\r\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\r\n    // If the element is currently set to display: \"none\", make it visible before\r\n    // measuring the target bounding box\r\n    if (display === \"none\") {\r\n        elementStyler.set(\"display\", target.display || \"block\");\r\n    }\r\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\r\n    elementStyler.render();\r\n    var targetBbox = element.getBoundingClientRect();\r\n    changedKeys.forEach(function (key) {\r\n        // Restore styles to their **calculated computed style**, not their actual\r\n        // originally set style. This allows us to animate between equivalent pixel units.\r\n        var value = values.get(key);\r\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\r\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\r\n    });\r\n    return target;\r\n};\r\nvar checkAndConvertChangedValueTypes = function (values, ref, target, transitionEnd) {\r\n    if (transitionEnd === void 0) { transitionEnd = {}; }\r\n    target = __assign({}, target);\r\n    transitionEnd = __assign({}, transitionEnd);\r\n    var element = ref.current;\r\n    var elementStyler = styler(element);\r\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\r\n    // We want to remove any transform values that could affect the element's bounding box before\r\n    // it's measured. We'll reapply these later.\r\n    var removedTransformValues = [];\r\n    var hasAttemptedToRemoveTransformValues = false;\r\n    var changedValueTypeKeys = targetPositionalKeys.reduce(function (acc, key) {\r\n        var value = values.get(key);\r\n        if (!value)\r\n            return acc;\r\n        var from = value.get();\r\n        var to = target[key];\r\n        var fromType = getDimensionValueType(from);\r\n        var toType;\r\n        // TODO: The current implementation of this basically throws an error\r\n        // if you try and do value conversion via keyframes. There's probably\r\n        // a way of doing this but the performance implications would need greater scrutiny,\r\n        // as it'd be doing multiple resize-remeasure operations.\r\n        if (isKeyframesTarget(to)) {\r\n            var numKeyframes = to.length;\r\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\r\n                if (!toType) {\r\n                    toType = getDimensionValueType(to[i]);\r\n                    invariant(toType === fromType ||\r\n                        (isNumOrPxType(fromType) &&\r\n                            isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\r\n                }\r\n                else {\r\n                    invariant(getDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toType = getDimensionValueType(to);\r\n        }\r\n        if (fromType !== toType) {\r\n            // If they're both just number or px, convert them both to numbers rather than\r\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\r\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\r\n                var current = value.get();\r\n                if (typeof current === \"string\") {\r\n                    value.set(parseFloat(current));\r\n                }\r\n                if (typeof to === \"string\") {\r\n                    target[key] = parseFloat(to);\r\n                }\r\n                else if (Array.isArray(to) && toType === px) {\r\n                    target[key] = to.map(parseFloat);\r\n                }\r\n            }\r\n            else {\r\n                // If we're going to do value conversion via DOM measurements, we first\r\n                // need to remove non-positional transform values that could affect the bbox measurements.\r\n                if (!hasAttemptedToRemoveTransformValues) {\r\n                    removedTransformValues = removeNonTranslationalTransform(values, elementStyler);\r\n                    hasAttemptedToRemoveTransformValues = true;\r\n                }\r\n                acc.push(key);\r\n                transitionEnd[key] =\r\n                    transitionEnd[key] !== undefined\r\n                        ? transitionEnd[key]\r\n                        : target[key];\r\n                setAndResetVelocity(value, to);\r\n            }\r\n        }\r\n        return acc;\r\n    }, []);\r\n    if (changedValueTypeKeys.length) {\r\n        var convertedTarget = convertChangedValueTypes(target, values, element, elementStyler, changedValueTypeKeys);\r\n        // If we removed transform values, reapply them before the next render\r\n        if (removedTransformValues.length) {\r\n            removedTransformValues.forEach(function (_a) {\r\n                var key = _a[0], value = _a[1];\r\n                values.get(key).set(value);\r\n            });\r\n        }\r\n        // Reapply original values\r\n        elementStyler.render();\r\n        return { target: convertedTarget, transitionEnd: transitionEnd };\r\n    }\r\n    else {\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    }\r\n};\r\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @param values\r\n * @param ref\r\n * @param target\r\n * @param transitionEnd\r\n * @internal\r\n */\r\nfunction unitConversion(values, ref, target, transitionEnd) {\r\n    return hasPositionalKey(target)\r\n        ? checkAndConvertChangedValueTypes(values, ref, target, transitionEnd)\r\n        : { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar parseDomVariant = function (values, ref) {\r\n    return function (target, transitionEnd) {\r\n        var resolved = resolveCSSVariables(values, ref, target, transitionEnd);\r\n        target = resolved.target;\r\n        transitionEnd = resolved.transitionEnd;\r\n        return unitConversion(values, ref, target, transitionEnd);\r\n    };\r\n};\n\nfunction useForceUpdate() {\r\n    var _a = useState(0), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\r\n    return useCallback(function () { return setForcedRenderCount(forcedRenderCount + 1); }, [\r\n        forcedRenderCount,\r\n    ]);\r\n}\n\nvar SyncLayoutContext = createContext(null);\r\n/**\r\n * When layout changes happen asynchronously to their instigating render (ie when exiting\r\n * children of `AnimatePresence` are removed), `SyncLayout` can wrap parent and sibling\r\n * components that need to animate as a result of this layout change.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = ({ isVisible }) => {\r\n *   return (\r\n *     <SyncLayout>\r\n *       <AnimatePresence>\r\n *         {isVisible && (\r\n *           <motion.div exit={{ opacity: 0 }} />\r\n *         )}\r\n *       </AnimatePresence>\r\n *       <motion.div positionTransition />\r\n *     </SyncLayout>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * The way this component works is by memoising a function and passing it down via context.\r\n * The function, when called, updates the local state, which is used to invalidate the\r\n * memoisation cache. A new function is called, performing a synced re-render of components\r\n * that are using the SyncLayoutContext.\r\n *\r\n * @internal\r\n */\r\nvar UnstableSyncLayout = function (_a) {\r\n    var children = _a.children;\r\n    var forceUpdate = useForceUpdate();\r\n    return (createElement(SyncLayoutContext.Provider, { value: forceUpdate }, children));\r\n};\n\nvar _a;\r\nvar StepName;\r\n(function (StepName) {\r\n    StepName[\"Prepare\"] = \"prepare\";\r\n    StepName[\"Read\"] = \"read\";\r\n    StepName[\"Render\"] = \"render\";\r\n})(StepName || (StepName = {}));\r\nvar stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];\r\nvar jobs = stepOrder.reduce(function (acc, key) {\r\n    acc[key] = [];\r\n    return acc;\r\n}, {});\r\nvar jobsNeedProcessing = false;\r\nfunction flushCallbackList(list) {\r\n    var numJobs = list.length;\r\n    for (var i = 0; i < numJobs; i++) {\r\n        list[i]();\r\n    }\r\n    list.length = 0;\r\n}\r\nfunction flushAllJobs() {\r\n    if (!jobsNeedProcessing)\r\n        return;\r\n    flushCallbackList(jobs.prepare);\r\n    flushCallbackList(jobs.read);\r\n    flushCallbackList(jobs.render);\r\n    jobsNeedProcessing = false;\r\n}\r\n// Note: The approach of schedulng jobs during the render step is incompatible with concurrent mode\r\n// where multiple renders might happen without a DOM update. This would result in unneccessary batched\r\n// jobs. But this was already a problem with our previous approach to positionTransition.\r\n// Hopefully the React team offer a getSnapshotBeforeUpdate-esque hook and we can move to that.\r\nvar createUseSyncEffect = function (stepName) { return function (callback) {\r\n    if (!callback)\r\n        return;\r\n    jobsNeedProcessing = true;\r\n    jobs[stepName].push(callback);\r\n}; };\r\nvar layoutSync = (_a = {},\r\n    _a[StepName.Prepare] = createUseSyncEffect(StepName.Prepare),\r\n    _a[StepName.Read] = createUseSyncEffect(StepName.Read),\r\n    _a[StepName.Render] = createUseSyncEffect(StepName.Render),\r\n    _a);\r\n// TODO: If we ever make this a public hook, add a check within `createUseSyncEffect` that, in development mode,\r\n// adds a useEffect to check if there's any remaining jobs and throw an error that we must add the `useLayoutSync`\r\n// hook to every component that schedules a job.\r\nfunction useLayoutSync() {\r\n    return useLayoutEffect(flushAllJobs);\r\n}\n\nfunction isHTMLElement(element) {\r\n    return element instanceof HTMLElement;\r\n}\n\nvar defaultLayoutTransition = {\r\n    duration: 0.8,\r\n    ease: [0.45, 0.05, 0.19, 1.0],\r\n};\r\nvar defaultPositionTransition = underDampedSpring();\r\nfunction getDefaultLayoutTransition(positionOnly) {\r\n    return positionOnly ? defaultPositionTransition : defaultLayoutTransition;\r\n}\r\nfunction isResolver(transition) {\r\n    return typeof transition === \"function\";\r\n}\r\nvar axisLabels = {\r\n    x: {\r\n        id: \"x\",\r\n        size: \"width\",\r\n        min: \"left\",\r\n        max: \"right\",\r\n        origin: \"originX\",\r\n    },\r\n    y: {\r\n        id: \"y\",\r\n        size: \"height\",\r\n        min: \"top\",\r\n        max: \"bottom\",\r\n        origin: \"originY\",\r\n    },\r\n};\r\nfunction centerOf(min, max) {\r\n    return (min + max) / 2;\r\n}\r\nfunction calcAxisDelta(prev, next, names) {\r\n    var _a;\r\n    var sizeDelta = prev[names.size] - next[names.size];\r\n    var origin = 0.5;\r\n    // If the element has changed size we want to check whether either side is in\r\n    // the same position before/after the layout transition. If so, we can anchor\r\n    // the element to that position and only animate its size.\r\n    if (sizeDelta) {\r\n        if (prev[names.min] === next[names.min]) {\r\n            origin = 0;\r\n        }\r\n        else if (prev[names.max] === next[names.max]) {\r\n            origin = 1;\r\n        }\r\n    }\r\n    var delta = (_a = {},\r\n        _a[names.size] = sizeDelta,\r\n        _a[names.origin] = origin,\r\n        _a[names.id] = \r\n        // Only measure a position delta if we haven't anchored to one side\r\n        origin === 0.5\r\n            ? centerOf(prev[names.min], prev[names.max]) -\r\n                centerOf(next[names.min], next[names.max])\r\n            : 0,\r\n        _a);\r\n    return delta;\r\n}\r\nfunction calcDelta(prev, next) {\r\n    var delta = __assign({}, calcAxisDelta(prev, next, axisLabels.x), calcAxisDelta(prev, next, axisLabels.y));\r\n    return delta;\r\n}\r\nvar offset = {\r\n    getLayout: function (_a) {\r\n        var offset = _a.offset;\r\n        return offset;\r\n    },\r\n    measure: function (element) {\r\n        var offsetLeft = element.offsetLeft, offsetTop = element.offsetTop, offsetWidth = element.offsetWidth, offsetHeight = element.offsetHeight;\r\n        return {\r\n            left: offsetLeft,\r\n            top: offsetTop,\r\n            right: offsetLeft + offsetWidth,\r\n            bottom: offsetTop + offsetHeight,\r\n            width: offsetWidth,\r\n            height: offsetHeight,\r\n        };\r\n    },\r\n};\r\nvar boundingBox = {\r\n    getLayout: function (_a) {\r\n        var boundingBox = _a.boundingBox;\r\n        return boundingBox;\r\n    },\r\n    measure: function (element) {\r\n        var _a = element.getBoundingClientRect(), left = _a.left, top = _a.top, width = _a.width, height = _a.height, right = _a.right, bottom = _a.bottom;\r\n        return { left: left, top: top, width: width, height: height, right: right, bottom: bottom };\r\n    },\r\n};\r\nfunction readPositionStyle(element) {\r\n    return window.getComputedStyle(element).position;\r\n}\r\nfunction getLayoutType(prev, next, positionOnly) {\r\n    return positionOnly && prev === next ? offset : boundingBox;\r\n}\r\nfunction isSizeKey(key) {\r\n    return key === \"width\" || key === \"height\";\r\n}\r\nfunction useLayoutAnimation(ref, values, controls, layoutTransition, positionOnly) {\r\n    if (positionOnly === void 0) { positionOnly = false; }\r\n    // Allow any parent SyncLayoutContext components to force-update this component\r\n    useContext(SyncLayoutContext);\r\n    var element = ref.current;\r\n    useLayoutSync();\r\n    // If we don't have a HTML element we can early return here. We've already called all the hooks.\r\n    if (!isHTMLElement(element))\r\n        return;\r\n    // Keep track of the position style prop. Ideally we'd compare offset as this is uneffected by\r\n    // the same transforms that we want to use to performantly animate the layout. But if position changes,\r\n    // for example between \"static\" and \"fixed\", we can no longer rely on the offset and need\r\n    // to use the visual bounding box.\r\n    var prevPosition = readPositionStyle(element);\r\n    var prev = {\r\n        offset: offset.measure(element),\r\n        boundingBox: boundingBox.measure(element),\r\n    };\r\n    // Keep track of any existing transforms so we can reapply them after measuring the target bounding box.\r\n    var transform = \"\";\r\n    var next;\r\n    var compare;\r\n    // We split the unsetting, read and reapplication of the `transform` style prop into\r\n    // different steps via useSyncEffect. Multiple components might all be doing the same\r\n    // thing and by splitting these jobs and flushing them in batches we prevent layout thrashing.\r\n    layoutSync.prepare(function () {\r\n        // Unset the transform of all layoutTransition components so we can accurately measure\r\n        // the target bounding box\r\n        transform = element.style.transform;\r\n        element.style.transform = \"\";\r\n    });\r\n    layoutSync.read(function () {\r\n        // Read the target VisualInfo of all layoutTransition components\r\n        next = {\r\n            offset: offset.measure(element),\r\n            boundingBox: boundingBox.measure(element),\r\n        };\r\n        var nextPosition = readPositionStyle(element);\r\n        compare = getLayoutType(prevPosition, nextPosition, positionOnly);\r\n    });\r\n    layoutSync.render(function () {\r\n        // Reverse the layout delta of all newly laid-out layoutTransition components into their\r\n        // prev visual state and then animate them into their new one using transforms.\r\n        var prevLayout = compare.getLayout(prev);\r\n        var nextLayout = compare.getLayout(next);\r\n        var delta = calcDelta(prevLayout, nextLayout);\r\n        var hasAnyChanged = delta.x || delta.y || delta.width || delta.height;\r\n        if (!hasAnyChanged) {\r\n            // If layout hasn't changed, reapply the transform and get out of here.\r\n            transform && (element.style.transform = transform);\r\n            return;\r\n        }\r\n        styler(element).set({ originX: delta.originX, originY: delta.originY });\r\n        syncRenderSession.open();\r\n        var target = {};\r\n        var transition = {};\r\n        var transitionDefinition = isResolver(layoutTransition)\r\n            ? layoutTransition({ delta: delta })\r\n            : layoutTransition;\r\n        function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {\r\n            // If this dimension hasn't changed, early return\r\n            var deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;\r\n            if (!delta[deltaKey])\r\n                return;\r\n            var baseTransition = typeof transitionDefinition === \"boolean\"\r\n                ? __assign({}, getDefaultLayoutTransition(positionOnly)) : transitionDefinition;\r\n            var value = values.get(transformKey, targetValue);\r\n            var velocity = value.getVelocity();\r\n            transition[transformKey] = baseTransition[transformKey]\r\n                ? __assign({}, baseTransition[transformKey]) : __assign({}, baseTransition);\r\n            if (transition[transformKey].velocity === undefined) {\r\n                transition[transformKey].velocity = velocity || 0;\r\n            }\r\n            // The target value of all transforms is the default value of that prop (ie x = 0, scaleX = 1)\r\n            // This is because we're inverting the layout change with `transform` and then animating to `transform: none`\r\n            target[transformKey] = targetValue;\r\n            var offsetToApply = !isSizeKey(layoutKey) && compare === offset ? value.get() : 0;\r\n            value.set(visualOrigin + offsetToApply);\r\n        }\r\n        makeTransition(\"left\", \"x\", 0, delta.x);\r\n        makeTransition(\"top\", \"y\", 0, delta.y);\r\n        if (!positionOnly) {\r\n            makeTransition(\"width\", \"scaleX\", 1, prev.boundingBox.width / next.boundingBox.width);\r\n            makeTransition(\"height\", \"scaleY\", 1, prev.boundingBox.height / next.boundingBox.height);\r\n        }\r\n        target.transition = transition;\r\n        // Only start the transition if `transitionDefinition` isn't `false`. Otherwise we want\r\n        // to leave the values in their newly-inverted state and let the user cope with the rest.\r\n        transitionDefinition && controls.start(target);\r\n        // Force a render to ensure there's no visual flickering\r\n        syncRenderSession.flush();\r\n    });\r\n}\r\nvar Layout = {\r\n    key: \"layout\",\r\n    shouldRender: function (_a) {\r\n        var positionTransition = _a.positionTransition, layoutTransition = _a.layoutTransition;\r\n        invariant(!(positionTransition && layoutTransition), \"Don't set both positionTransition and layoutTransition on the same component\");\r\n        return (typeof window !== \"undefined\" &&\r\n            !!(positionTransition || layoutTransition));\r\n    },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, controls = _a.controls, values = _a.values, positionTransition = _a.positionTransition, layoutTransition = _a.layoutTransition;\r\n        useLayoutAnimation(innerRef, values, controls, layoutTransition || positionTransition, !!positionTransition);\r\n    }),\r\n};\n\n/**\r\n * A list of all valid MotionProps\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nvar validMotionProps = new Set([\r\n    \"initial\",\r\n    \"animate\",\r\n    \"exit\",\r\n    \"style\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"static\",\r\n    \"positionTransition\",\r\n    \"layoutTransition\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"drag\",\r\n    \"dragConstraints\",\r\n    \"dragDirectionLock\",\r\n    \"dragElastic\",\r\n    \"dragMomentum\",\r\n    \"dragPropagation\",\r\n    \"dragTransition\",\r\n    \"_dragValueX\",\r\n    \"_dragValueY\",\r\n    \"_dragTransitionControls\",\r\n    \"dragOriginX\",\r\n    \"dragOriginY\",\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"onHoverEnd\",\r\n    \"onHoverStart\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return validMotionProps.has(key);\r\n}\n\nvar AnimatePropType;\r\n(function (AnimatePropType) {\r\n    AnimatePropType[\"Target\"] = \"Target\";\r\n    AnimatePropType[\"VariantLabel\"] = \"VariantLabel\";\r\n    AnimatePropType[\"AnimationSubscription\"] = \"AnimationSubscription\";\r\n})(AnimatePropType || (AnimatePropType = {}));\n\nfunction shallowCompare(next, prev) {\r\n    if (prev === null)\r\n        return false;\r\n    var prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (var i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\n\nvar hasUpdated = function (prev, next) {\r\n    return (next !== undefined &&\r\n        (Array.isArray(prev) && Array.isArray(next)\r\n            ? !shallowCompare(next, prev)\r\n            : prev !== next));\r\n};\r\nfunction targetWithoutTransition(_a, mergeTransitionEnd) {\r\n    if (mergeTransitionEnd === void 0) { mergeTransitionEnd = false; }\r\n    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\r\n    return mergeTransitionEnd\r\n        ? __assign({}, target, transitionEnd)\r\n        : target;\r\n}\r\n/**\r\n * Handle the `animate` prop when its an object of values, ie:\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ opacity: 1 }} />\r\n * ```\r\n *\r\n * @internalremarks\r\n * It might be worth consolidating this with `use-variants`\r\n *\r\n * ```jsx\r\n * <motion.div animate=\"visible\" />\r\n * ```\r\n *\r\n * @param target\r\n * @param controls\r\n * @param values\r\n * @param transition\r\n *\r\n * @internal\r\n */\r\nfunction useAnimateProp(targetAndTransition, controls, values, defaultTransition) {\r\n    var isInitialRender = useRef(true);\r\n    var prevValues = useRef(null);\r\n    if (!prevValues.current) {\r\n        prevValues.current = targetWithoutTransition(targetAndTransition, true);\r\n    }\r\n    useEffect(function () {\r\n        var targetToAnimate = {};\r\n        // These are the values we're actually animating\r\n        var animatingTarget = targetWithoutTransition(targetAndTransition);\r\n        // This is the target as it'll be once transitionEnd values are applied\r\n        var finalTarget = targetWithoutTransition(targetAndTransition, true);\r\n        // Detect which values have changed between renders\r\n        for (var key in animatingTarget) {\r\n            // This value should animate on mount if this value doesn't already exist (wasn't\r\n            // defined in `style` or `initial`) or if it does exist and it's already changed.\r\n            var shouldAnimateOnMount = isInitialRender.current &&\r\n                (!values.has(key) ||\r\n                    values.get(key).get() !== finalTarget[key]);\r\n            // If this value has updated between renders or it's we're animating this value on mount,\r\n            // add it to the animate target.\r\n            var isValidValue = finalTarget[key] !== null;\r\n            var valueHasUpdated = hasUpdated(prevValues.current[key], finalTarget[key]);\r\n            if (isValidValue && (valueHasUpdated || shouldAnimateOnMount)) {\r\n                targetToAnimate[key] = animatingTarget[key];\r\n            }\r\n        }\r\n        isInitialRender.current = false;\r\n        prevValues.current = __assign({}, prevValues.current, finalTarget);\r\n        if (Object.keys(targetToAnimate).length) {\r\n            controls.start(__assign({}, targetToAnimate, { transition: targetAndTransition.transition || defaultTransition, transitionEnd: targetAndTransition.transitionEnd }));\r\n        }\r\n    }, [targetAndTransition]);\r\n}\n\nvar labelsToArray = function (label) {\r\n    if (!label) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(label)) {\r\n        return label;\r\n    }\r\n    return [label];\r\n};\r\nvar resolveVariantLabels = function (variant) {\r\n    var unresolvedVariant = variant instanceof MotionValue ? variant.get() : variant;\r\n    return Array.from(new Set(labelsToArray(unresolvedVariant)));\r\n};\r\n/**\r\n * Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)\r\n * When values in this array change, React re-runs the dependency. However if the array\r\n * contains a variable number of items, React throws an error.\r\n */\r\nvar asDependencyList = function (list) { return [\r\n    list.join(\",\"),\r\n]; };\n\nvar hasVariantChanged = function (oldVariant, newVariant) {\r\n    return oldVariant.join(\",\") !== newVariant.join(\",\");\r\n};\r\n/**\r\n * Handle variants and the `animate` prop when its set as variant labels.\r\n *\r\n * @param initial - Initial variant(s)\r\n * @param animate - Variant(s) to animate to\r\n * @param inherit - `true` is inheriting animations from parent\r\n * @param controls - Animation controls\r\n *\r\n * @internal\r\n */\r\nfunction useVariants(initial, animate, inherit, controls) {\r\n    var targetVariants = resolveVariantLabels(animate);\r\n    var context = useContext(MotionContext);\r\n    var parentAlreadyMounted = context.hasMounted && context.hasMounted.current;\r\n    var hasMounted = useRef(false);\r\n    useEffect(function () {\r\n        var shouldAnimate = false;\r\n        if (inherit) {\r\n            // If we're inheriting variant changes and the parent has already\r\n            // mounted when this component loads, we need to manually trigger\r\n            // this animation.\r\n            shouldAnimate = !!parentAlreadyMounted;\r\n            targetVariants = resolveVariantLabels(context.animate);\r\n        }\r\n        else {\r\n            shouldAnimate =\r\n                hasMounted.current ||\r\n                    hasVariantChanged(resolveVariantLabels(initial), targetVariants);\r\n        }\r\n        shouldAnimate && controls.start(targetVariants);\r\n        hasMounted.current = true;\r\n    }, asDependencyList(targetVariants));\r\n}\n\n/**\r\n * `useAnimationGroupSubscription` allows a component to subscribe to an\r\n * externally-created `AnimationControls`, created by the `useAnimation` hook.\r\n *\r\n * @param animation\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useAnimationGroupSubscription(animation, controls) {\r\n    var unsubscribe = useMemo(function () { return animation.subscribe(controls); }, [\r\n        animation,\r\n    ]);\r\n    useEffect(function () { return function () {\r\n        unsubscribe && unsubscribe();\r\n    }; }, [unsubscribe]);\r\n}\n\nvar _a$1, _b;\r\nvar AnimatePropComponents = (_a$1 = {},\r\n    _a$1[AnimatePropType.Target] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls, values = _a.values, transition = _a.transition;\r\n        return useAnimateProp(animate, controls, values, transition);\r\n    }),\r\n    _a$1[AnimatePropType.VariantLabel] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, _b = _a.inherit, inherit = _b === void 0 ? true : _b, controls = _a.controls, initial = _a.initial;\r\n        return useVariants(initial, animate, inherit, controls);\r\n    }),\r\n    _a$1[AnimatePropType.AnimationSubscription] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls;\r\n        return useAnimationGroupSubscription(animate, controls);\r\n    }),\r\n    _a$1);\r\nvar isVariantLabel$1 = function (prop) {\r\n    return Array.isArray(prop) || typeof prop === \"string\";\r\n};\r\nvar isAnimationSubscription = function (_a) {\r\n    var animate = _a.animate;\r\n    return animate instanceof AnimationControls;\r\n};\r\nvar animationProps = [\"initial\", \"animate\", \"whileTap\", \"whileHover\"];\r\nvar animatePropTypeTests = (_b = {},\r\n    _b[AnimatePropType.Target] = function (props) {\r\n        return (props.animate !== undefined &&\r\n            !isVariantLabel$1(props.animate) &&\r\n            !isAnimationSubscription(props));\r\n    },\r\n    _b[AnimatePropType.VariantLabel] = function (props) {\r\n        return (props.variants !== undefined ||\r\n            animationProps.some(function (key) { return typeof props[key] === \"string\"; }));\r\n    },\r\n    _b[AnimatePropType.AnimationSubscription] = isAnimationSubscription,\r\n    _b);\r\nvar getAnimationComponent = function (props) {\r\n    var animatePropType = undefined;\r\n    for (var key in AnimatePropType) {\r\n        if (animatePropTypeTests[key](props)) {\r\n            animatePropType = key;\r\n        }\r\n    }\r\n    return animatePropType ? AnimatePropComponents[animatePropType] : undefined;\r\n};\n\nvar Exit = {\r\n    key: \"exit\",\r\n    shouldRender: function (_a, _b) {\r\n        var exit = _a.exit;\r\n        var exitProps = _b.exitProps;\r\n        var hasExitProps = !!exitProps;\r\n        var hasExitAnimation = !!exit;\r\n        invariant(!hasExitProps || (hasExitProps && hasExitAnimation), \"No exit prop defined on a child of AnimatePresence.\");\r\n        return hasExitProps && hasExitAnimation;\r\n    },\r\n    Component: makeRenderlessComponent(function (props) {\r\n        var animate = props.animate, controls = props.controls, parentContext = props.parentContext, exit = props.exit;\r\n        var exitProps = parentContext.exitProps;\r\n        var isPlayingExitAnimation = useRef(false);\r\n        // This early return is more for types - it won't actually run because of the `shouldRender` above.\r\n        if (!exitProps || !exit)\r\n            return;\r\n        var isExiting = exitProps.isExiting, custom = exitProps.custom, onExitComplete = exitProps.onExitComplete;\r\n        useEffect(function () {\r\n            if (isExiting) {\r\n                if (!isPlayingExitAnimation.current && exit) {\r\n                    controls.setProps(__assign({}, props, { custom: custom !== undefined ? custom : props.custom }));\r\n                    controls.start(exit).then(onExitComplete);\r\n                }\r\n                isPlayingExitAnimation.current = true;\r\n            }\r\n            else if (isPlayingExitAnimation.current &&\r\n                animate &&\r\n                !(animate instanceof AnimationControls)) {\r\n                controls.start(animate);\r\n            }\r\n            if (!isExiting) {\r\n                isPlayingExitAnimation.current = false;\r\n            }\r\n        }, [isExiting]);\r\n    }),\r\n};\n\nvar isPropValid = function (key) { return !isValidMotionProp(key); };\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\r\n    isPropValid = function (key) {\r\n        // Handle events explicitly as Emotion validates them all as true\r\n        if (key.startsWith(\"on\")) {\r\n            return !isValidMotionProp(key);\r\n        }\r\n        else {\r\n            return emotionIsPropValid_1(key);\r\n        }\r\n    };\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterValidProps(props) {\r\n    var domProps = {};\r\n    for (var key in props) {\r\n        if (isPropValid(key)) {\r\n            domProps[key] = props[key];\r\n        }\r\n    }\r\n    return domProps;\r\n}\r\nvar buildSVGProps = function (values, style) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var props = buildSVGAttrs(motionValueStyles, undefined, undefined, undefined, undefined, false);\r\n    props.style = __assign({}, style, props.style);\r\n    return props;\r\n};\r\nvar functionalityComponents = [Layout, Drag, Gestures, Exit];\r\nvar numFunctionalityComponents = functionalityComponents.length;\r\n/**\r\n * Create a configuration for `motion` components that provides DOM-specific functionality.\r\n *\r\n * @internal\r\n */\r\nfunction createDomMotionConfig(Component) {\r\n    var isDOM = typeof Component === \"string\";\r\n    var isSVG = isDOM && svgElements.indexOf(Component) !== -1;\r\n    return {\r\n        renderComponent: function (ref, style, values, props, isStatic) {\r\n            var forwardedProps = isDOM ? filterValidProps(props) : props;\r\n            var staticVisualStyles = isSVG\r\n                ? buildSVGProps(values, style)\r\n                : { style: buildStyleAttr(values, style, isStatic) };\r\n            return createElement(Component, __assign({}, forwardedProps, { ref: ref }, staticVisualStyles));\r\n        },\r\n        /**\r\n         * loadFunctionalityComponents gets used by the `motion` component\r\n         *\r\n         * Each functionality component gets provided the `ref`, animation controls and the `MotionValuesMap`\r\n         * generated for that component, as well as all the `props` passed to it by the user.\r\n         *\r\n         * The pattern used to determine whether to load and use each piece of functionality is\r\n         * consistent (should render? Then push component) and could be used to extend functionality.\r\n         *\r\n         * By exposing a mutable piece of memory via an API like `extendMotionComponent` we could\r\n         * allow users to add `FunctionalComponentDefinition`s. This would allow us to offer file size\r\n         * reductions by shipping an entry point that doesn't load gesture and drag functionality, and\r\n         * also offer a way for users to develop plugins/other functionality. Because these functionalities\r\n         * are loaded as components, we can look into using Suspense for this purpose.\r\n         *\r\n         * For user-defined functionality we'd need to allow\r\n         *  1) User-defined prop typing (extending `P`)\r\n         *  2) User-defined \"clean props\" function that removes their plugin's props before being passed to the DOM.\r\n         */\r\n        loadFunctionalityComponents: function (ref, values, props, context, controls, inherit) {\r\n            var activeComponents = [];\r\n            // TODO: Consolidate Animation functionality loading strategy with other functionality components\r\n            var Animation = getAnimationComponent(props);\r\n            if (Animation) {\r\n                activeComponents.push(createElement(Animation, { key: \"animation\", initial: props.initial, animate: props.animate, variants: props.variants, transition: props.transition, controls: controls, inherit: inherit, values: values }));\r\n            }\r\n            for (var i = 0; i < numFunctionalityComponents; i++) {\r\n                var _a = functionalityComponents[i], shouldRender = _a.shouldRender, key = _a.key, Component_1 = _a.Component;\r\n                if (shouldRender(props, context)) {\r\n                    activeComponents.push(createElement(Component_1, __assign({ key: key }, props, { parentContext: context, values: values, controls: controls, innerRef: ref })));\r\n                }\r\n            }\r\n            return activeComponents;\r\n        },\r\n        getValueControlsConfig: function (ref, values) {\r\n            return {\r\n                values: values,\r\n                readValueFromSource: function (key) {\r\n                    return styler(ref.current).get(key);\r\n                },\r\n                // TODO: This is a good second source of plugins. This function contains the CSS variable\r\n                // and unit conversion support. These functions share a common signature. We could make another\r\n                // API for adding these.\r\n                makeTargetAnimatable: parseDomVariant(values, ref),\r\n            };\r\n        },\r\n    };\r\n}\n\nvar htmlMotionComponents = htmlElements.reduce(function (acc, Component) {\r\n    var config = createDomMotionConfig(Component);\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(config);\r\n    return acc;\r\n}, {});\r\nvar svgMotionComponents = svgElements.reduce(function (acc, Component) {\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(createDomMotionConfig(Component));\r\n    return acc;\r\n}, {});\r\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @internalremarks\r\n *\r\n * I'd like to make it possible for these to be loaded \"on demand\" - to reduce bundle size by only\r\n * including HTML/SVG stylers, animation and/or gesture support when necessary.\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ x: 100 }} />\r\n *\r\n * <motion.p animate={{ height: 200 }} />\r\n *\r\n * <svg><motion.circle r={10} animate={{ r: 20 }} /></svg>\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar motion = __assign({ \r\n    /**\r\n     * Convert a custom React component into a `motion` component.\r\n     *\r\n     * It can also accept a string, to create [custom DOM elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\r\n     *\r\n     * ```jsx\r\n     * const Component = React.forwardRef((props: Props, ref) => {\r\n     *   return <div ref={ref} />\r\n     * })\r\n     *\r\n     * const MotionComponent = motion.custom<Props>(Component)\r\n     * ```\r\n     *\r\n     * @param Component\r\n     */\r\n    custom: function custom(Component) {\r\n        return createMotionComponent(createDomMotionConfig(Component));\r\n    } }, htmlMotionComponents, svgMotionComponents);\n\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\r\nfunction unwrapMotionValue(value) {\r\n    var unwrappedValue = value instanceof MotionValue ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\n\nvar isCustomValueType = function (v) {\r\n    return typeof v === \"object\" && v.mix;\r\n};\r\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\r\nfunction transform() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var useImmediate = !Array.isArray(args[0]);\r\n    var argOffset = useImmediate ? 0 : -1;\r\n    var inputValue = args[0 + argOffset];\r\n    var inputRange = args[1 + argOffset];\r\n    var outputRange = args[2 + argOffset];\r\n    var options = args[3 + argOffset];\r\n    var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer(outputRange[0]) }, options));\r\n    return useImmediate ? interpolator(inputValue) : interpolator;\r\n}\n\nvar isTransformer = function (v) {\r\n    return typeof v === \"function\";\r\n};\r\nvar noop = function (v) { return v; };\r\nfunction useTransform(parent, customTransform, to, options) {\r\n    var value = useRef(null);\r\n    var comparitor = [parent];\r\n    var transformer = noop;\r\n    if (isTransformer(customTransform)) {\r\n        transformer = customTransform;\r\n    }\r\n    else if (Array.isArray(to)) {\r\n        var from = customTransform;\r\n        transformer = transform(from, to, options);\r\n        comparitor = [parent, from.join(\",\"), to.join(\",\")];\r\n    }\r\n    return useMemo(function () {\r\n        if (value.current)\r\n            value.current.destroy();\r\n        value.current = parent.addChild({ transformer: transformer });\r\n        return value.current;\r\n    }, comparitor);\r\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\r\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\r\n// to simply hide content at unreasonable scales.\r\nvar maxScale = 100000;\r\nvar invertScale = function (scale) { return (scale > 0.001 ? 1 / scale : maxScale); };\r\n/**\r\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\r\n * of their respective parent scales.\r\n *\r\n * This is useful for undoing the distortion of content when scaling a parent component.\r\n *\r\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\r\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\r\n * of those instead.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = () => {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <motion.div style={{ scaleX, scaleY }} />\r\n * }\r\n * ```\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * function MyComponent() {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useInvertedScale(scale) {\r\n    var parentScaleX = useMotionValue(1);\r\n    var parentScaleY = useMotionValue(1);\r\n    var values = useContext(MotionContext).values;\r\n    invariant(!!(scale || values), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\r\n    if (scale) {\r\n        parentScaleX = scale.scaleX || parentScaleX;\r\n        parentScaleY = scale.scaleY || parentScaleY;\r\n    }\r\n    else if (values) {\r\n        parentScaleX = values.get(\"scaleX\", 1);\r\n        parentScaleY = values.get(\"scaleY\", 1);\r\n    }\r\n    var scaleX = useTransform(parentScaleX, invertScale);\r\n    var scaleY = useTransform(parentScaleY, invertScale);\r\n    return { scaleX: scaleX, scaleY: scaleY };\r\n}\n\nfunction useOnChange(value, callback) {\r\n    useEffect(function () { return (isMotionValue(value) ? value.onChange(callback) : undefined); }, [value]);\r\n}\n\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config) {\r\n    if (config === void 0) { config = {}; }\r\n    var activeSpringAnimation = useRef(null);\r\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\r\n    useMemo(function () {\r\n        return value.attach(function (v, set) {\r\n            if (activeSpringAnimation.current) {\r\n                activeSpringAnimation.current.stop();\r\n            }\r\n            activeSpringAnimation.current = spring(__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config)).start(set);\r\n            return value.get();\r\n        });\r\n    }, Object.values(config));\r\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\r\n    return value;\r\n}\n\nvar scrollX = motionValue(0);\r\nvar scrollY = motionValue(0);\r\nvar scrollXProgress = motionValue(0);\r\nvar scrollYProgress = motionValue(0);\r\nvar setProgress = function (offset, maxOffset, value) {\r\n    value.set(!maxOffset || !offset ? 0 : offset / maxOffset);\r\n};\r\nvar hasEventListener = false;\r\nvar addScrollListener = function () {\r\n    hasEventListener = true;\r\n    if (typeof window === \"undefined\")\r\n        return;\r\n    var updateScrollValues = function () {\r\n        var xOffset = window.pageXOffset;\r\n        var yOffset = window.pageYOffset;\r\n        // Set absolute positions\r\n        scrollX.set(xOffset);\r\n        scrollY.set(yOffset);\r\n        // Set 0-1 progress\r\n        setProgress(xOffset, document.body.clientWidth - window.innerWidth, scrollXProgress);\r\n        setProgress(yOffset, document.body.clientHeight - window.innerHeight, scrollYProgress);\r\n    };\r\n    updateScrollValues();\r\n    window.addEventListener(\"resize\", updateScrollValues);\r\n    window.addEventListener(\"scroll\", updateScrollValues, { passive: true });\r\n};\r\nvar viewportMotionValues = {\r\n    scrollX: scrollX,\r\n    scrollY: scrollY,\r\n    scrollXProgress: scrollXProgress,\r\n    scrollYProgress: scrollYProgress,\r\n};\r\n/**\r\n * Provides `MotionValue`s that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * **Note:** If the returned scroll `MotionValue`s don't seem to be updating,\r\n * double check if the `body` tag styles are set to `width: 100%; height: 100%` or\r\n * similar, as this can break accurate measurement of viewport scroll.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useViewportScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <Frame scaleX={scrollYProgress} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n * This isn't technically a hook yet, but in the future it might be nice\r\n * to accept refs to elements and add scroll listeners to those, which\r\n * may involve the use of lifecycle.\r\n *\r\n * @public\r\n */\r\nfunction useViewportScroll() {\r\n    if (!hasEventListener) {\r\n        addScrollListener();\r\n    }\r\n    return viewportMotionValues;\r\n}\n\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <motion.div animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\r\nfunction useAnimation() {\r\n    var animationControls = useConstant(function () { return new AnimationControls(); });\r\n    useEffect(function () {\r\n        animationControls.mount();\r\n        return function () { return animationControls.unmount(); };\r\n    }, []);\r\n    return animationControls;\r\n}\n\n/**\r\n * Experimental API.\r\n *\r\n * Makes an animated version of `useState`.\r\n *\r\n * @remarks\r\n *\r\n * When the returned state setter is called, values will be animated to their new target.\r\n *\r\n * This allows the animation of arbitrary React components.\r\n *\r\n * **Note:** When animating DOM components, it's always preferable to use the `animate` prop, as Framer\r\n * will bypass React's rendering cycle with one optimised for 60fps motion. This Hook is specifically\r\n * for animating props on arbitrary React components, or for animating text content.\r\n *\r\n * ```jsx\r\n * const [state, setState] = useAnimatedState({ percentage: 0 })\r\n *\r\n * return (\r\n *   <Graph\r\n *     percentage={state.percentage}\r\n *     onTap={() => setState({ percentage: 50 })}\r\n *   />\r\n * )\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * TODO:\r\n * - Make hook accept a typed version of Target that accepts any value (not just DOM values)\r\n * - Allow hook to accept single values. ie useAnimatedState(0)\r\n * - Allow providing MotionValues via initialState.\r\n *\r\n * @beta\r\n */\r\nfunction useAnimatedState(initialState) {\r\n    var _a = useState(initialState), animationState = _a[0], onUpdate = _a[1];\r\n    var config = useConstant(function () { return ({ onUpdate: onUpdate }); });\r\n    var values = useMotionValues(config);\r\n    var controls = useValueAnimationControls({\r\n        values: values,\r\n        readValueFromSource: function (key) { return animationState[key]; },\r\n    }, {}, false);\r\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\r\n        return controls.start(animationDefinition);\r\n    }; });\r\n    useEffect(function () {\r\n        values.mount();\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    return [animationState, startAnimation];\r\n}\n\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\r\nfunction useCycle() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    // TODO: After Framer X beta, remove this warning\r\n    warning(items.length > 1, \"useCycle syntax has changed. `useCycle([0, 1, 2])` becomes `useCycle(0, 1, 2)`\");\r\n    var index = useRef(0);\r\n    var _a = useState(items[index.current]), item = _a[0], setItem = _a[1];\r\n    return [\r\n        item,\r\n        function (next) {\r\n            index.current =\r\n                typeof next !== \"number\"\r\n                    ? wrap(0, items.length, index.current + 1)\r\n                    : next;\r\n            setItem(items[index.current]);\r\n        },\r\n    ];\r\n}\n\nvar PresenceChild = function (_a) {\r\n    var children = _a.children, exitProps = _a.exitProps;\r\n    var context = useContext(MotionContext);\r\n    // Create a new `value` in all instances to ensure `motion` children re-render\r\n    // and detect any layout changes that might have occurred.\r\n    context = __assign({}, context, { exitProps: exitProps || {} });\r\n    return (createElement(MotionContext.Provider, { value: context }, children));\r\n};\r\nfunction getChildKey(child) {\r\n    return child.key || \"\";\r\n}\r\nfunction updateChildLookup(children, allChildren) {\r\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\r\n    children.forEach(function (child) {\r\n        var key = getChildKey(child);\r\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\r\n            if (seenChildren.has(key)) {\r\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\r\n            }\r\n            seenChildren.add(key);\r\n        }\r\n        allChildren.set(key, child);\r\n    });\r\n}\r\nfunction onlyElements(children) {\r\n    var filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    Children.forEach(children, function (child) {\r\n        if (isValidElement(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n/**\r\n * The `AnimatePresence` component enables the use of the `exit` prop to animate components\r\n * when they're removed from the component tree.\r\n *\r\n * When adding/removing more than a single child component, every component\r\n * **must** be given a unique `key` prop.\r\n *\r\n * You can propagate exit animations throughout a tree by using variants.\r\n *\r\n * @library\r\n *\r\n * You can use any component(s) within `AnimatePresence`, but the first `Frame` in each should\r\n * have an `exit` property defined.\r\n *\r\n * ```jsx\r\n * import { Frame, AnimatePresence } from 'framer'\r\n *\r\n * // As items are added and removed from `items`\r\n * export function Items({ items }) {\r\n *   return (\r\n *     <AnimatePresence>\r\n *       {items.map(item => (\r\n *         <Frame\r\n *           key={item.id}\r\n *           initial={{ opacity: 0 }}\r\n *           animate={{ opacity: 1 }}\r\n *           exit={{ opacity: 0 }}\r\n *         />\r\n *       ))}\r\n *     </AnimatePresence>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * You can use any component(s) within `AnimatePresence`, but the first `motion` component in each should\r\n * have an `exit` property defined.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar AnimatePresence = function (_a) {\r\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter;\r\n    // We want to force a re-render once all exiting animations have finished. We\r\n    // either use a local forceUpdate function, or one from a parent context if it exists.\r\n    var localForceUpdate = useForceUpdate();\r\n    var contextForceUpdate = useContext(SyncLayoutContext);\r\n    var forceUpdate = contextForceUpdate || localForceUpdate;\r\n    var isInitialRender = useRef(true);\r\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\r\n    var filteredChildren = onlyElements(children);\r\n    // Keep a living record of the children we're actually rendering so we\r\n    // can diff to figure out which are entering and exiting\r\n    var presentChildren = useRef(filteredChildren);\r\n    // A lookup table to quickly reference components by key\r\n    var allChildren = useRef(new Map())\r\n        .current;\r\n    // A living record of all currently exiting components.\r\n    var exiting = useRef(new Set()).current;\r\n    updateChildLookup(filteredChildren, allChildren);\r\n    // If this is the initial component render, just deal with logic surrounding whether\r\n    // we play onMount animations or not.\r\n    if (isInitialRender.current) {\r\n        isInitialRender.current = false;\r\n        return (createElement(Fragment, null, filteredChildren.map(function (child) { return (createElement(PresenceChild, { key: getChildKey(child), exitProps: initial ? undefined : { initial: false } }, child)); })));\r\n    }\r\n    // If this is a subsequent render, deal with entering and exiting children\r\n    var childrenToRender = filteredChildren.slice();\r\n    // Diff the keys of the currently-present and target children to update our\r\n    // exiting list.\r\n    var presentKeys = presentChildren.current.map(getChildKey);\r\n    var targetKeys = filteredChildren.map(getChildKey);\r\n    // Diff the present children with our target children and mark those that are exiting\r\n    var numPresent = presentKeys.length;\r\n    for (var i = 0; i < numPresent; i++) {\r\n        var key = presentKeys[i];\r\n        if (targetKeys.indexOf(key) === -1) {\r\n            exiting.add(key);\r\n        }\r\n        else {\r\n            // In case this key has re-entered, remove from the exiting list\r\n            exiting.delete(key);\r\n        }\r\n    }\r\n    // If we currently have exiting children, and we're deferring rendering incoming children\r\n    // until after all current children have exiting, empty the childrenToRender array\r\n    if (exitBeforeEnter && exiting.size) {\r\n        childrenToRender = [];\r\n    }\r\n    // Loop through all currently exiting components and clone them to overwrite `animate`\r\n    // with any `exit` prop they might have defined.\r\n    exiting.forEach(function (key) {\r\n        // If this component is actually entering again, early return\r\n        if (targetKeys.indexOf(key) !== -1)\r\n            return;\r\n        var child = allChildren.get(key);\r\n        if (!child)\r\n            return;\r\n        var insertionIndex = presentKeys.indexOf(key);\r\n        var onExit = function () {\r\n            exiting.delete(key);\r\n            // Remove this child from the present children\r\n            var removeIndex = presentChildren.current.findIndex(function (child) { return child.key === key; });\r\n            presentChildren.current.splice(removeIndex, 1);\r\n            // Defer re-rendering until all exiting children have indeed left\r\n            if (!exiting.size) {\r\n                presentChildren.current = filteredChildren;\r\n                forceUpdate();\r\n                onExitComplete && onExitComplete();\r\n            }\r\n        };\r\n        var exitProps = {\r\n            custom: custom,\r\n            isExiting: true,\r\n            onExitComplete: onExit,\r\n        };\r\n        childrenToRender.splice(insertionIndex, 0, createElement(PresenceChild, { key: getChildKey(child), exitProps: exitProps }, child));\r\n    });\r\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\r\n    // the same tree between renders\r\n    childrenToRender = childrenToRender.map(function (child) {\r\n        var key = child.key;\r\n        return exiting.has(key) ? (child) : (createElement(PresenceChild, { key: getChildKey(child) }, child));\r\n    });\r\n    presentChildren.current = childrenToRender;\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        exitBeforeEnter &&\r\n        childrenToRender.length > 1) {\r\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\r\n    }\r\n    return (createElement(Fragment, null, exiting.size\r\n        ? childrenToRender\r\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\r\n};\n\nexport { AnimatePresence, AnimationControls, MotionContext, MotionPluginContext, MotionPlugins, MotionValue, Point, UnstableSyncLayout, animationControls, createMotionComponent, isValidMotionProp, motion, motionValue, transform, unwrapMotionValue, useAnimatedState, useAnimation, useCycle, useDomEvent, useExternalRef, useGestures, useInvertedScale, useMotionValue, usePanGesture, useSpring, useTapGesture, useTransform, useViewportScroll };\n"],"sourceRoot":""}