{"version":3,"sources":["webpack:///./node_modules/@popmotion/popcorn/dist/popcorn.es.js","webpack:///./node_modules/popmotion/dist/popmotion.es.js","webpack:///./node_modules/@popmotion/easing/dist/easing.es.js"],"names":["zeroPoint","x","y","z","isNum","v","angle","a","b","Math","atan2","PI","applyOffset","from","to","hasReceivedFrom","undefined","curryRange","func","min","max","cv","clamp$1","isPoint","point","hasOwnProperty","isPoint3D","distance1D","abs","distance","xDelta","yDelta","zDelta","sqrt","pow","progress","value","toFromDifference","mix","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","call","apply","this","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","type","test","notAnimatable","color$$1","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","key","alpha","combineFunctions","pipe","transformers","_i","reduce","getMixer","origin","target","mixComplex","mixArray","output","slice","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","push","interpolate","input","_a","_b","_c","clamp","inputLength","concat","reverse","interpolator","fastInterpolate","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","slowInterpolate","identity","springForce","alterDisplacement","constant","displacement","springModifiedDisplacement","velocityPerFrame","xps","frameDuration","velocityPerSecond","velocity","wrap$1","rangeSize","Observer","observer","_this","middleware","onComplete","isActive","update","updateObserver","complete","error","err","forEach","m","createObserver","observerCandidate","Action","props","create","start","isComplete","subscription","stop","init","observerProps","api","applyMiddleware","funcs","pipedUpdate","action","unitTypes","findUnitType","prop","createAction","createUnitAction","unitType","createMixerAction","createColorAction","createComplexAction","createVectorAction","typeTests","testNames","keys","isVectorProp","getVectorKeys","vectorKeys","testVectorProps","some","createVectorTests","testProp","getActionCreator","Boolean","isUnitProp","vectorDecay","_d","power","_e","timeConstant","_f","restDelta","modifyTarget","elapsed","amplitude","idealTarget","round","process","frameDelta","delta","exp","isMoving","vectorSpring","stiffness","damping","_g","mass","_h","restSpeed","_j","initialVelocity","position","prevPosition","timeDelta","dampingRatio","angularFreq","envelope","expoDecay","sin","cos","isBelowVelocityThreshold","isBelowDisplacementThreshold","index","bounceStiffness","bounceDamping","activeAnimation","prev","current","isSpring","isLessThanMin","isMoreThanMax","isOutOfBounds","onUpdate","currentVelocity","isTravellingAwayFromBounds","startSpring","startAnimation","animation","next","vectorScrubber","reverseEase","seek","clampProgress","tween","duration","flip","loop","yoyo","repeatDelay","_k","_l","flipCount","_m","yoyoCount","_o","loopCount","playhead","currentProgress","reverseAnimation","updateTween","startTimer","stopTimer","getElapsed","getProgress","pause","resume","newProgress","clampProgress$1","keyframes","easings","times","values","tweenProps","easing","splice","defaultEasings","defaultTimings","scrubbers","rangeLength","finalInputIndex","finalScrubberIndex","subs","scrub","interpolateScrubbers","listen","element","events","options","eventNames","split","eventName","addEventListener","removeEventListener","defaultPointerPos","clientX","clientY","pageX","pageY","eventToPoint","e","points","document","passive","capture","touches","numTouches","thisTouch","delay","timeToDelay","timeout","setTimeout","clearTimeout","reversed","mirrored","createReversedEasing","createMirroredEasing","createExpoIn","createBackIn","createAnticipateEasing","backEasing","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","bounceOut","p2","bounceIn","bounceInOut","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","K_SPLINE_TABLE_SIZE","K_SAMPLE_STEP_SIZE","FLOAT_32_SUPPORTED","Float32Array","a1","a2","c","getSlope","calcBezier","cubicBezier","mX1","mY1","mX2","mY2","sampleValues","getTForX","aX","dist","guessForT","initialSlope","intervalStart","currentSample","lastSample","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","calcSampleValues"],"mappings":"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","file":"npm.popmotion.js","sourcesContent":["import { hsla, rgba, hex, color, complex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { getFrameData } from 'framesync';\nimport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\nexport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\n\nvar zeroPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n};\r\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar radiansToDegrees = (function (radians) { return (radians * 180) / Math.PI; });\n\nvar angle = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\r\n});\n\nvar applyOffset = (function (from, to) {\r\n    var hasReceivedFrom = true;\r\n    if (to === undefined) {\r\n        to = from;\r\n        hasReceivedFrom = false;\r\n    }\r\n    return function (v) {\r\n        if (hasReceivedFrom) {\r\n            return v - from + to;\r\n        }\r\n        else {\r\n            from = v;\r\n            hasReceivedFrom = true;\r\n            return to;\r\n        }\r\n    };\r\n});\n\nvar curryRange = (function (func) { return function (min, max, v) { return (v !== undefined ? func(min, max, v) : function (cv) { return func(min, max, cv); }); }; });\n\nvar clamp = function (min, max, v) {\r\n    return Math.min(Math.max(v, min), max);\r\n};\r\nvar clamp$1 = curryRange(clamp);\n\nvar conditional = (function (check, apply) { return function (v) {\r\n    return check(v) ? apply(v) : v;\r\n}; });\n\nvar degreesToRadians = (function (degrees) { return (degrees * Math.PI) / 180; });\n\nvar isPoint = (function (point) {\r\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\r\n});\n\nvar isPoint3D = (function (point) {\r\n    return isPoint(point) && point.hasOwnProperty('z');\r\n});\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\r\nvar distance = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    if (isNum(a) && isNum(b)) {\r\n        return distance1D(a, b);\r\n    }\r\n    else if (isPoint(a) && isPoint(b)) {\r\n        var xDelta = distance1D(a.x, b.x);\r\n        var yDelta = distance1D(a.y, b.y);\r\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\r\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\r\n    }\r\n    return 0;\r\n});\n\nvar progress = (function (from, to, value) {\r\n    var toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n});\n\nvar mix = (function (from, to, progress) {\r\n    return -progress * from + progress * to + from;\r\n});\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar mixLinearColor = function (from, to, v) {\r\n    var fromExpo = from * from;\r\n    var toExpo = to * to;\r\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\r\n};\r\nvar colorTypes = [hex, rgba, hsla];\r\nvar getColorType = function (v) {\r\n    return colorTypes.find(function (type) { return type.test(v); });\r\n};\r\nvar notAnimatable = function (color$$1) {\r\n    return \"'\" + color$$1 + \"' is not an animatable color. Use the equivalent color code instead.\";\r\n};\r\nvar mixColor = (function (from, to) {\r\n    var fromColorType = getColorType(from);\r\n    var toColorType = getColorType(to);\r\n    invariant(!!fromColorType, notAnimatable(from));\r\n    invariant(!!toColorType, notAnimatable(to));\r\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\r\n    var fromColor = fromColorType.parse(from);\r\n    var toColor = toColorType.parse(to);\r\n    var blended = __assign({}, fromColor);\r\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\r\n    return function (v) {\r\n        for (var key in blended) {\r\n            if (key !== 'alpha') {\r\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\r\n        return fromColorType.transform(blended);\r\n    };\r\n});\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\r\nvar pipe = (function () {\r\n    var transformers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        transformers[_i] = arguments[_i];\r\n    }\r\n    return transformers.reduce(combineFunctions);\r\n});\n\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return function (v) { return mix(origin, target, v); };\r\n    }\r\n    else if (color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nvar mixArray = function (from, to) {\r\n    var output = from.slice();\r\n    var numValues = output.length;\r\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\r\n    return function (v) {\r\n        for (var i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nvar mixObject = function (origin, target) {\r\n    var output = __assign({}, origin, target);\r\n    var blendValue = {};\r\n    for (var key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return function (v) {\r\n        for (var key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    var parsed = complex.parse(value);\r\n    var numValues = parsed.length;\r\n    var numNumbers = 0;\r\n    var numRGB = 0;\r\n    var numHSL = 0;\r\n    for (var i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === 'number') {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\r\n}\r\nvar mixComplex = function (origin, target) {\r\n    var template = complex.createTransformer(target);\r\n    var originStats = analyse(origin);\r\n    var targetStats = analyse(target);\r\n    invariant(originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\r\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === 'number') {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === 'string') {\r\n        if (color.test(v)) {\r\n            return mixColor;\r\n        }\r\n        else {\r\n            return mixComplex;\r\n        }\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === 'object') {\r\n        return mixObject;\r\n    }\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    var mixers = [];\r\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    var numMixers = output.length - 1;\r\n    for (var i = 0; i < numMixers; i++) {\r\n        var mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\nfunction fastInterpolate(_a, _b) {\r\n    var from = _a[0], to = _a[1];\r\n    var mixer = _b[0];\r\n    return function (v) { return mixer(progress(from, to, v)); };\r\n}\r\nfunction slowInterpolate(input, mixers) {\r\n    var inputLength = input.length;\r\n    var lastInputIndex = inputLength - 1;\r\n    return function (v) {\r\n        var mixerIndex = 0;\r\n        var foundMixerIndex = false;\r\n        if (v <= input[0]) {\r\n            foundMixerIndex = true;\r\n        }\r\n        else if (v >= input[lastInputIndex]) {\r\n            mixerIndex = lastInputIndex - 1;\r\n            foundMixerIndex = true;\r\n        }\r\n        if (!foundMixerIndex) {\r\n            var i = 1;\r\n            for (; i < inputLength; i++) {\r\n                if (input[i] > v || i === lastInputIndex) {\r\n                    break;\r\n                }\r\n            }\r\n            mixerIndex = i - 1;\r\n        }\r\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\r\n        return mixers[mixerIndex](progressInRange);\r\n    };\r\n}\r\nfunction interpolate(input, output, _a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, clamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\r\n    var inputLength = input.length;\r\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\r\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [].concat(input);\r\n        output = [].concat(output);\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    var mixers = createMixers(output, ease, mixer);\r\n    var interpolator = inputLength === 2\r\n        ? fastInterpolate(input, mixers)\r\n        : slowInterpolate(input, mixers);\r\n    return clamp\r\n        ? pipe(clamp$1(input[0], input[inputLength - 1]), interpolator)\r\n        : interpolator;\r\n}\n\nvar pointFromVector = (function (origin, angle, distance) {\r\n    angle = degreesToRadians(angle);\r\n    return {\r\n        x: distance * Math.cos(angle) + origin.x,\r\n        y: distance * Math.sin(angle) + origin.y\r\n    };\r\n});\n\nvar toDecimal = (function (num, precision) {\r\n    if (precision === void 0) { precision = 2; }\r\n    precision = Math.pow(10, precision);\r\n    return Math.round(num * precision) / precision;\r\n});\n\nvar smoothFrame = (function (prevValue, nextValue, duration, smoothing) {\r\n    if (smoothing === void 0) { smoothing = 0; }\r\n    return toDecimal(prevValue +\r\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\r\n});\n\nvar smooth = (function (strength) {\r\n    if (strength === void 0) { strength = 50; }\r\n    var previousValue = 0;\r\n    var lastUpdated = 0;\r\n    return function (v) {\r\n        var currentFramestamp = getFrameData().timestamp;\r\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\r\n        var newValue = timeDelta\r\n            ? smoothFrame(previousValue, v, timeDelta, strength)\r\n            : previousValue;\r\n        lastUpdated = currentFramestamp;\r\n        previousValue = newValue;\r\n        return newValue;\r\n    };\r\n});\n\nvar snap = (function (points) {\r\n    if (typeof points === 'number') {\r\n        return function (v) { return Math.round(v / points) * points; };\r\n    }\r\n    else {\r\n        var i_1 = 0;\r\n        var numPoints_1 = points.length;\r\n        return function (v) {\r\n            var lastDistance = Math.abs(points[0] - v);\r\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\r\n                var point = points[i_1];\r\n                var distance = Math.abs(point - v);\r\n                if (distance === 0)\r\n                    return point;\r\n                if (distance > lastDistance)\r\n                    return points[i_1 - 1];\r\n                if (i_1 === numPoints_1 - 1)\r\n                    return point;\r\n                lastDistance = distance;\r\n            }\r\n        };\r\n    }\r\n});\n\nvar identity = function (v) { return v; };\r\nvar springForce = function (alterDisplacement) {\r\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\r\n    return curryRange(function (constant, origin, v) {\r\n        var displacement = origin - v;\r\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n        return displacement <= 0\r\n            ? origin + springModifiedDisplacement\r\n            : origin - springModifiedDisplacement;\r\n    });\r\n};\r\nvar springForceLinear = springForce();\r\nvar springForceExpo = springForce(Math.sqrt);\n\nvar velocityPerFrame = (function (xps, frameDuration) {\r\n    return isNum(xps) ? xps / (1000 / frameDuration) : 0;\r\n});\n\nvar velocityPerSecond = (function (velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n});\n\nvar wrap = function (min, max, v) {\r\n    var rangeSize = max - min;\r\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\r\n};\r\nvar wrap$1 = curryRange(wrap);\n\nvar clampProgress = clamp$1(0, 1);\r\nvar steps = (function (steps, direction) {\r\n    if (direction === void 0) { direction = 'end'; }\r\n    return function (progress) {\r\n        progress =\r\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\r\n        var expanded = progress * steps;\r\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\r\n        return clampProgress(rounded / steps);\r\n    };\r\n});\n\nexport { angle, applyOffset, clamp$1 as clamp, conditional, degreesToRadians, distance, interpolate, isPoint, isPoint3D, mix, mixArray, mixColor, mixComplex, mixObject, pipe, pointFromVector, progress, radiansToDegrees, smooth, smoothFrame, snap, springForce, springForceExpo, springForceLinear, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap$1 as wrap };\n","import { __rest, __assign, __extends } from 'tslib';\nimport { pipe, velocityPerSecond, mixComplex, mixColor, mix, clamp, progress, velocityPerFrame, distance, angle, applyOffset } from '@popmotion/popcorn';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { color, complex, px, percent, degrees, vh, vw, number } from 'style-value-types';\nimport { createReversedEasing, linear, easeOut, easeInOut } from '@popmotion/easing';\nimport { invariant } from 'hey-listen';\n\nvar Observer = /*#__PURE__*/function () {\n    function Observer(_a, observer) {\n        var _this = this;\n        var middleware = _a.middleware,\n            onComplete = _a.onComplete;\n        this.isActive = true;\n        this.update = function (v) {\n            if (_this.observer.update) _this.updateObserver(v);\n        };\n        this.complete = function () {\n            if (_this.observer.complete && _this.isActive) _this.observer.complete();\n            if (_this.onComplete) _this.onComplete();\n            _this.isActive = false;\n        };\n        this.error = function (err) {\n            if (_this.observer.error && _this.isActive) _this.observer.error(err);\n            _this.isActive = false;\n        };\n        this.observer = observer;\n        this.updateObserver = function (v) {\n            return observer.update(v);\n        };\n        this.onComplete = onComplete;\n        if (observer.update && middleware && middleware.length) {\n            middleware.forEach(function (m) {\n                return _this.updateObserver = m(_this.updateObserver, _this.complete);\n            });\n        }\n    }\n    return Observer;\n}();\nvar createObserver = function (observerCandidate, _a, onComplete) {\n    var middleware = _a.middleware;\n    if (typeof observerCandidate === 'function') {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, { update: observerCandidate });\n    } else {\n        return new Observer({ middleware: middleware, onComplete: onComplete }, observerCandidate);\n    }\n};\n\nvar Action = /*#__PURE__*/function () {\n    function Action(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Action.prototype.create = function (props) {\n        return new Action(props);\n    };\n    Action.prototype.start = function (observerCandidate) {\n        if (observerCandidate === void 0) {\n            observerCandidate = {};\n        }\n        var isComplete = false;\n        var subscription = {\n            stop: function () {\n                return undefined;\n            }\n        };\n        var _a = this.props,\n            init = _a.init,\n            observerProps = __rest(_a, [\"init\"]);\n        var observer = createObserver(observerCandidate, observerProps, function () {\n            isComplete = true;\n            subscription.stop();\n        });\n        var api = init(observer);\n        subscription = api ? __assign({}, subscription, api) : subscription;\n        if (isComplete) subscription.stop();\n        return subscription;\n    };\n    Action.prototype.applyMiddleware = function (middleware) {\n        return this.create(__assign({}, this.props, { middleware: this.props.middleware ? [middleware].concat(this.props.middleware) : [middleware] }));\n    };\n    Action.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : pipe.apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    return Action;\n}();\nvar action = function (init) {\n    return new Action({ init: init });\n};\n\nvar Chainable = /*#__PURE__*/function () {\n    function Chainable(props) {\n        if (props === void 0) {\n            props = {};\n        }\n        this.props = props;\n    }\n    Chainable.prototype.applyMiddleware = function (middleware) {\n        return this.create(__assign({}, this.props, { middleware: this.props.middleware ? [middleware].concat(this.props.middleware) : [middleware] }));\n    };\n    Chainable.prototype.pipe = function () {\n        var funcs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            funcs[_i] = arguments[_i];\n        }\n        var pipedUpdate = funcs.length === 1 ? funcs[0] : pipe.apply(void 0, funcs);\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return update(pipedUpdate(v));\n            };\n        });\n    };\n    Chainable.prototype.while = function (predicate) {\n        return this.applyMiddleware(function (update, complete) {\n            return function (v) {\n                return predicate(v) ? update(v) : complete();\n            };\n        });\n    };\n    Chainable.prototype.filter = function (predicate) {\n        return this.applyMiddleware(function (update) {\n            return function (v) {\n                return predicate(v) && update(v);\n            };\n        });\n    };\n    return Chainable;\n}();\n\nvar BaseMulticast = /*#__PURE__*/function (_super) {\n    __extends(BaseMulticast, _super);\n    function BaseMulticast() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.subscribers = [];\n        return _this;\n    }\n    BaseMulticast.prototype.complete = function () {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.complete();\n        });\n    };\n    BaseMulticast.prototype.error = function (err) {\n        this.subscribers.forEach(function (subscriber) {\n            return subscriber.error(err);\n        });\n    };\n    BaseMulticast.prototype.update = function (v) {\n        for (var i = 0; i < this.subscribers.length; i++) {\n            this.subscribers[i].update(v);\n        }\n    };\n    BaseMulticast.prototype.subscribe = function (observerCandidate) {\n        var _this = this;\n        var observer = createObserver(observerCandidate, this.props);\n        this.subscribers.push(observer);\n        var subscription = {\n            unsubscribe: function () {\n                var index = _this.subscribers.indexOf(observer);\n                if (index !== -1) _this.subscribers.splice(index, 1);\n            }\n        };\n        return subscription;\n    };\n    BaseMulticast.prototype.stop = function () {\n        if (this.parent) this.parent.stop();\n    };\n    return BaseMulticast;\n}(Chainable);\n\nvar Multicast = /*#__PURE__*/function (_super) {\n    __extends(Multicast, _super);\n    function Multicast() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Multicast.prototype.create = function (props) {\n        return new Multicast(props);\n    };\n    return Multicast;\n}(BaseMulticast);\nvar multicast = function () {\n    return new Multicast();\n};\n\nvar ValueReaction = /*#__PURE__*/function (_super) {\n    __extends(ValueReaction, _super);\n    function ValueReaction(props) {\n        var _this = _super.call(this, props) || this;\n        _this.scheduleVelocityCheck = function () {\n            return sync.postRender(_this.velocityCheck);\n        };\n        _this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n            }\n        };\n        _this.prev = _this.current = props.value || 0;\n        _this.updateCurrent = function (v) {\n            return _this.current = v;\n        };\n        _this.getVelocityOfCurrent = function () {\n            return _this.getSingleVelocity(_this.current, _this.prev);\n        };\n        if (props.initialSubscription) _this.subscribe(props.initialSubscription);\n        return _this;\n    }\n    ValueReaction.prototype.create = function (props) {\n        return new ValueReaction(props);\n    };\n    ValueReaction.prototype.get = function () {\n        return this.current;\n    };\n    ValueReaction.prototype.getVelocity = function () {\n        return this.getVelocityOfCurrent();\n    };\n    ValueReaction.prototype.update = function (v) {\n        _super.prototype.update.call(this, v);\n        this.prev = this.current;\n        this.updateCurrent(v);\n        var _a = getFrameData(),\n            delta = _a.delta,\n            timestamp = _a.timestamp;\n        this.timeDelta = delta;\n        this.lastUpdated = timestamp;\n        sync.postRender(this.scheduleVelocityCheck);\n    };\n    ValueReaction.prototype.subscribe = function (observerCandidate) {\n        var sub = _super.prototype.subscribe.call(this, observerCandidate);\n        this.subscribers[this.subscribers.length - 1].update(this.current);\n        return sub;\n    };\n    ValueReaction.prototype.getSingleVelocity = function (current, prev) {\n        return typeof current === 'number' && typeof prev === 'number' ? velocityPerSecond(current - prev, this.timeDelta) : velocityPerSecond(parseFloat(current) - parseFloat(prev), this.timeDelta) || 0;\n    };\n    return ValueReaction;\n}(BaseMulticast);\nvar value = function (value, initialSubscription) {\n    return new ValueReaction({ value: value, initialSubscription: initialSubscription });\n};\n\nvar createVectorTests = function (typeTests) {\n    var testNames = Object.keys(typeTests);\n    var isVectorProp = function (prop, key) {\n        return prop !== undefined && !typeTests[key](prop);\n    };\n    var getVectorKeys = function (props) {\n        return testNames.reduce(function (vectorKeys, key) {\n            if (isVectorProp(props[key], key)) vectorKeys.push(key);\n            return vectorKeys;\n        }, []);\n    };\n    var testVectorProps = function (props) {\n        return props && testNames.some(function (key) {\n            return isVectorProp(props[key], key);\n        });\n    };\n    return { getVectorKeys: getVectorKeys, testVectorProps: testVectorProps };\n};\nvar unitTypes = [px, percent, degrees, vh, vw];\nvar findUnitType = function (prop) {\n    return unitTypes.find(function (type) {\n        return type.test(prop);\n    });\n};\nvar isUnitProp = function (prop) {\n    return Boolean(findUnitType(prop));\n};\nvar createAction = function (action, props) {\n    return action(props);\n};\nvar createUnitAction = function (action, _a) {\n    var from = _a.from,\n        to = _a.to,\n        props = __rest(_a, [\"from\", \"to\"]);\n    var unitType = findUnitType(from) || findUnitType(to);\n    var transform = unitType.transform,\n        parse = unitType.parse;\n    return action(__assign({}, props, { from: typeof from === 'string' ? parse(from) : from, to: typeof to === 'string' ? parse(to) : to })).pipe(transform);\n};\nvar createMixerAction = function (mixer) {\n    return function (action, _a) {\n        var from = _a.from,\n            to = _a.to,\n            props = __rest(_a, [\"from\", \"to\"]);\n        return action(__assign({}, props, { from: 0, to: 1 })).pipe(mixer(from, to));\n    };\n};\nvar createColorAction = /*#__PURE__*/createMixerAction(mixColor);\nvar createComplexAction = /*#__PURE__*/createMixerAction(mixComplex);\nvar createVectorAction = function (action, typeTests) {\n    var _a = createVectorTests(typeTests),\n        testVectorProps = _a.testVectorProps,\n        getVectorKeys = _a.getVectorKeys;\n    var vectorAction = function (props) {\n        var isVector = testVectorProps(props);\n        if (!isVector) return action(props);\n        var vectorKeys = getVectorKeys(props);\n        var testKey = vectorKeys[0];\n        var testProp = props[testKey];\n        return getActionCreator(testProp)(action, props, vectorKeys);\n    };\n    return vectorAction;\n};\nvar getActionCreator = function (prop) {\n    if (typeof prop === 'number') {\n        return createAction;\n    } else if (isUnitProp(prop)) {\n        return createUnitAction;\n    } else if (color.test(prop)) {\n        return createColorAction;\n    } else if (complex.test(prop)) {\n        return createComplexAction;\n    } else {\n        return createAction;\n    }\n};\n\nvar decay = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0 : _b,\n            _c = props.from,\n            from = _c === void 0 ? 0 : _c,\n            _d = props.power,\n            power = _d === void 0 ? 0.8 : _d,\n            _e = props.timeConstant,\n            timeConstant = _e === void 0 ? 350 : _e,\n            _f = props.restDelta,\n            restDelta = _f === void 0 ? 0.5 : _f,\n            modifyTarget = props.modifyTarget;\n        var elapsed = 0;\n        var amplitude = power * velocity;\n        var idealTarget = Math.round(from + amplitude);\n        var target = typeof modifyTarget === 'undefined' ? idealTarget : modifyTarget(idealTarget);\n        var process = sync.update(function (_a) {\n            var frameDelta = _a.delta;\n            elapsed += frameDelta;\n            var delta = -amplitude * Math.exp(-elapsed / timeConstant);\n            var isMoving = delta > restDelta || delta < -restDelta;\n            var current = isMoving ? target + delta : target;\n            update(current);\n            if (!isMoving) {\n                cancelSync.update(process);\n                complete();\n            }\n        }, true);\n        return {\n            stop: function () {\n                return cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorDecay = /*#__PURE__*/createVectorAction(decay, {\n    from: number.test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    },\n    velocity: number.test\n});\n\nvar spring = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.velocity,\n            velocity = _b === void 0 ? 0.0 : _b;\n        var _c = props.from,\n            from = _c === void 0 ? 0.0 : _c,\n            _d = props.to,\n            to = _d === void 0 ? 0.0 : _d,\n            _e = props.stiffness,\n            stiffness = _e === void 0 ? 100 : _e,\n            _f = props.damping,\n            damping = _f === void 0 ? 10 : _f,\n            _g = props.mass,\n            mass = _g === void 0 ? 1.0 : _g,\n            _h = props.restSpeed,\n            restSpeed = _h === void 0 ? 0.01 : _h,\n            _j = props.restDelta,\n            restDelta = _j === void 0 ? 0.01 : _j;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var t = 0;\n        var delta = to - from;\n        var position = from;\n        var prevPosition = position;\n        var process = sync.update(function (_a) {\n            var timeDelta = _a.delta;\n            t += timeDelta;\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n            prevPosition = position;\n            if (dampingRatio < 1) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta) / expoDecay * Math.sin(expoDecay * t) + delta * Math.cos(expoDecay * t));\n            } else {\n                var envelope = Math.exp(-angularFreq * t);\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n            }\n            velocity = velocityPerSecond(position - prevPosition, timeDelta);\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n                position = to;\n                update(position);\n                cancelSync.update(process);\n                complete();\n            } else {\n                update(position);\n            }\n        }, true);\n        return {\n            stop: function () {\n                return cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorSpring = /*#__PURE__*/createVectorAction(spring, {\n    from: number.test,\n    to: number.test,\n    stiffness: number.test,\n    damping: number.test,\n    mass: number.test,\n    velocity: number.test\n});\n\nvar inertia = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 700 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget;\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var prev = from;\n        var current = from;\n        var activeAnimation;\n        var isSpring = false;\n        var isLessThanMin = function (v) {\n            return min !== undefined && v <= min;\n        };\n        var isMoreThanMax = function (v) {\n            return max !== undefined && v >= max;\n        };\n        var isOutOfBounds = function (v) {\n            return isLessThanMin(v) || isMoreThanMax(v);\n        };\n        var isTravellingAwayFromBounds = function (v, currentVelocity) {\n            return isLessThanMin(v) && currentVelocity < 0 || isMoreThanMax(v) && currentVelocity > 0;\n        };\n        var onUpdate = function (v) {\n            update(v);\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(current - prev, getFrameData().delta);\n            if (activeAnimation && !isSpring && isTravellingAwayFromBounds(v, velocity)) {\n                startSpring({ from: v, velocity: velocity });\n            }\n        };\n        var startAnimation = function (animation, next) {\n            activeAnimation && activeAnimation.stop();\n            activeAnimation = animation.start({\n                update: onUpdate,\n                complete: function () {\n                    if (next) {\n                        next();\n                        return;\n                    }\n                    complete();\n                }\n            });\n        };\n        var startSpring = function (props) {\n            isSpring = true;\n            startAnimation(vectorSpring(__assign({}, props, { to: isLessThanMin(props.from) ? min : max, stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta })));\n        };\n        if (isOutOfBounds(from)) {\n            startSpring({ from: from, velocity: velocity });\n        } else if (velocity !== 0) {\n            var animation = vectorDecay({\n                from: from,\n                velocity: velocity,\n                timeConstant: timeConstant,\n                power: power,\n                restDelta: isOutOfBounds(from) ? 20 : restDelta,\n                modifyTarget: modifyTarget\n            });\n            startAnimation(animation, function () {\n                if (isOutOfBounds(current)) {\n                    startSpring({ from: current, velocity: velocity });\n                } else {\n                    complete();\n                }\n            });\n        } else {\n            complete();\n        }\n        return {\n            stop: function () {\n                return activeAnimation && activeAnimation.stop();\n            }\n        };\n    });\n};\nvar index = /*#__PURE__*/createVectorAction(inertia, {\n    from: number.test,\n    velocity: number.test,\n    min: number.test,\n    max: number.test,\n    damping: number.test,\n    stiffness: number.test,\n    modifyTarget: function (func) {\n        return typeof func === 'function';\n    }\n});\n\nvar frame = function () {\n    return action(function (_a) {\n        var update = _a.update;\n        var initialTime = 0;\n        var process = sync.update(function (_a) {\n            var timestamp = _a.timestamp;\n            if (!initialTime) initialTime = timestamp;\n            update(timestamp - initialTime);\n        }, true, true);\n        return {\n            stop: function () {\n                return cancelSync.update(process);\n            }\n        };\n    });\n};\n\nvar scrubber = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        _d = _a.ease,\n        ease = _d === void 0 ? linear : _d,\n        _e = _a.reverseEase,\n        reverseEase = _e === void 0 ? false : _e;\n    if (reverseEase) {\n        ease = createReversedEasing(ease);\n    }\n    return action(function (_a) {\n        var update = _a.update;\n        return {\n            seek: function (progress) {\n                return update(progress);\n            }\n        };\n    }).pipe(ease, function (v) {\n        return mix(from, to, v);\n    });\n};\nvar vectorScrubber = /*#__PURE__*/createVectorAction(scrubber, {\n    ease: function (func) {\n        return typeof func === 'function';\n    },\n    from: number.test,\n    to: number.test\n});\n\nvar clampProgress = /*#__PURE__*/clamp(0, 1);\nvar tween = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var _b = props.duration,\n            duration = _b === void 0 ? 300 : _b,\n            _c = props.ease,\n            ease = _c === void 0 ? easeOut : _c,\n            _d = props.flip,\n            flip = _d === void 0 ? 0 : _d,\n            _e = props.loop,\n            loop = _e === void 0 ? 0 : _e,\n            _f = props.yoyo,\n            yoyo = _f === void 0 ? 0 : _f,\n            _g = props.repeatDelay,\n            repeatDelay = _g === void 0 ? 0 : _g;\n        var _h = props.from,\n            from = _h === void 0 ? 0 : _h,\n            _j = props.to,\n            to = _j === void 0 ? 1 : _j,\n            _k = props.elapsed,\n            elapsed = _k === void 0 ? 0 : _k,\n            _l = props.flipCount,\n            flipCount = _l === void 0 ? 0 : _l,\n            _m = props.yoyoCount,\n            yoyoCount = _m === void 0 ? 0 : _m,\n            _o = props.loopCount,\n            loopCount = _o === void 0 ? 0 : _o;\n        var playhead = vectorScrubber({ from: from, to: to, ease: ease }).start(update);\n        var currentProgress = 0;\n        var process;\n        var isActive = false;\n        var reverseAnimation = function (reverseEase) {\n            var _a;\n            if (reverseEase === void 0) {\n                reverseEase = false;\n            }\n            _a = [to, from], from = _a[0], to = _a[1];\n            playhead = vectorScrubber({ from: from, to: to, ease: ease, reverseEase: reverseEase }).start(update);\n        };\n        var isTweenComplete = function () {\n            var isComplete = isActive && elapsed > duration + repeatDelay;\n            if (!isComplete) return false;\n            if (isComplete && !loop && !flip && !yoyo) return true;\n            var overtime = elapsed - duration;\n            elapsed = overtime - repeatDelay;\n            if (loop && loopCount < loop) {\n                loopCount++;\n                return false;\n            } else if (flip && flipCount < flip) {\n                flipCount++;\n                reverseAnimation();\n                return false;\n            } else if (yoyo && yoyoCount < yoyo) {\n                yoyoCount++;\n                reverseAnimation(yoyoCount % 2 !== 0);\n                return false;\n            }\n            return true;\n        };\n        var updateTween = function () {\n            currentProgress = clampProgress(progress(0, duration, elapsed));\n            playhead.seek(currentProgress);\n        };\n        var startTimer = function () {\n            isActive = true;\n            process = sync.update(function (_a) {\n                var delta = _a.delta;\n                elapsed += delta;\n                updateTween();\n                if (isTweenComplete()) {\n                    cancelSync.update(process);\n                    complete && sync.update(complete, false, true);\n                }\n            }, true);\n        };\n        var stopTimer = function () {\n            isActive = false;\n            if (process) cancelSync.update(process);\n        };\n        startTimer();\n        return {\n            isActive: function () {\n                return isActive;\n            },\n            getElapsed: function () {\n                return clamp(0, duration, elapsed);\n            },\n            getProgress: function () {\n                return currentProgress;\n            },\n            stop: function () {\n                stopTimer();\n            },\n            pause: function () {\n                stopTimer();\n                return this;\n            },\n            resume: function () {\n                if (!isActive) startTimer();\n                return this;\n            },\n            seek: function (newProgress) {\n                elapsed = mix(0, duration, newProgress);\n                sync.update(updateTween, false, true);\n                return this;\n            },\n            reverse: function () {\n                reverseAnimation();\n                return this;\n            }\n        };\n    });\n};\n\nvar clampProgress$1 = /*#__PURE__*/clamp(0, 1);\nvar defaultEasings = function (values, easing) {\n    return values.map(function () {\n        return easing || easeOut;\n    }).splice(0, values.length - 1);\n};\nvar defaultTimings = function (values) {\n    var numValues = values.length;\n    return values.map(function (value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n};\nvar interpolateScrubbers = function (input, scrubbers, update) {\n    var rangeLength = input.length;\n    var finalInputIndex = rangeLength - 1;\n    var finalScrubberIndex = finalInputIndex - 1;\n    var subs = scrubbers.map(function (scrub) {\n        return scrub.start(update);\n    });\n    return function (v) {\n        if (v <= input[0]) {\n            subs[0].seek(0);\n        }\n        if (v >= input[finalInputIndex]) {\n            subs[finalScrubberIndex].seek(1);\n        }\n        var i = 1;\n        for (; i < rangeLength; i++) {\n            if (input[i] > v || i === finalInputIndex) break;\n        }\n        var progressInRange = progress(input[i - 1], input[i], v);\n        subs[i - 1].seek(clampProgress$1(progressInRange));\n    };\n};\nvar keyframes = function (_a) {\n    var easings = _a.easings,\n        _b = _a.ease,\n        ease = _b === void 0 ? linear : _b,\n        times = _a.times,\n        values = _a.values,\n        tweenProps = __rest(_a, [\"easings\", \"ease\", \"times\", \"values\"]);\n    easings = Array.isArray(easings) ? easings : defaultEasings(values, easings);\n    times = times || defaultTimings(values);\n    var scrubbers = easings.map(function (easing, i) {\n        return vectorScrubber({\n            from: values[i],\n            to: values[i + 1],\n            ease: easing\n        });\n    });\n    return tween(__assign({}, tweenProps, { ease: ease })).applyMiddleware(function (update) {\n        return interpolateScrubbers(times, scrubbers, update);\n    });\n};\n\nvar physics = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return action(function (_a) {\n        var complete = _a.complete,\n            update = _a.update;\n        var _b = props.acceleration,\n            acceleration = _b === void 0 ? 0 : _b,\n            _c = props.friction,\n            friction = _c === void 0 ? 0 : _c,\n            _d = props.velocity,\n            velocity = _d === void 0 ? 0 : _d,\n            springStrength = props.springStrength,\n            to = props.to;\n        var _e = props.restSpeed,\n            restSpeed = _e === void 0 ? 0.001 : _e,\n            _f = props.from,\n            from = _f === void 0 ? 0 : _f;\n        var current = from;\n        var process = sync.update(function (_a) {\n            var delta = _a.delta;\n            var elapsed = Math.max(delta, 16);\n            if (acceleration) velocity += velocityPerFrame(acceleration, elapsed);\n            if (friction) velocity *= Math.pow(1 - friction, elapsed / 100);\n            if (springStrength !== undefined && to !== undefined) {\n                var distanceToTarget = to - current;\n                velocity += distanceToTarget * velocityPerFrame(springStrength, elapsed);\n            }\n            current += velocityPerFrame(velocity, elapsed);\n            update(current);\n            var isComplete = restSpeed !== false && (!velocity || Math.abs(velocity) <= restSpeed);\n            if (isComplete) {\n                cancelSync.update(process);\n                complete();\n            }\n        }, true);\n        return {\n            set: function (v) {\n                current = v;\n                return this;\n            },\n            setAcceleration: function (v) {\n                acceleration = v;\n                return this;\n            },\n            setFriction: function (v) {\n                friction = v;\n                return this;\n            },\n            setSpringStrength: function (v) {\n                springStrength = v;\n                return this;\n            },\n            setSpringTarget: function (v) {\n                to = v;\n                return this;\n            },\n            setVelocity: function (v) {\n                velocity = v;\n                return this;\n            },\n            stop: function () {\n                return cancelSync.update(process);\n            }\n        };\n    });\n};\nvar vectorPhysics = /*#__PURE__*/createVectorAction(physics, {\n    acceleration: number.test,\n    friction: number.test,\n    velocity: number.test,\n    from: number.test,\n    to: number.test,\n    springStrength: number.test\n});\n\nvar multi = function (_a) {\n    var getCount = _a.getCount,\n        getFirst = _a.getFirst,\n        getOutput = _a.getOutput,\n        mapApi = _a.mapApi,\n        setProp = _a.setProp,\n        startActions = _a.startActions;\n    return function (actions) {\n        return action(function (_a) {\n            var update = _a.update,\n                complete = _a.complete,\n                error = _a.error;\n            var numActions = getCount(actions);\n            var output = getOutput();\n            var updateOutput = function () {\n                return update(output);\n            };\n            var numCompletedActions = 0;\n            var subs = startActions(actions, function (a, name) {\n                var hasCompleted = false;\n                return a.start({\n                    complete: function () {\n                        if (!hasCompleted) {\n                            hasCompleted = true;\n                            numCompletedActions++;\n                            if (numCompletedActions === numActions) sync.update(complete);\n                        }\n                    },\n                    error: error,\n                    update: function (v) {\n                        setProp(output, name, v);\n                        sync.update(updateOutput, false, true);\n                    }\n                });\n            });\n            return Object.keys(getFirst(subs)).reduce(function (api, methodName) {\n                api[methodName] = mapApi(subs, methodName);\n                return api;\n            }, {});\n        });\n    };\n};\n\nvar composite = /*#__PURE__*/multi({\n    getOutput: function () {\n        return {};\n    },\n    getCount: function (subs) {\n        return Object.keys(subs).length;\n    },\n    getFirst: function (subs) {\n        return subs[Object.keys(subs)[0]];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Object.keys(subs).reduce(function (output, propKey) {\n                var _a;\n                if (subs[propKey][methodName]) {\n                    args[0] && args[0][propKey] !== undefined ? output[propKey] = subs[propKey][methodName](args[0][propKey]) : output[propKey] = (_a = subs[propKey])[methodName].apply(_a, args);\n                }\n                return output;\n            }, {});\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return Object.keys(actions).reduce(function (subs, key) {\n            subs[key] = starter(actions[key], key);\n            return subs;\n        }, {});\n    }\n});\n\nvar DEFAULT_DURATION = 300;\nvar flattenTimings = function (instructions) {\n    var flatInstructions = [];\n    var lastArg = instructions[instructions.length - 1];\n    var isStaggered = typeof lastArg === 'number';\n    var staggerDelay = isStaggered ? lastArg : 0;\n    var segments = isStaggered ? instructions.slice(0, -1) : instructions;\n    var numSegments = segments.length;\n    var offset = 0;\n    segments.forEach(function (item, i) {\n        flatInstructions.push(item);\n        if (i !== numSegments - 1) {\n            var duration = item.duration || DEFAULT_DURATION;\n            offset += staggerDelay;\n            flatInstructions.push(\"-\" + (duration - offset));\n        }\n    });\n    return flatInstructions;\n};\nvar flattenArrayInstructions = function (instructions, instruction) {\n    Array.isArray(instruction) ? instructions.push.apply(instructions, flattenTimings(instruction)) : instructions.push(instruction);\n    return instructions;\n};\nvar convertDefToProps = function (props, def, i) {\n    var duration = props.duration,\n        easings = props.easings,\n        times = props.times,\n        values = props.values;\n    var numValues = values.length;\n    var prevTimeTo = times[numValues - 1];\n    var timeFrom = def.at === 0 ? 0 : def.at / duration;\n    var timeTo = (def.at + def.duration) / duration;\n    if (i === 0) {\n        values.push(def.from);\n        times.push(timeFrom);\n    } else {\n        if (prevTimeTo !== timeFrom) {\n            if (def.from !== undefined) {\n                values.push(values[numValues - 1]);\n                times.push(timeFrom);\n                easings.push(linear);\n            }\n            var from = def.from !== undefined ? def.from : values[numValues - 1];\n            values.push(from);\n            times.push(timeFrom);\n            easings.push(linear);\n        } else if (def.from !== undefined) {\n            values.push(def.from);\n            times.push(timeFrom);\n            easings.push(linear);\n        }\n    }\n    values.push(def.to);\n    times.push(timeTo);\n    easings.push(def.ease || easeInOut);\n    return props;\n};\nvar timeline = function (instructions, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        duration = _b.duration,\n        elapsed = _b.elapsed,\n        ease = _b.ease,\n        loop = _b.loop,\n        flip = _b.flip,\n        yoyo = _b.yoyo;\n    var playhead = 0;\n    var calculatedDuration = 0;\n    var flatInstructions = instructions.reduce(flattenArrayInstructions, []);\n    var animationDefs = [];\n    flatInstructions.forEach(function (instruction) {\n        if (typeof instruction === 'string') {\n            playhead += parseFloat(instruction);\n        } else if (typeof instruction === 'number') {\n            playhead = instruction;\n        } else {\n            var def = __assign({}, instruction, { at: playhead });\n            def.duration = def.duration === undefined ? DEFAULT_DURATION : def.duration;\n            animationDefs.push(def);\n            playhead += def.duration;\n            calculatedDuration = Math.max(calculatedDuration, def.at + def.duration);\n        }\n    });\n    var tracks = {};\n    var numDefs = animationDefs.length;\n    for (var i = 0; i < numDefs; i++) {\n        var def = animationDefs[i];\n        var track = def.track;\n        if (track === undefined) {\n            throw new Error('No track defined');\n        }\n        if (!tracks.hasOwnProperty(track)) tracks[track] = [];\n        tracks[track].push(def);\n    }\n    var trackKeyframes = {};\n    for (var key in tracks) {\n        if (tracks.hasOwnProperty(key)) {\n            var keyframeProps = tracks[key].reduce(convertDefToProps, {\n                duration: calculatedDuration,\n                easings: [],\n                times: [],\n                values: []\n            });\n            trackKeyframes[key] = keyframes(__assign({}, keyframeProps, { duration: duration || calculatedDuration, ease: ease,\n                elapsed: elapsed,\n                loop: loop,\n                yoyo: yoyo,\n                flip: flip }));\n        }\n    }\n    return composite(trackKeyframes);\n};\n\nvar listen = function (element, events, options) {\n    return action(function (_a) {\n        var update = _a.update;\n        var eventNames = events.split(' ').map(function (eventName) {\n            element.addEventListener(eventName, update, options);\n            return eventName;\n        });\n        return {\n            stop: function () {\n                return eventNames.forEach(function (eventName) {\n                    return element.removeEventListener(eventName, update, options);\n                });\n            }\n        };\n    });\n};\n\nvar defaultPointerPos = function () {\n    return {\n        clientX: 0,\n        clientY: 0,\n        pageX: 0,\n        pageY: 0,\n        x: 0,\n        y: 0\n    };\n};\nvar eventToPoint = function (e, point) {\n    if (point === void 0) {\n        point = defaultPointerPos();\n    }\n    point.clientX = point.x = e.clientX;\n    point.clientY = point.y = e.clientY;\n    point.pageX = e.pageX;\n    point.pageY = e.pageY;\n    return point;\n};\n\nvar points = [/*#__PURE__*/defaultPointerPos()];\nvar isTouchDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointsLocation = function (_a) {\n        var touches = _a.touches;\n        isTouchDevice = true;\n        var numTouches = touches.length;\n        points.length = 0;\n        for (var i = 0; i < numTouches; i++) {\n            var thisTouch = touches[i];\n            points.push(eventToPoint(thisTouch));\n        }\n    };\n    listen(document, 'touchstart touchmove', {\n        passive: true,\n        capture: true\n    }).start(updatePointsLocation);\n}\nvar multitouch = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.preventDefault,\n        preventDefault = _c === void 0 ? true : _c,\n        _d = _b.scale,\n        scale = _d === void 0 ? 1.0 : _d,\n        _e = _b.rotate,\n        rotate = _e === void 0 ? 0.0 : _e;\n    return action(function (_a) {\n        var update = _a.update;\n        var output = {\n            touches: points,\n            scale: scale,\n            rotate: rotate\n        };\n        var initialDistance = 0.0;\n        var initialRotation = 0.0;\n        var isGesture = points.length > 1;\n        if (isGesture) {\n            var firstTouch = points[0],\n                secondTouch = points[1];\n            initialDistance = distance(firstTouch, secondTouch);\n            initialRotation = angle(firstTouch, secondTouch);\n        }\n        var updatePoint = function () {\n            if (isGesture) {\n                var firstTouch = points[0],\n                    secondTouch = points[1];\n                var newDistance = distance(firstTouch, secondTouch);\n                var newRotation = angle(firstTouch, secondTouch);\n                output.scale = scale * (newDistance / initialDistance);\n                output.rotate = rotate + (newRotation - initialRotation);\n            }\n            update(output);\n        };\n        var onMove = function (e) {\n            if (preventDefault || e.touches.length > 1) e.preventDefault();\n            sync.update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'touchmove', {\n            passive: !preventDefault\n        }).start(onMove);\n        if (isTouchDevice) sync.update(updatePoint);\n        return {\n            stop: function () {\n                cancelSync.update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\nvar getIsTouchDevice = function () {\n    return isTouchDevice;\n};\n\nvar point = /*#__PURE__*/defaultPointerPos();\nvar isMouseDevice = false;\nif (typeof document !== 'undefined') {\n    var updatePointLocation = function (e) {\n        isMouseDevice = true;\n        eventToPoint(e, point);\n    };\n    listen(document, 'mousedown mousemove', true).start(updatePointLocation);\n}\nvar mouse = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).preventDefault,\n        preventDefault = _b === void 0 ? true : _b;\n    return action(function (_a) {\n        var update = _a.update;\n        var updatePoint = function () {\n            return update(point);\n        };\n        var onMove = function (e) {\n            if (preventDefault) e.preventDefault();\n            sync.update(updatePoint);\n        };\n        var updateOnMove = listen(document, 'mousemove').start(onMove);\n        if (isMouseDevice) sync.update(updatePoint);\n        return {\n            stop: function () {\n                cancelSync.update(updatePoint);\n                updateOnMove.stop();\n            }\n        };\n    });\n};\n\nvar getFirstTouch = function (_a) {\n    var firstTouch = _a[0];\n    return firstTouch;\n};\nvar pointer = function (props) {\n    if (props === void 0) {\n        props = {};\n    }\n    return getIsTouchDevice() ? multitouch(props).pipe(function (_a) {\n        var touches = _a.touches;\n        return touches;\n    }, getFirstTouch) : mouse(props);\n};\nvar index$1 = function (_a) {\n    if (_a === void 0) {\n        _a = {};\n    }\n    var x = _a.x,\n        y = _a.y,\n        props = __rest(_a, [\"x\", \"y\"]);\n    if (x !== undefined || y !== undefined) {\n        var applyXOffset_1 = applyOffset(x || 0);\n        var applyYOffset_1 = applyOffset(y || 0);\n        var delta_1 = { x: 0, y: 0 };\n        return pointer(props).pipe(function (point) {\n            delta_1.x = applyXOffset_1(point.x);\n            delta_1.y = applyYOffset_1(point.y);\n            return delta_1;\n        });\n    } else {\n        return pointer(props);\n    }\n};\n\nvar chain = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var i = 0;\n        var current;\n        var playCurrent = function () {\n            current = actions[i].start({\n                complete: function () {\n                    i++;\n                    i >= actions.length ? complete() : playCurrent();\n                },\n                update: update\n            });\n        };\n        playCurrent();\n        return {\n            stop: function () {\n                return current && current.stop();\n            }\n        };\n    });\n};\n\nvar parallel = /*#__PURE__*/multi({\n    getOutput: function () {\n        return [];\n    },\n    getCount: function (subs) {\n        return subs.length;\n    },\n    getFirst: function (subs) {\n        return subs[0];\n    },\n    mapApi: function (subs, methodName) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return subs.map(function (sub, i) {\n                if (sub[methodName]) {\n                    return Array.isArray(args[0]) ? sub[methodName](args[0][i]) : sub[methodName].apply(sub, args);\n                }\n            });\n        };\n    },\n    setProp: function (output, name, v) {\n        return output[name] = v;\n    },\n    startActions: function (actions, starter) {\n        return actions.map(function (action, i) {\n            return starter(action, i);\n        });\n    }\n});\nvar parallel$1 = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return parallel(actions);\n};\n\nvar crossfade = function (a, b) {\n    return action(function (observer) {\n        var balance = 0;\n        var fadable = parallel$1(a, b).start(__assign({}, observer, { update: function (_a) {\n                var va = _a[0],\n                    vb = _a[1];\n                observer.update(mix(va, vb, balance));\n            } }));\n        return {\n            setBalance: function (v) {\n                return balance = v;\n            },\n            stop: function () {\n                return fadable.stop();\n            }\n        };\n    });\n};\n\nvar delay = function (timeToDelay) {\n    return action(function (_a) {\n        var complete = _a.complete;\n        var timeout = setTimeout(complete, timeToDelay);\n        return {\n            stop: function () {\n                return clearTimeout(timeout);\n            }\n        };\n    });\n};\n\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action(function (observer) {\n        var subs = actions.map(function (thisAction) {\n            return thisAction.start(observer);\n        });\n        return {\n            stop: function () {\n                return subs.forEach(function (sub) {\n                    return sub.stop();\n                });\n            }\n        };\n    });\n};\n\nvar schedule = function (scheduler, schedulee) {\n    return action(function (_a) {\n        var update = _a.update,\n            complete = _a.complete;\n        var latest;\n        var schedulerSub = scheduler.start({\n            update: function () {\n                return latest !== undefined && update(latest);\n            },\n            complete: complete\n        });\n        var scheduleeSub = schedulee.start({\n            update: function (v) {\n                return latest = v;\n            },\n            complete: complete\n        });\n        return {\n            stop: function () {\n                schedulerSub.stop();\n                scheduleeSub.stop();\n            }\n        };\n    });\n};\n\nvar stagger = function (actions, interval) {\n    var intervalIsNumber = typeof interval === 'number';\n    var actionsWithDelay = actions.map(function (a, i) {\n        var timeToDelay = intervalIsNumber ? interval * i : interval(i);\n        return chain(delay(timeToDelay), a);\n    });\n    return parallel$1.apply(void 0, actionsWithDelay);\n};\n\nvar styler = function () {\n    return invariant(false, 'styler has been removed from Popmotion in 9.0. Downgrade to 8.x or npm install stylefire');\n};\n\nexport { Action, ValueReaction, action, chain, composite, crossfade, vectorDecay as decay, delay, frame as everyFrame, index as inertia, keyframes, listen, merge, mouse, multicast, multitouch, parallel$1 as parallel, vectorPhysics as physics, index$1 as pointer, schedule, vectorSpring as spring, stagger, styler, timeline, tween, value };\n","var DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar reversed = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrored = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createReversedEasing = reversed;\nvar createMirroredEasing = mirrored;\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipateEasing = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reversed(easeIn);\nvar easeInOut = /*#__PURE__*/mirrored(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reversed(circIn);\nvar circInOut = /*#__PURE__*/mirrored(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reversed(backIn);\nvar backInOut = /*#__PURE__*/mirrored(backIn);\nvar anticipate = /*#__PURE__*/createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = function (p) {\n    return 1.0 - bounceOut(1.0 - p);\n};\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nvar NEWTON_ITERATIONS = 8;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar K_SPLINE_TABLE_SIZE = 11;\nvar K_SAMPLE_STEP_SIZE = 1.0 / (K_SPLINE_TABLE_SIZE - 1.0);\nvar FLOAT_32_SUPPORTED = typeof Float32Array !== 'undefined';\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    var sampleValues = FLOAT_32_SUPPORTED ? new Float32Array(K_SPLINE_TABLE_SIZE) : new Array(K_SPLINE_TABLE_SIZE);\n    var binarySubdivide = function (aX, aA, aB) {\n        var i = 0;\n        var currentX;\n        var currentT;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            } else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    };\n    var newtonRaphsonIterate = function (aX, aGuessT) {\n        var i = 0;\n        var currentSlope = 0;\n        var currentX;\n        for (; i < NEWTON_ITERATIONS; ++i) {\n            currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    };\n    var calcSampleValues = function () {\n        for (var i = 0; i < K_SPLINE_TABLE_SIZE; ++i) {\n            sampleValues[i] = calcBezier(i * K_SAMPLE_STEP_SIZE, mX1, mX2);\n        }\n    };\n    var getTForX = function (aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = K_SPLINE_TABLE_SIZE - 1;\n        var dist = 0.0;\n        var guessForT = 0.0;\n        var initialSlope = 0.0;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += K_SAMPLE_STEP_SIZE;\n        }\n        --currentSample;\n        dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        guessForT = intervalStart + dist * K_SAMPLE_STEP_SIZE;\n        initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + K_SAMPLE_STEP_SIZE);\n        }\n    };\n    calcSampleValues();\n    var resolver = function (aX) {\n        var returnValue;\n        if (mX1 === mY1 && mX2 === mY2) {\n            returnValue = aX;\n        } else if (aX === 0) {\n            returnValue = 0;\n        } else if (aX === 1) {\n            returnValue = 1;\n        } else {\n            returnValue = calcBezier(getTForX(aX), mY1, mY2);\n        }\n        return returnValue;\n    };\n    return resolver;\n}\n\nexport { reversed, mirrored, createReversedEasing, createMirroredEasing, createExpoIn, createBackIn, createAnticipateEasing, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, bounceOut, bounceIn, bounceInOut, cubicBezier };\n"],"sourceRoot":""}