{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack:///external \"moment\"","webpack:///external \"draftjs-to-html\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"styled-components\"","webpack:///external \"request\"","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"aws-sdk\"","webpack:///external \"path\"","webpack:///external \"cors\"","webpack:///external \"apollo-server-express\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"jwks-rsa\"","webpack:///external \"graphql-tools\"","webpack:///external \"graphql\"","webpack:///external \"graphql-type-json\"","webpack:///external \"lodash/merge\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"apollo-server\"","webpack:///external \"@babel/runtime/helpers/objectDestructuringEmpty\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"uuid/v4\"","webpack:///external \"uuid\"","webpack:///external \"@babel/polyfill\"","webpack:///external \"graphql-s2s\"","webpack:///external \"mongodb\"","webpack:///./src/server/lib/token.js","webpack:///./src/server/lib/Directives.js","webpack:///./src/server/lib/resolvers.js","webpack:///./src/server/schema/Activities.module.js","webpack:///./src/components/icons/NavIcons.js","webpack:///./src/server/schema/Assessments.module.js","webpack:///./src/server/schema/BuildingData.module.js","webpack:///./src/server/schema/Categories.module.js","webpack:///./src/server/schema/Files.module.js","webpack:///./src/server/schema/HelpVideos.module.js","webpack:///./src/server/schema/HousingCooperatives.module.js","webpack:///./src/server/lib/Auth.resolvers.js","webpack:///./src/server/schema/Users.module.js","webpack:///./src/server/schema/SinglePages.module.js","webpack:///./src/server/schema/GeneralInfo.module.js","webpack:///./src/server/lib/migrations.js","webpack:///./src/server/schema/Settings.module.js","webpack:///./src/server/schema/Addresses.module.js","webpack:///./src/server/schema/index.js","webpack:///./src/server/context/aws.js","webpack:///./src/server/context/models.js","webpack:///./src/server/context/index.js","webpack:///./src/server/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AUTH0_TENANT","process","env","AUTH0_AUDIENCE","client","jwksClient","cache","cacheMaxAge","jwksUri","getKey","header","cb","getSigningKey","kid","err","signingKey","publicKey","rsaPublicKey","options","audience","issuer","algorithms","validate","token","a","async","Promise","resolve","reject","jwt","verify","decoded","getUser","claims","context","Users","findOne","auth0Id","user","roleScopes","admin","editor","contact","checkScope","requiredScope","userScopeArray","RegExp","split","join","test","AccessDirective","type","this","ensureFieldsWrapped","_scope","args","scope","field","details","objectType","_alreadyWrapperd","fields","getFields","keys","forEach","fieldName","defaultFieldResolver","query","apply","Error","usersRoles","roles","userRole","localRole","find","role","housingCooperativeId","globalRole","userRoleScopes","console","log","SchemaDirectiveVisitor","insertOne","model","_","doc","createdAt","Date","isDeleted","_id","uuid","createdBy","createdByDisplayName","transformDoc","response","afterInsert","ops","updateOne","updatedAt","updatedBy","updatedByDisplayName","$set","matchedCount","updatedDoc","deleteOne","deleteReturn","afterDelete","deletedCount","afterFindOne","transformQuery","parentNode","limit","skip","search","order","orderBy","$ne","queryArgs","$search","cursor","collation","locale","caseLevel","sort","count","toArray","items","paginate","info","selectionSetArray","fieldNodes","selectionSet","selections","map","selection","push","indexOf","afterPaginate","ActivitiesModule","typeDefs","resolvers","Query","findOneActivity","findActivities","getAssesmentActivities","Activities","assessmentId","activities","activity","fileId","Files","file","paginateActivities","Mutation","insertOneActivity","updateOneActivity","deleteOneActivity","styled","svg","height","width","fill","theme","colors","blue","stroke","rotate","animation","keyframes","getAssessmentChanges","newDoc","oldDoc","changes","from","to","moment","dueDate","isSame","toDate","AssessmentModule","Assessment","addressName","address","Addresses","findOneAssessment","findAssessments","isCompleted","undefined","paginateAssessments","findGroupedAssessments","year","Assessments","Categories","isSeparated","separatedCategories","separatedCategoriesArray","item","stateLevel","length","matches","includes","$in","assessments","all","assessment","index","groups","isBetween","category","groupIndex","subGroups","docId","files","splice","orderedGroups","assessmentGroups","groupKey","group","newGroup","title","subKey","subGroup","insertOneAssessment","updateOneAssessment","completedAt","isFreshDuplicate","parseInt","getTime","categoryId","productionYear","format","isGlobalAdmin","assessmentChanges","userName","diff","deleteOneAssessment","insertAssessments","responses","massEditAssessmentCreatedAt","ids","add","toISOString","result","BuildingDataModule","findOneBuildingData","findBuildingData","paginateBuildingData","insertOneBuildingData","updateOneBuildingData","deleteOneBuildingData","CategoriesModule","findOneCategory","findCategories","paginateCategories","insertOneCategory","updateOneCategory","deleteOneCategory","FilesModule","findOneFile","findFiles","paginateFiles","insertOneFile","updateOneFile","deleteOneFile","getUploadUrl","S3","fileContentType","getSignedUrl","Bucket","AWS_S3_BUCKET","Key","ContentType","Expires","error","data","HelpVideosModule","findOneHelpVideo","findHelpVideos","paginateHelpVideos","insertOneHelpVideo","updateOneHelpVideo","deleteOneHelpVideo","HousingCooperativesModule","findOneHousingCooperative","findHousingCooperatives","showInMaintenance","paginateHousingCooperatives","insertOneHousingCooperative","updateOneHousingCooperative","deleteOneHousingCooperative","CLIENT_ID","AUTH0_M2M_CLIENT_ID","CLIENT_SECRET","AUTH0_M2M_CLIENT_SECRET","AUDIENCE","AUTH0_M2M_AUDIENCE","CONNECTION","AUTH0_CONNECTION","AuthModel","method","url","headers","body","JSON","stringify","client_id","client_secret","grant_type","request","parse","e","apiToken","email","password","qs","authorization","users","user_id","connection","verify_email","getApiToken","access_token","Math","floor","random","createAuth0LoginAccount","createResponse","dbResponse","userData","UsersModule","findOneUser","findOneUserRaw","findUsers","currentHousingCooperativeId","username","$elemMatch","paginateUsers","insertOneUser","AuthResolvers","createUser","updateOneUser","deleteOneUser","deleteUser","migrateUser","SinglePagesModule","findOneSinglePage","insertOneSinglePage","updateOneSinglePage","GeneralInfoModule","findGeneralInfo","insertGeneralInfo","updateGeneralInfo","migrateUsers","models","profile","$exists","Authmodel","emails","notMigrated","replaceOne","newData","postalNumber","phone","position","notifyPhone","notifyEmail","migrateSinglePages","SinglePages","contentPages","draftToHtml","content","contentTwo","blocks","contentTwoPages","infoPages","migrateActivities","isMigrated","migrateBuildingData","BuildingData","building","buildingData","amount","migrateCategories","parentId","children","categories","updatedCategories","lifeSpans","deleteMany","migrateAssessments","$or","lifespan","groupOrder","migrateAddresses","$not","$size","uniqueAddresses","matchingAddress","migrateAssessmentDates","updated","SettingsModule","findOneSetting","findSettings","insertOneSetting","updateOneSetting","deleteOneSetting","migrateData","Settings","setting","isComplete","migrated","AddressesModule","findOneAddress","findAddressesByHousingCooperativeId","insertOneAddress","updateOneAddress","deleteOneAddress","duplicateAddress","fromAddress","toAddress","projection","description","measure","cost","unitAmount","dimensions","isActive","lastMaintained","project","insertMany","transpileSchema","graphqls2s","DateTime","GraphQLScalarType","serialize","parseValue","parseLiteral","ast","baseResolvers","apiVersion","checkTime","schema","makeExecutableSchema","AssessmentsModule","merge","JSONScalar","schemaDirectives","auth","AWS","config","update","region","AWS_REGION","MongoClient","DATABASE_URL","MONGODB_URL","HOUSING_COOPERATIVES_DB_URL","SYSTEM_HOUSING_COOPERATIVES_DB_URL","HELP_VIDEOS_DB_URL","SYSTEM_IS_MAIN","SYSTEM_HELP_VIDEOS_DB_URL","connectMongoDB","connect","useNewUrlParser","useUnifiedTopology","db","setupModels","houseDB","videoDB","collection","HelpVideos","HousingCooperatives","setupContext","noCache","PORT","SERVER_PORT","req","res","next","app","express","use","cors","bodyParser","json","urlencoded","extended","ApolloServer","introspection","playground","formatError","captureStackTrace","sub","applyMiddleware","static","safeEnv","send","sendFile","path","listen","then"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"moment\");","module.exports = require(\"draftjs-to-html\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"styled-components\");","module.exports = require(\"request\");","module.exports = require(\"express\");","module.exports = require(\"body-parser\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"path\");","module.exports = require(\"cors\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"graphql-tools\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql-type-json\");","module.exports = require(\"lodash/merge\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"apollo-server\");","module.exports = require(\"@babel/runtime/helpers/objectDestructuringEmpty\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"uuid/v4\");","module.exports = require(\"uuid\");","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"graphql-s2s\");","module.exports = require(\"mongodb\");","import jwt from 'jsonwebtoken';\nimport jwksClient from 'jwks-rsa';\n\nconst AUTH0_TENANT = process.env.AUTH0_TENANT;\nconst AUTH0_AUDIENCE = process.env.AUTH0_AUDIENCE;\n\nconst client = jwksClient({\n\tcache: true,\n\tcacheMaxAge: 36000000, // Default value is 10h\n\tjwksUri: `${AUTH0_TENANT}/.well-known/jwks.json`,\n});\n\nfunction getKey(header, cb) {\n\tclient.getSigningKey(header.kid, function(err, key) {\n\t\tvar signingKey = key.publicKey || key.rsaPublicKey;\n\t\tcb(null, signingKey);\n\t});\n}\n\nconst options = {\n\taudience: AUTH0_AUDIENCE,\n\tissuer: `${AUTH0_TENANT}/`,\n\talgorithms: ['RS256'],\n};\n\nconst validate = async token => {\n\treturn new Promise((resolve, reject) => {\n\t\tjwt.verify(token, getKey, options, (err, decoded) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\tresolve(decoded);\n\t\t});\n\t});\n};\nconst getUser = async (claims, context) => {\n\treturn new Promise(async (resolve, reject) => {\n\t\ttry {\n\t\t\tconst user = await context.Users.findOne({ auth0Id: claims });\n\t\t\tresolve(user);\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t}\n\t});\n};\n\nexport { validate, getUser };\n","import { SchemaDirectiveVisitor } from 'apollo-server';\n\nconst roleScopes = {\n\tadmin: ['*:*'],\n\teditor: ['*:*'],\n\tcontact: ['*:read'],\n\tuser: ['*:read'],\n};\n\nconst checkScope = (requiredScope, userScopeArray) => {\n\tfor (let key in userScopeArray) {\n\t\tif (\n\t\t\tnew RegExp(\n\t\t\t\t'^' + userScopeArray[key].split('*').join('.*') + '$'\n\t\t\t).test(requiredScope)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport class AccessDirective extends SchemaDirectiveVisitor {\n\tvisitObject(type) {\n\t\tthis.ensureFieldsWrapped(type);\n\n\t\ttype._scope = this.args.scope;\n\t}\n\t// Visitor methods for nested types like fields and arguments\n\t// also receive a details object that provides information about\n\t// the parent and grandparent types.\n\tvisitFieldDefinition(field, details) {\n\t\tthis.ensureFieldsWrapped(details.objectType);\n\n\t\tfield._scope = this.args.scope;\n\t}\n\n\tensureFieldsWrapped(objectType) {\n\t\t// Mark the GraphQLObjectType object to avoid re-wrapping:\n\t\tif (objectType._alreadyWrapperd) {\n\t\t\treturn;\n\t\t}\n\n\t\tobjectType._alreadyWrapperd = true;\n\n\t\tconst fields = objectType.getFields();\n\n\t\tObject.keys(fields).forEach(fieldName => {\n\t\t\tconst field = fields[fieldName];\n\t\t\tconst { defaultFieldResolver, resolve } = field;\n\n\t\t\tfield.resolve = async function (...args) {\n\t\t\t\t// Get the required Role from the field first, falling back\n\t\t\t\t// to the objectType if no Role is required by the field:\n\t\t\t\tconst scope = field._scope || objectType._scope;\n\t\t\t\tconst query = args[1];\n\t\t\t\tconst context = args[2];\n\n\t\t\t\tif (!scope) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(defaultFieldResolver &&\n\t\t\t\t\t\t\tdefaultFieldResolver.apply(this, args)) ||\n\t\t\t\t\t\t(resolve && resolve.apply(this, args))\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (!context.user) {\n\t\t\t\t\tthrow new Error('User not logged in');\n\t\t\t\t}\n\n\t\t\t\tconst usersRoles = context.user.roles;\n\t\t\t\tlet userRole = 'contact';\n\n\t\t\t\tlet localRole = usersRoles.find(\n\t\t\t\t\trole => role.housingCooperativeId !== '*'\n\t\t\t\t);\n\n\t\t\t\tif (localRole) {\n\t\t\t\t\tuserRole = localRole.role;\n\t\t\t\t}\n\n\t\t\t\tif (query.housingCooperativeId) {\n\t\t\t\t\tlocalRole = usersRoles.find(\n\t\t\t\t\t\trole =>\n\t\t\t\t\t\t\trole.housingCooperativeId ===\n\t\t\t\t\t\t\tquery.housingCooperativeId\n\t\t\t\t\t);\n\n\t\t\t\t\tif (localRole) {\n\t\t\t\t\t\tuserRole = localRole.role;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet globalRole = usersRoles.find(\n\t\t\t\t\trole => role.housingCooperativeId === '*'\n\t\t\t\t);\n\n\t\t\t\tif (globalRole) {\n\t\t\t\t\tuserRole = globalRole.role;\n\t\t\t\t}\n\n\t\t\t\tlet userRoleScopes = roleScopes[userRole];\n\n\t\t\t\tif (!checkScope(scope, userRoleScopes)) {\n\t\t\t\t\tconsole.log(scope, userRole, userRoleScopes);\n\t\t\t\t\tthrow new Error('User dont have correct scope');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t(defaultFieldResolver &&\n\t\t\t\t\t\tdefaultFieldResolver.apply(this, args)) ||\n\t\t\t\t\t(resolve && resolve.apply(this, args))\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\t}\n}\n","function insertOne(model, options) {\n\treturn async (_, doc, context) => {\n\t\tdoc.createdAt = new Date();\n\t\tdoc.isDeleted = false;\n\t\tconst _id = context.uuid();\n\n\t\tif (context.user) {\n\t\t\tdoc.createdBy = context.user._id;\n\t\t\tdoc.createdByDisplayName = context.user.name;\n\t\t}\n\n\t\tif (options && options.transformDoc) {\n\t\t\tdoc = await options.transformDoc(_, { _id }, doc, context);\n\t\t}\n\n\t\tconst response = await context[model].insertOne({\n\t\t\t_id,\n\t\t\t...doc,\n\t\t});\n\n\t\tif (options && options.afterInsert) {\n\t\t\tawait options.afterInsert(_, response.ops[0], doc, context);\n\t\t}\n\n\t\treturn response.ops[0];\n\t};\n}\n\nfunction updateOne(model, options) {\n\treturn async (_, { _id, ...doc }, context) => {\n\t\tdoc.updatedAt = new Date();\n\n\t\tif (context.user) {\n\t\t\tdoc.updatedBy = context.user._id;\n\t\t\tdoc.updatedByDisplayName = context.user.name;\n\t\t}\n\n\t\tif (options && options.transformDoc) {\n\t\t\tdoc = await options.transformDoc(_, { _id }, doc, context);\n\t\t}\n\n\t\tconst response = await context[model].updateOne({ _id }, { $set: doc });\n\n\t\tif (!response.matchedCount) {\n\t\t\tthrow new Error('Document not found');\n\t\t}\n\n\t\tconst updatedDoc = await context[model].findOne({ _id });\n\n\t\treturn updatedDoc;\n\t};\n}\n\nfunction deleteOne(model, options) {\n\treturn async (_, { _id }, context) => {\n\t\tlet doc = await context[model].findOne({ _id });\n\n\t\tdoc.updatedAt = new Date();\n\t\tdoc.isDeleted = true;\n\n\t\tif (context.user) {\n\t\t\tdoc.updatedBy = context.user._id;\n\t\t\tdoc.updatedByDisplayName = context.user.name;\n\t\t}\n\t\tlet deleteReturn = await context[model].updateOne(\n\t\t\t{ _id },\n\t\t\t{ $set: doc }\n\t\t);\n\n\t\tif (options && options.afterDelete) {\n\t\t\tawait options.afterDelete(_, deleteReturn.ops[0], doc, context);\n\t\t}\n\n\t\treturn deleteReturn.deletedCount === 1;\n\t};\n}\n\nfunction findOne(model, options) {\n\tlet afterFindOne =\n\t\t(options && options.afterFindOne) ||\n\t\t(async (doc, _, { _id }, context) => {\n\t\t\treturn doc;\n\t\t});\n\n\treturn async (_, args, context) => {\n\t\tlet query = args;\n\n\t\tif (options && options.transformQuery) {\n\t\t\tquery = await options.transformQuery(_, args, query, context);\n\t\t}\n\n\t\tconst doc = await context[model].findOne(query);\n\n\t\treturn await afterFindOne(doc, _, args, context);\n\t};\n}\n\nfunction hasOne(model, { localKey }) {\n\treturn async (parentNode, {}, context) => {\n\t\treturn await context[model].findOne({ _id: parentNode[localKey] });\n\t};\n}\n\nfunction find(model, options) {\n\treturn async (\n\t\tparentNode,\n\t\t{ limit, skip, search, order, orderBy, ...args },\n\t\tcontext\n\t) => {\n\t\tlet query = {\n\t\t\t...args,\n\t\t};\n\n\t\tif (!query.isDeleted) {\n\t\t\tquery.isDeleted = {\n\t\t\t\t$ne: true,\n\t\t\t};\n\t\t}\n\n\t\tlet queryArgs = (options && options.queryArgs) || [];\n\n\t\tif (search) {\n\t\t\tquery['$text'] = {\n\t\t\t\t$search: search,\n\t\t\t};\n\t\t}\n\n\t\tqueryArgs.forEach(key => {\n\t\t\tif (typeof args[key] == 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tquery[key] = args[key];\n\t\t});\n\n\t\tif (options && options.transformQuery) {\n\t\t\tquery = await options.transformQuery(\n\t\t\t\tparentNode,\n\t\t\t\targs,\n\t\t\t\t{ search, ...query },\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\n\t\tlet cursor = context[model]\n\t\t\t.find(query)\n\t\t\t.collation({ locale: 'nb', caseLevel: false });\n\n\t\tif (orderBy) {\n\t\t\tcursor.sort({ [orderBy]: order || -1 });\n\t\t}\n\n\t\tif (skip) {\n\t\t\tcursor.skip(skip);\n\t\t}\n\n\t\tif (limit) {\n\t\t\tcursor.limit(limit);\n\t\t}\n\n\t\tconst count = await cursor.count();\n\t\tconst items = await cursor.toArray();\n\n\t\treturn {\n\t\t\tcount,\n\t\t\titems,\n\t\t};\n\t};\n}\n\nfunction paginate(model, options) {\n\treturn async (\n\t\tparentNode,\n\t\t{ limit, skip, search, order, orderBy, ...args },\n\t\tcontext,\n\t\tinfo\n\t) => {\n\t\tlet query = {\n\t\t\t...args,\n\t\t};\n\n\t\tif (!query.isDeleted) {\n\t\t\tquery.isDeleted = {\n\t\t\t\t$ne: true,\n\t\t\t};\n\t\t}\n\n\t\tlet queryArgs = (options && options.queryArgs) || [];\n\t\tlet selectionSetArray = [];\n\n\t\tinfo.fieldNodes[0].selectionSet.selections.map(selection =>\n\t\t\tselectionSetArray.push(selection.name.value)\n\t\t);\n\n\t\tif (search) {\n\t\t\tquery['$text'] = {\n\t\t\t\t$search: search,\n\t\t\t};\n\t\t}\n\n\t\tqueryArgs.forEach(key => {\n\t\t\tif (typeof args[key] == 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tquery[key] = args[key];\n\t\t});\n\n\t\tif (options && options.transformQuery) {\n\t\t\tquery = await options.transformQuery(\n\t\t\t\tparentNode,\n\t\t\t\targs,\n\t\t\t\tquery,\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\n\t\tlet cursor = context[model]\n\t\t\t.find(query)\n\t\t\t.collation({ locale: 'nb', caseLevel: false });\n\n\t\tif (orderBy) {\n\t\t\tcursor.sort({ [orderBy]: order || -1 });\n\t\t}\n\n\t\tcursor.skip(skip || 0).limit(limit || 25);\n\n\t\tlet count = null;\n\t\tlet items = null;\n\n\t\tif (selectionSetArray.indexOf('count') > -1) {\n\t\t\tcount = await context[model].find(query).count();\n\t\t}\n\n\t\tif (selectionSetArray.indexOf('items') > -1) {\n\t\t\titems = await cursor.toArray();\n\t\t}\n\n\t\tif (options && options.afterPaginate) {\n\t\t\treturn options.afterPaginate(\n\t\t\t\t{\n\t\t\t\t\tcount,\n\t\t\t\t\titems,\n\t\t\t\t},\n\t\t\t\tparentNode,\n\t\t\t\t{ ...query, ...args },\n\t\t\t\tcontext,\n\t\t\t\tinfo\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tcount,\n\t\t\titems,\n\t\t};\n\t};\n}\n\nfunction connection(model, options) {\n\treturn async (\n\t\tparentNode,\n\t\t{ limit, skip, search, order, orderBy, ...args },\n\t\tcontext\n\t) => {\n\t\tlet query = {};\n\t\tlet queryArgs = (options && options.queryArgs) || [];\n\n\t\tquery[options.foreignKey] = parentNode[options.localKey || '_id'];\n\n\t\tif (search) {\n\t\t\tquery['$search'] = {\n\t\t\t\t$search: search,\n\t\t\t};\n\t\t}\n\n\t\tqueryArgs.forEach(key => {\n\t\t\tquery[key] = args[key];\n\t\t});\n\n\t\tif (options.transformQuery) {\n\t\t\tquery = await options.transformQuery(\n\t\t\t\tparentNode,\n\t\t\t\targs,\n\t\t\t\tquery,\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\n\t\tlet cursor = context[model].find(query);\n\n\t\tif (orderBy) {\n\t\t\tcursor.sort({ [orderBy]: order || -1 });\n\t\t}\n\n\t\tcursor.skip(skip || 0).limit(limit || 25);\n\n\t\treturn {\n\t\t\tcount: await context[model].find(query).count(),\n\t\t\titems: await cursor.toArray(),\n\t\t};\n\t};\n}\n\nexport {\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n\tfindOne,\n\tfind,\n\thasOne,\n\tpaginate,\n\tconnection,\n};\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst ActivitiesModule = {\n\ttypeDefs: `\n\ttype Activity inherits Document {\n\t\tfileId: ID\n\t\tassessmentId: ID!\n\t\ttype: String\n\t\tuserName: String\n\t\tdiff: JSON\n\t\tcomment: String\n\t\tfile: File\n\t}\n\n\textend type Query {\n\t\tfindOneActivity(\n\t\t\t_id: ID!\n\t\t): Activity @auth(scope:\"activities:read\")\n\n\t\tfindActivities(\n\t\t\tassessmentId: ID!\n\t\t\ttype: String\n\t\t\tlimit: Int\n\t\t\tskip: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<Activity> @auth(scope:\"activities:read\")\n\n\t\tgetAssesmentActivities(\n\t\t\tassessmentId: ID!\n\t\t): [Activity] @auth(scope:\"activities:read\")\n\n\t\tpaginateActivities(\n\t\t\tassessmentId: ID!\n\t\t\tlimit: Int\n\t\t\tskip: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<Activity> @auth(scope:\"activities:read\")\n\t}\n\n\textend type Mutation {\n\t\tinsertOneActivity(\n\t\t\tassessmentId: ID!\n\t\t\ttype: String\n\t\t\tuserName: String\n\t\t\tdiff: JSON\n\t\t\tfileId: ID\n\t\t\tcomment: String\n\t\t): Activity @auth(scope:\"activities:write\")\n\n\t\tupdateOneActivity(\n\t\t\t_id: ID!\n\t\t\tassessmentId: ID!\n\t\t\ttype: String\n\t\t\tuserName: String\n\t\t\tdiff: JSON\n\t\t\tfileId: ID\n\t\t): Activity @auth(scope:\"activities:write\")\n\n\t\tdeleteOneActivity(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"activities:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneActivity: findOne('Activities'),\n\t\t\tfindActivities: find('Activities'),\n\t\t\tgetAssesmentActivities: async (_, query, context, model) => {\n\t\t\t\tlet activities = await context.Activities.find({\n\t\t\t\t\tassessmentId: query.assessmentId,\n\t\t\t\t})\n\t\t\t\t\t.sort({ createdAt: -1 })\n\t\t\t\t\t.toArray();\n\n\t\t\t\treturn activities.map(async activity => {\n\t\t\t\t\tif (!activity.type === 'file' || !activity.fileId)\n\t\t\t\t\t\treturn activity;\n\n\t\t\t\t\tactivity.file = await context.Files.findOne({\n\t\t\t\t\t\t_id: activity.fileId,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn activity;\n\t\t\t\t});\n\t\t\t},\n\t\t\tpaginateActivities: paginate('Activities'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneActivity: insertOne('Activities'),\n\t\t\tupdateOneActivity: updateOne('Activities'),\n\t\t\tdeleteOneActivity: deleteOne('Activities'),\n\t\t},\n\t},\n};\n\nexport default ActivitiesModule;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n/*\nsvg icons with css/onclick functionality.\nkeys:\nstyle: prop with a style object for replacing the default values in the styled wrapper\n*/\n\nconst NavIconWrapper = styled.svg`\nall: unset;\ndisplay: block;\nheight: ${p => p.height || '1.5rem'};\nwidth: ${p => p.width || '35px'};\nmargin-right: ${p => p['margin-right'] || '20px'};\nfill: ${p => p.fill || p.theme.colors.blue};\nstroke: ${p => (p.stroke ? p.stroke : '')};\ntransform: rotate(${p => p.rotate || '0deg'});\nanimation: ${p => p.animation} 0.5s 1 linear;\n`;\n\nexport const ExitIcon = ({ style }) => {\n\treturn (\n\t\t<NavIconWrapper {...style}>\n\t\t\t<svg\n\t\t\t\tfill=\"#4e67ab\"\n\t\t\t\tviewBox=\"0 0 12.686 13.504\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t>\n\t\t\t\t<path d=\"M3.045 10.05a.614.614 0 1 0 .868-.868L2.096 7.365h7.521a.614.614 0 0 0 0-1.228H2.096l1.817-1.815a.614.614 0 0 0-.868-.868L.181 6.318a.614.614 0 0 0 0 .868z\" />\n\t\t\t\t<path d=\"M6.752.004a.614.614 0 0 0 0 1.228h4.706v11.044H6.752a.614.614 0 0 0 0 1.228h5.32a.614.614 0 0 0 .614-.614V.614A.614.614 0 0 0 12.072 0z\" />\n\t\t\t</svg>\n\t\t</NavIconWrapper>\n\t\t)\n\t};\n\n\n\tconst rotateLeft = keyframes`\n\t0% {transform:rotate(180deg);},\n\t100% {transform:rotate(0deg);}\n\t`;\n\n\tconst rotateRight = keyframes`\n\t0% {transform:rotate(0deg);},\n\t100% {transform:rotate(180deg);}\n\t`;\n\n\texport const OpenNavIcon = ({ open, style }) => {\n\t\treturn (\n\t\t\t<NavIconWrapper\n\t\t\t\t{...style}\n\t\t\t\tanimation={open ? rotateLeft : rotateRight}\n\t\t\t\trotate={open ? '0deg' : '180deg'}\n\t\t\t>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 16\">\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\tstrokeMiterlimit=\"50\"\n\t\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\t\td=\"M17 8H1\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\tstrokeMiterlimit=\"50\"\n\t\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\t\td=\"M18 15H8\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\tstrokeMiterlimit=\"50\"\n\t\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\t\td=\"M18 1H8\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\tstrokeMiterlimit=\"50\"\n\t\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\t\td=\"M4.708 11.91v0L1 8.202v0l3.708-3.707v0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</NavIconWrapper>\n\t\t);\n\t};\n\n\texport const AssesmentsIcon = ({ style }) => {\n\t\treturn (\n\t\t\t<NavIconWrapper {...style}>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 27 24\">\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\tfill=\"none\" stroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M1 7.897h24.635\" />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path\tfill=\"none\"\tstroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M1 1.738h24.635\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M1 15.288h11.779\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M1.012 21.6h11.954\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M20.4 13.517v9.161\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#f9f5ea\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" strokeWidth=\"1.5\" d=\"M25.635 17.751h-9.161\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</NavIconWrapper>\n\t)\n}\n\nexport const ControllPanelIcon = ({ style }) => {\n\treturn (\n\t\t<NavIconWrapper {...style}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 16\">\n\t\t\t\t<g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M1 8v0-7 0h6v7z\"/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M1 15v0-4 0h6v4z\"/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M10 5v0-4 0h5v4z\"/>\n\t\t\t\t\t</g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M10 15v0-7 0h5v7z\"/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</NavIconWrapper>\n)};\n\nexport const InformationIcon = ({ style }) => {\n\treturn (\n\t\t<NavIconWrapper {...style}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 19\">\n\t\t\t\t<g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M1 18.341v0-15 0h13v15z\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M4 7.341h7\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M4 11.341h7\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M4 14.341h3\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t<path fill=\"none\" stroke=\"#4e67ab\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"50\" d=\"M3.167 1v0h13.295v15.607\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t</NavIconWrapper>\n)}\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\nimport moment from 'moment';\nimport { AssesmentsIcon } from 'components/icons/NavIcons';\n\nconst AssessmentModule = {\n\ttypeDefs: `\n\ttype Assessment inherits Document {\n\t\thousingCooperativeId: ID!\n\t\tcategoryId: ID\n\t\tname: String\n\t\tobjectType: String\n\t\tlifespan: [String]\n\t\tstateLevel: String\n\t\tdescription: String\n\t\tmeasure: String\n\t\taddress: ID\n\t\taddressName: String\n\t\tcost: String\n\t\tproductionYear: String\n\t\tlastMaintained: String\n\t\tunitAmount: String\n\t\tdimensions: String\n\t\tgroupKey: Int\n\t\tgroupOrder: Int\n\t\tcategory: String\n\t\tdueDate: DateTime\n\t\tprimaryImageId: ID\n\t\tisActive: Boolean\n\t\tisCompleted: Boolean\n\t\tcompletedAt: DateTime\n\t\tmodifiedAt: DateTime\n\t\tisFreshDuplicate: Boolean\n\t\tindex: Int\n\t\tfiles: [File]\n\t}\n\n\ttype SubGroup {\n\t\ttitle: String\n\t\titems: [Assessment]\n\t\tisSeparated: Boolean\n\t}\n\n\ttype AssessmentGroup {\n\t\ttitle: String\n\t\tsubGroups: [SubGroup]\n\t}\n\n\tinput AssessmentInput {\n\t\thousingCooperativeId: ID!\n\t\tstateLevel: String\n\t\taddress: ID\n\t\tcategoryId: ID\n\t\tname: String\n\t\tobjectType: String\n\t\tcategory: String\n\t\tgroupKey: Int\n\t\tgroupOrder: Int\n\t\tisCompleted: Boolean\n\t\tcompletedAt: DateTime\n\t}\n\n\textend type Query {\n\t\tfindOneAssessment(\n\t\t\t_id: ID!\n\t\t): Assessment @auth(scope:\"assessments:read\")\n\n\t\tfindAssessments(\n\t\t\thousingCooperativeId: ID!\n\t\t\tisActive: Boolean\n\t\t\tisDeleted: Boolean\n\t\t\tisCompleted: Boolean\n\t\t\tstateLevel: [String]\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\taddress: ID\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<Assessment> @auth(scope:\"assessments:read\")\n\n\t\tfindGroupedAssessments(\n\t\t\thousingCooperativeId: ID!\n\t\t\tisActive: Boolean\n\t\t\tisDeleted: Boolean\n\t\t\tisCompleted: Boolean\n\t\t\tstateLevel: [String]\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\taddress: ID\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t\tyear: Int\n\t\t): [AssessmentGroup] @auth(scope:\"assessments:read\")\n\n\t\tpaginateAssessments(\n\t\t\thousingCooperativeId: ID!\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t\tisActive: Boolean\n\t\t\tisDeleted: Boolean\n\t\t): Paginate<Assessment> @auth(scope:\"assessments:read\")\n\t}\n\n\textend type Mutation {\n\t\tinsertAssessments(\n\t\t\tassessments: [AssessmentInput]\n\t\t): Boolean @auth(scope:\"assessments:write\")\n\n\t\tinsertOneAssessment(\n\t\t\thousingCooperativeId: ID!\n\t\t\tcategoryId: ID\n\t\t\tname: String\n\t\t\tobjectType: String\n\t\t\tlifespan: [String]\n\t\t\tstateLevel: String\n\t\t\tdescription: String\n\t\t\tmeasure: String\n\t\t\taddress: ID\n\t\t\tcost: String\n\t\t\tproductionYear: String\n\t\t\tlastMaintained: String\n\t\t\tunitAmount: String\n\t\t\tdimensions: String\n\t\t\tgroupKey: Int\n\t\t\tgroupOrder: Int\n\t\t\tcategory: String\n\t\t\tdueDate: DateTime\n\t\t\tisActive: Boolean\n\t\t\tisCompleted: Boolean\n\t\t\tcompletedAt: DateTime\n\t\t): Assessment @auth(scope:\"assessments:write\")\n\n\t\tupdateOneAssessment(\n\t\t\t_id: ID!\n\t\t\thousingCooperativeId: ID\n\t\t\tname: String\n\t\t\tobjectType: String\n\t\t\tlifespan: [String]\n\t\t\tstateLevel: String\n\t\t\tdescription: String\n\t\t\tmeasure: String\n\t\t\taddress: ID\n\t\t\tcost: String\n\t\t\tproductionYear: String\n\t\t\tlastMaintained: String\n\t\t\tunitAmount: String\n\t\t\tdimensions: String\n\t\t\tgroupKey: Int\n\t\t\tgroupOrder: Int\n\t\t\tcategory: String\n\t\t\tdueDate: DateTime\n\t\t\tcreatedAt: DateTime\n\t\t\tisActive: Boolean\n\t\t\tisCompleted: Boolean\n\t\t\tprimaryImageId: ID\n\t\t): Assessment @auth(scope:\"assessments:write\")\n\n\t\tdeleteOneAssessment(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"assessments:write\")\n\n\t\tmassEditAssessmentCreatedAt(\n\t\t\tids: [ID]!\n\t\t\tcreatedAt: DateTime!\n\t\t): Boolean @auth(scope:\"assessments:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tAssessment: {\n\t\t\taddressName: async (doc, args, context) => {\n\t\t\t\tif (!doc.address) return 'Adresse mangler';\n\n\t\t\t\tconst address = await context.Addresses.findOne({\n\t\t\t\t\t_id: doc.address,\n\t\t\t\t\thousingCooperativeId: doc.housingCooperativeId,\n\t\t\t\t\tisDeleted: { $ne: true },\n\t\t\t\t});\n\n\t\t\t\treturn (address && address.name) || 'Adresse mangler';\n\t\t\t},\n\t\t},\n\t\tQuery: {\n\t\t\tfindOneAssessment: findOne('Assessments'),\n\t\t\tfindAssessments: find('Assessments', {\n\t\t\t\ttransformQuery: (_, args, { address, ...query }, context) => {\n\t\t\t\t\tif (!query.isCompleted) {\n\t\t\t\t\t\tquery.isCompleted = {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (query.search) {\n\t\t\t\t\t\tquery['$or'] = [\n\t\t\t\t\t\t\t{ name: new RegExp(query.search, 'gi') },\n\t\t\t\t\t\t\t{ objectType: new RegExp(query.search, 'gi') },\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tdelete query['$text'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (address) {\n\t\t\t\t\t\tquery.address = address;\n\t\t\t\t\t}\n\n\t\t\t\t\tquery.search = undefined;\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tpaginateAssessments: paginate('Assessments'),\n\t\t\tfindGroupedAssessments: async (\n\t\t\t\t_,\n\t\t\t\t{ orderBy, search, year, address, ...query },\n\t\t\t\tcontext\n\t\t\t) => {\n\t\t\t\tconst { Addresses, Assessments, Categories, Files } = context;\n\t\t\t\tlet separatedCategories = await Categories.find({\n\t\t\t\t\tisSeparated: true,\n\t\t\t\t})\n\t\t\t\t\t.sort({ order: 1 })\n\t\t\t\t\t.toArray();\n\n\t\t\t\tconst separatedCategoriesArray = [];\n\t\t\t\tseparatedCategories.forEach(item =>\n\t\t\t\t\tseparatedCategoriesArray.push(item.name)\n\t\t\t\t);\n\n\t\t\t\tif (!query.isCompleted) {\n\t\t\t\t\tquery.isCompleted = {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!query.isDeleted) {\n\t\t\t\t\tquery.isDeleted = {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (query.stateLevel && query.stateLevel.length) {\n\t\t\t\t\tlet matches = [];\n\t\t\t\t\tif (query.stateLevel.includes('tgiu')) {\n\t\t\t\t\t\tmatches.push('tgiu');\n\t\t\t\t\t}\n\t\t\t\t\tif (query.stateLevel.includes('tg0')) {\n\t\t\t\t\t\tmatches.push('tg0');\n\t\t\t\t\t}\n\t\t\t\t\tif (query.stateLevel.includes('tg1')) {\n\t\t\t\t\t\tmatches.push.apply(matches, ['tg0tg1', 'tg1']);\n\t\t\t\t\t}\n\t\t\t\t\tif (query.stateLevel.includes('tg2')) {\n\t\t\t\t\t\tmatches.push.apply(matches, [\n\t\t\t\t\t\t\t'tg0tg2',\n\t\t\t\t\t\t\t'tg1tg2',\n\t\t\t\t\t\t\t'tg2',\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t\tif (query.stateLevel.includes('tg3')) {\n\t\t\t\t\t\tmatches.push.apply(matches, [\n\t\t\t\t\t\t\t'tg0tg3',\n\t\t\t\t\t\t\t'tg1tg3',\n\t\t\t\t\t\t\t'tg2tg3',\n\t\t\t\t\t\t\t'tg3',\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\n\t\t\t\t\tquery.stateLevel = {\n\t\t\t\t\t\t$in: matches,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (address) {\n\t\t\t\t\tquery.address = address;\n\t\t\t\t}\n\n\t\t\t\tif (search) {\n\t\t\t\t\tquery['$or'] = [\n\t\t\t\t\t\t{ name: new RegExp(search, 'gi') },\n\t\t\t\t\t\t{ objectType: new RegExp(search, 'gi') },\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tlet assessments = await Assessments.find(query)\n\t\t\t\t\t.sort({\n\t\t\t\t\t\t[orderBy]: 1,\n\t\t\t\t\t\tname: 1,\n\t\t\t\t\t})\n\t\t\t\t\t.toArray();\n\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tassessments.map(async (assessment, i) => {\n\t\t\t\t\t\tassessment.index = i;\n\n\t\t\t\t\t\tif (!assessment.address)\n\t\t\t\t\t\t\tassessment.addressName = 'Adresse mangler';\n\n\t\t\t\t\t\tconst address = await Addresses.findOne({\n\t\t\t\t\t\t\t_id: assessment.address,\n\t\t\t\t\t\t\thousingCooperativeId:\n\t\t\t\t\t\t\t\tassessment.housingCooperativeId,\n\t\t\t\t\t\t\tisDeleted: { $ne: true },\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tassessment.addressName =\n\t\t\t\t\t\t\t(address && address.name) || 'Adresse mangler';\n\n\t\t\t\t\t\treturn assessment;\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tlet groups = {};\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tassessments.map(async (assessment, i) => {\n\t\t\t\t\t\tassessment.index = i;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tyear &&\n\t\t\t\t\t\t\t!context\n\t\t\t\t\t\t\t\t.moment(assessment.dueDate)\n\t\t\t\t\t\t\t\t.isBetween(`${year - 1}-12-30`, `${year}-12-30`)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t\tlet index =\n\t\t\t\t\t\t\tassessment.category || assessment.objectType;\n\t\t\t\t\t\tlet groupIndex = assessment.addressName;\n\n\t\t\t\t\t\tif (!groups.hasOwnProperty(groupIndex)) {\n\t\t\t\t\t\t\tgroups[groupIndex] = {\n\t\t\t\t\t\t\t\tsubGroups: {\n\t\t\t\t\t\t\t\t\t[index]: {\n\t\t\t\t\t\t\t\t\t\titems: [],\n\t\t\t\t\t\t\t\t\t\tisSeparated: separatedCategoriesArray.includes(\n\t\t\t\t\t\t\t\t\t\t\tassessment.category ||\n\t\t\t\t\t\t\t\t\t\t\t\tassessment.objectType\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!groups[groupIndex].subGroups.hasOwnProperty(index)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgroups[groupIndex].subGroups[index] = {\n\t\t\t\t\t\t\t\titems: [],\n\t\t\t\t\t\t\t\tisSeparated: separatedCategoriesArray.includes(\n\t\t\t\t\t\t\t\t\tassessment.category || assessment.objectType\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tassessment.files = await Files.find({\n\t\t\t\t\t\t\tdocId: assessment._id,\n\t\t\t\t\t\t\tisDeleted: {\n\t\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}).toArray();\n\n\t\t\t\t\t\tgroups[groupIndex].subGroups[index].items.splice(\n\t\t\t\t\t\t\tassessment.index,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tassessment\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tconst orderedGroups = {};\n\t\t\t\tObject.keys(groups)\n\t\t\t\t\t.sort()\n\t\t\t\t\t.forEach(function (key) {\n\t\t\t\t\t\torderedGroups[key] = groups[key];\n\t\t\t\t\t});\n\n\t\t\t\tgroups = orderedGroups;\n\n\t\t\t\tlet assessmentGroups = [];\n\t\t\t\tObject.keys(groups).forEach(groupKey => {\n\t\t\t\t\tlet group = groups[groupKey];\n\t\t\t\t\tlet newGroup = {\n\t\t\t\t\t\ttitle: groupKey,\n\t\t\t\t\t\tsubGroups: [],\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.keys(group.subGroups).forEach(subKey => {\n\t\t\t\t\t\tlet subGroup = group.subGroups[subKey];\n\t\t\t\t\t\tsubGroup.title = subKey;\n\t\t\t\t\t\tnewGroup.subGroups.push(subGroup);\n\t\t\t\t\t});\n\n\t\t\t\t\tassessmentGroups.push(newGroup);\n\t\t\t\t});\n\n\t\t\t\treturn assessmentGroups;\n\t\t\t},\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneAssessment: insertOne('Assessments'),\n\t\t\tupdateOneAssessment: updateOne('Assessments', {\n\t\t\t\ttransformDoc: async (_, args, doc, context) => {\n\t\t\t\t\tconst { uuid, user, Assessments, Activities } = context;\n\t\t\t\t\tconst { _id } = args;\n\n\t\t\t\t\tlet assessment = await Assessments.findOne({ _id });\n\n\t\t\t\t\tif (doc.isCompleted === true) {\n\t\t\t\t\t\tdoc.completedAt = new Date();\n\n\t\t\t\t\t\tconst newDoc = {\n\t\t\t\t\t\t\t_id: uuid(),\n\t\t\t\t\t\t\tisFreshDuplicate: true,\n\t\t\t\t\t\t\tcreatedBy: user._id,\n\t\t\t\t\t\t\tcreatedAt: parseInt(new Date().getTime()),\n\t\t\t\t\t\t\thousingCooperativeId:\n\t\t\t\t\t\t\t\tassessment.housingCooperativeId,\n\t\t\t\t\t\t\taddress: assessment.address || '',\n\t\t\t\t\t\t\tcategoryId: assessment.categoryId || '',\n\t\t\t\t\t\t\tname: assessment.name || '',\n\t\t\t\t\t\t\tobjectType: assessment.objectType || '',\n\t\t\t\t\t\t\tcategory: assessment.category || '',\n\t\t\t\t\t\t\tproductionYear: assessment.productionYear || '',\n\t\t\t\t\t\t\tstateLevel: 'tgiu',\n\t\t\t\t\t\t\tisCompleted: false,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tawait Assessments.insertOne(newDoc);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdoc.completedAt = null;\n\t\t\t\t\t\tdoc.isCompleted = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (doc.createdAt) {\n\t\t\t\t\t\tdoc.groupKey = moment(doc.createdAt).format('YYYYMM');\n\t\t\t\t\t}\n\n\t\t\t\t\tdoc.isFreshDuplicate = false;\n\n\t\t\t\t\tlet isGlobalAdmin = false;\n\t\t\t\t\tuser.roles.forEach(item => {\n\t\t\t\t\t\tif (item.housingCooperativeId === '*') {\n\t\t\t\t\t\t\tif (item.role === 'admin') {\n\t\t\t\t\t\t\t\tisGlobalAdmin = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (isGlobalAdmin) return doc;\n\n\t\t\t\t\tlet assessmentChanges = await getAssessmentChanges(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...assessment,\n\t\t\t\t\t\t\t...doc,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tassessment\n\t\t\t\t\t);\n\n\t\t\t\t\tif (assessmentChanges.length > 0) {\n\t\t\t\t\t\tawait Activities.insertOne({\n\t\t\t\t\t\t\t_id: uuid(),\n\t\t\t\t\t\t\tcreatedBy: user._id,\n\t\t\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\t\t\tuserName: user.name,\n\t\t\t\t\t\t\tassessmentId: _id,\n\t\t\t\t\t\t\ttype: 'change',\n\t\t\t\t\t\t\tdiff: assessmentChanges,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn doc;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tdeleteOneAssessment: deleteOne('Assessments'),\n\t\t\tinsertAssessments: async (_, doc, context) => {\n\t\t\t\tconst { Assessments } = context;\n\n\t\t\t\tlet responses = [];\n\n\t\t\t\tdoc.assessments.map(item => {\n\t\t\t\t\tconst _id = context.uuid();\n\t\t\t\t\tconst createdBy = context.user._id;\n\t\t\t\t\tconst createdAt = parseInt(new Date().getTime());\n\t\t\t\t\tconst response = Assessments.insertOne({\n\t\t\t\t\t\t_id,\n\t\t\t\t\t\tcreatedBy,\n\t\t\t\t\t\tcreatedAt,\n\t\t\t\t\t\t...item,\n\t\t\t\t\t});\n\t\t\t\t\tresponses.push(response);\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tmassEditAssessmentCreatedAt: async (_, doc, context) => {\n\t\t\t\tconst { Assessments } = context;\n\n\t\t\t\tconst result = await Promise.all(\n\t\t\t\t\tdoc.ids.map(async (_id, i) => {\n\t\t\t\t\t\treturn await Assessments.updateOne(\n\t\t\t\t\t\t\t{ _id },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\tcreatedAt: await context\n\t\t\t\t\t\t\t\t\t\t.moment(doc.createdAt)\n\t\t\t\t\t\t\t\t\t\t.add(i, 'ms')\n\t\t\t\t\t\t\t\t\t\t.toISOString(true),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\treturn !!result;\n\t\t\t},\n\t\t},\n\t},\n};\n\nasync function getAssessmentChanges(newDoc, oldDoc) {\n\tconst keysToTrack = [\n\t\t'name',\n\t\t'stateLevel',\n\t\t'description',\n\t\t'measure',\n\t\t'address',\n\t\t'cost',\n\t\t'unitAmount',\n\t\t'productionYear',\n\t\t'lastMaintained',\n\t\t'dimensions',\n\t\t'isActive',\n\t\t'isCompleted',\n\t];\n\n\tlet changes = [];\n\n\tkeysToTrack.forEach(key => {\n\t\tif (oldDoc[key] != newDoc[key]) {\n\t\t\tchanges.push({\n\t\t\t\tfrom: oldDoc[key],\n\t\t\t\tto: newDoc[key],\n\t\t\t\tkey,\n\t\t\t});\n\t\t}\n\t});\n\n\tif (!moment(oldDoc.dueDate).isSame(moment(newDoc.dueDate))) {\n\t\tchanges.push({\n\t\t\tfrom: moment(oldDoc.dueDate).toDate(),\n\t\t\tto: moment(newDoc.dueDate).toDate(),\n\t\t\tkey: 'dueDate',\n\t\t});\n\t}\n\tif (!moment(oldDoc.createdAt).isSame(moment(newDoc.createdAt))) {\n\t\tchanges.push({\n\t\t\tfrom: moment(oldDoc.createdAt).toDate(),\n\t\t\tto: moment(newDoc.createdAt).toDate(),\n\t\t\tkey: 'createdAt',\n\t\t});\n\t}\n\n\treturn changes;\n}\n\nexport default AssessmentModule;\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst BuildingDataModule = {\n\ttypeDefs: `\n\ttype BuildingData inherits Document {\n\t\taddress: String\n\t\tcategory: String\n\t\tobject: String\n\t\tamount: String\n\t\thousingCooperativeId: ID\n\t}\n\n\textend type Query {\n\t\tfindOneBuildingData(\n\t\t\t_id: ID!\n\t\t): BuildingData @auth(scope:\"buildingData:read\")\n\n\t\tfindBuildingData(\n\t\t\t_id: ID\n\t\t\thousingCooperativeId: ID!\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<BuildingData> @auth(scope:\"buildingData:read\")\n\n\t\tpaginateBuildingData(\n\t\t\thousingCooperativeId: ID!\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<BuildingData> @auth(scope:\"buildingData:read\")\n\t}\n\n\textend type Mutation {\n\t\tinsertOneBuildingData(\n\t\t\thousingCooperativeId: ID!\n\t\t\taddress: String\n\t\t\tcategory: String\n\t\t\tobject: String\n\t\t\tamount: String\n\t\t): BuildingData @auth(scope:\"buildingData:write\")\n\n\t\tupdateOneBuildingData(\n\t\t\t_id: ID!\n\t\t\thousingCooperativeId: ID!\n\t\t\taddress: String\n\t\t\tcategory: String\n\t\t\tobject: String\n\t\t\tamount: String\n\t\t): BuildingData @auth(scope:\"buildingData:write\")\n\n\t\tdeleteOneBuildingData(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"buildingData:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneBuildingData: findOne('BuildingData'),\n\t\t\tfindBuildingData: find('BuildingData'),\n\t\t\tpaginateBuildingData: paginate('BuildingData'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneBuildingData: insertOne('BuildingData'),\n\t\t\tupdateOneBuildingData: updateOne('BuildingData'),\n\t\t\tdeleteOneBuildingData: deleteOne('BuildingData'),\n\t\t},\n\t},\n};\n\nexport default BuildingDataModule;\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst CategoriesModule = {\n\ttypeDefs: `\n\ttype CategoryChild {\n\t\tname: String\n\t\ttype: String\n\t\torder: Int\n\t\torderIndex: Int\n\t\tisSeparated: Boolean\n\t}\n\ttype Category inherits Document {\n\t\tname: String\n\t\ttype: String\n\t\tparentId: ID\n\t\torder: Int\n\t\torderIndex: Int\n\t\tisSeparated: Boolean\n\t\tchildren: [CategoryChild]\n\t\tlifeSpans: [CategoryChild]\n\t}\n\n\tinput CategoryChildInput {\n\t\tname: String\n\t\ttype: String\n\t\torder: Int\n\t\torderIndex: Int\n\t\tisSeparated: Boolean\n\t}\n\n\textend type Query {\n\t\tfindOneCategory(\n\t\t\t_id: ID\n\t\t): Category @auth(scope:\"categories:read\")\n\n\t\tfindCategories(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t\tparentId: ID\n\t\t): Find<Category> @auth(scope:\"categories:read\")\n\n\t\tpaginateCategories(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<Category> @auth(scope:\"categories:read\")\n\n\t}\n\textend type Mutation {\n\t\tinsertOneCategory(\n\t\t\tname: String\n\t\t\ttype: String\n\t\t\tparentId: ID\n\t\t\torder: Int\n\t\t\torderIndex: Int\n\t\t\tisSeparated: Boolean\n\t\t\tchildren: [CategoryChildInput]\n\t\t\tlifeSpans: [CategoryChildInput]\n\t\t): Category @auth(scope:\"categories:write\")\n\n\t\tupdateOneCategory(\n\t\t\t_id: ID!\n\t\t\tname: String\n\t\t\ttype: String\n\t\t\tparentId: ID\n\t\t\torder: Int\n\t\t\torderIndex: Int\n\t\t\tisSeparated: Boolean\n\t\t\tchildren: [CategoryChildInput]\n\t\t\tlifeSpans: [CategoryChildInput]\n\t\t): Category @auth(scope:\"categories:write\")\n\n\t\tdeleteOneCategory(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"categories:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneCategory: findOne('Categories'),\n\t\t\tfindCategories: find('Categories'),\n\t\t\tpaginateCategories: paginate('Categories'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneCategory: insertOne('Categories'),\n\t\t\tupdateOneCategory: updateOne('Categories'),\n\t\t\tdeleteOneCategory: deleteOne('Categories'),\n\t\t},\n\t},\n};\n\nexport default CategoriesModule;\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst FilesModule = {\n\ttypeDefs: `\n\ttype File inherits Document {\n\t\tfileType: String\n\t\tfileName: String\n\t\tfileUrl: String\n\t\tdocId: ID\n\t\tpage: String\n\t\thousingCooperativeId: ID\n\t}\n\n\textend type Query {\n\t\tfindOneFile(\n\t\t\t_id: ID!\n\t\t): File @auth(scope:\"files:read\")\n\n\t\tfindFiles(\n\t\t\tdocId: ID\n\t\t\thousingCooperativeId: ID\n\t\t\tpage: String\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<File> @auth(scope:\"files:read\")\n\n\t\tpaginateFiles(\n\t\t\tdocId: ID\n\t\t\thousingCooperativeId: ID\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<File> @auth(scope:\"files:read\")\n\t}\n\t\n\textend type Mutation {\n\t\tinsertOneFile(\n\t\t\tdocId: ID\n\t\t\tpage: String\n\t\t\thousingCooperativeId: ID\n\t\t\tfileType: String\n\t\t\tfileName: String\n\t\t\tfileUrl: String\n\t\t): File @auth(scope:\"files:write\")\n\n\t\tupdateOneFile(\n\t\t\t_id: ID!\n\t\t\tdocId: ID\n\t\t\tfileType: String\n\t\t\tfileName: String\n\t\t\tfileUrl: String\n\t\t\tpage: String\n\t\t\thousingCooperativeId: ID\n\t\t\tisDeleted: Boolean\n\t\t): File @auth(scope:\"files:write\")\n\t\t\n\t\tdeleteOneFile(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"files:write\")\n\t\t\n\t\tgetUploadUrl(\n\t\t\tkey: String!\n\t\t\tfileContentType: String!\n\t\t): String @auth(scope:\"files:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneFile: findOne('Files'),\n\t\t\tfindFiles: find('Files'),\n\t\t\tpaginateFiles: paginate('Files'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneFile: insertOne('Files'),\n\t\t\tupdateOneFile: updateOne('Files'),\n\t\t\tdeleteOneFile: deleteOne('Files'),\n\t\t\tgetUploadUrl: async (_, doc, context) => {\n\t\t\t\tconst { S3 } = context;\n\t\t\t\tconst { key, fileContentType } = doc;\n\n\t\t\t\treturn await new Promise((resolve, reject) => {\n\t\t\t\t\tS3.getSignedUrl(\n\t\t\t\t\t\t'putObject',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tBucket: process.env.AWS_S3_BUCKET,\n\t\t\t\t\t\t\tKey: key,\n\t\t\t\t\t\t\tContentType: fileContentType,\n\t\t\t\t\t\t\tExpires: 600,\n\t\t\t\t\t\t\t// ACL: 'public-read',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(error, data) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport default FilesModule;\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst HelpVideosModule = {\n\ttypeDefs: `\n\ttype HelpVideo inherits Document {\n\t\tisMainVideo: Boolean\n\t\tforEditor: Boolean\n\t\ttitle: String\n\t\torder: Int\n\t\tembedCode: String\n\t}\n\n\textend type Query {\n\t\tfindOneHelpVideo(\n\t\t\t_id: ID!\n\t\t): HelpVideo @auth(scope:\"helpVideos:read\")\n\n\t\tfindHelpVideos(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<HelpVideo> @auth(scope:\"helpVideos:read\")\n\n\t\tpaginateHelpVideos(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<HelpVideo> @auth(scope:\"helpVideos:read\")\n\t}\n\n\textend type Mutation {\n\t\tinsertOneHelpVideo(\n\t\t\tisMainVideo: Boolean\n\t\t\tforEditor: Boolean\n\t\t\ttitle: String\n\t\t\torder: Int\n\t\t\tembedCode: String\n\t\t): HelpVideo @auth(scope:\"helpVideos:write\")\n\n\t\tupdateOneHelpVideo(\n\t\t\t_id: ID!\n\t\t\tisMainVideo: Boolean\n\t\t\tforEditor: Boolean\n\t\t\ttitle: String\n\t\t\torder: Int\n\t\t\tembedCode: String\n\t\t): HelpVideo @auth(scope:\"helpVideos:write\")\n\n\t\tdeleteOneHelpVideo(_id: ID!): Boolean @auth(scope:\"helpVideos:write\")\n\t}\n\t`,\n\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneHelpVideo: findOne('HelpVideos'),\n\t\t\tfindHelpVideos: find('HelpVideos'),\n\t\t\tpaginateHelpVideos: paginate('HelpVideos'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneHelpVideo: insertOne('HelpVideos'),\n\t\t\tupdateOneHelpVideo: updateOne('HelpVideos'),\n\t\t\tdeleteOneHelpVideo: deleteOne('HelpVideos'),\n\t\t},\n\t},\n};\n\nexport default HelpVideosModule;\n","import {\n\tfindOne,\n\tfind,\n\tpaginate,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst HousingCooperativesModule = {\n\ttypeDefs: `\n\ttype HousingCooperative inherits Document {\n\t\ttitle: String\n\t\tdepartment: String\n\t\taddress: String\n\t\tpostalNumber: String\n\t\tpostalCity: String\n\t\tmobile: String\n\t\tphone: String\n\t\temail: String\n\t\thasEmployees: Boolean\n\t\tcaretakersCount: Int\n\t\textraHelpCount: Int\n\t\tothersCount: Int\n\t\tcleanersCount: Int\n\t\townersCount: Int\n\t\tshowInMaintenance: Boolean\n\t}\n\n\textend type Query {\n\t\tfindOneHousingCooperative(\n\t\t\t_id: ID!\n\t\t): HousingCooperative @auth(scope:\"housingCooperatives:read\")\n\n\t\tfindHousingCooperatives(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<HousingCooperative> @auth(scope:\"housingCooperatives:read\")\n\n\t\tpaginateHousingCooperatives(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<HousingCooperative> @auth(scope:\"housingCooperatives:read\")\n\t}\n\textend type Mutation {\n\t\tinsertOneHousingCooperative(\n\t\t\ttitle: String\n\t\t\tdepartment: String\n\t\t\taddress: String\n\t\t\tpostalNumber: String\n\t\t\tpostalCity: String\n\t\t\tmobile: String\n\t\t\tphone: String\n\t\t\temail: String\n\t\t\thasEmployees: Boolean\n\t\t\tcaretakersCount: Int\n\t\t\textraHelpCount: Int\n\t\t\tothersCount: Int\n\t\t\tcleanersCount: Int\n\t\t\tshowInMaintenance: Boolean\n\t\t): HousingCooperative @auth(scope:\"housingCooperatives:write\")\n\n\t\tupdateOneHousingCooperative(\n\t\t\t_id: ID!\n\t\t\ttitle: String\n\t\t\tdepartment: String\n\t\t\taddress: String\n\t\t\tpostalNumber: String\n\t\t\tpostalCity: String\n\t\t\tmobile: String\n\t\t\tphone: String\n\t\t\temail: String\n\t\t\thasEmployees: Boolean\n\t\t\tcaretakersCount: Int\n\t\t\textraHelpCount: Int\n\t\t\tothersCount: Int\n\t\t\tcleanersCount: Int\n\t\t\tshowInMaintenance: Boolean\n\t\t): HousingCooperative @auth(scope:\"housingCooperatives:write\")\n\n\t\tdeleteOneHousingCooperative(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"housingCooperatives:write\")\n\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneHousingCooperative: findOne('HousingCooperatives'),\n\t\t\tfindHousingCooperatives: find('HousingCooperatives', {\n\t\t\t\ttransformQuery: async (\n\t\t\t\t\t_,\n\t\t\t\t\targs,\n\t\t\t\t\t{ search, ...query },\n\t\t\t\t\tcontext\n\t\t\t\t) => {\n\t\t\t\t\tquery.showInMaintenance = true;\n\n\t\t\t\t\tif (!query.isDeleted) {\n\t\t\t\t\t\tquery.isDeleted = {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (search) {\n\t\t\t\t\t\tquery['$or'] = [\n\t\t\t\t\t\t\t{ name: new RegExp(search, 'gi') },\n\t\t\t\t\t\t\t{ objectType: new RegExp(search, 'gi') },\n\t\t\t\t\t\t\t{ address: new RegExp(search, 'gi') },\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tdelete query['$text'];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tpaginateHousingCooperatives: paginate('HousingCooperatives', {\n\t\t\t\ttransformQuery: async (_, args, query, context) => {\n\t\t\t\t\tquery.showInMaintenance = true;\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t}),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneHousingCooperative: insertOne('HousingCooperatives'),\n\t\t\tupdateOneHousingCooperative: updateOne('HousingCooperatives'),\n\t\t\tdeleteOneHousingCooperative: deleteOne('HousingCooperatives'),\n\t\t},\n\t},\n};\n\nexport default HousingCooperativesModule;\n","import request from 'request';\n\nconst CLIENT_ID = process.env.AUTH0_M2M_CLIENT_ID;\nconst CLIENT_SECRET = process.env.AUTH0_M2M_CLIENT_SECRET;\nconst AUDIENCE = process.env.AUTH0_M2M_AUDIENCE;\nconst CONNECTION = process.env.AUTH0_CONNECTION;\nconst AUTH0_TENANT = process.env.AUTH0_TENANT;\n/*\nContent-Type: application/json\" -d '{\"email\":\"john.doe@gmail.com\",\"connection\":\"Initial-Connection\",\"password\":\"secret\",\"verify_email\":false,\"username\":\"johndoe\"}' \"https://smart-test.eu.auth0.com/api/v2/users\"\n\n*/\nclass AuthModel {\n\tstatic async getApiToken() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet options = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: `${AUTH0_TENANT}/oauth/token`,\n\t\t\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tclient_id: CLIENT_ID,\n\t\t\t\t\t\tclient_secret: CLIENT_SECRET,\n\t\t\t\t\t\taudience: AUDIENCE,\n\t\t\t\t\t\tgrant_type: 'client_credentials',\n\t\t\t\t\t}),\n\t\t\t\t};\n\n\t\t\t\trequest(options, (error, response, body) => {\n\t\t\t\t\tif (error) throw new Error(error);\n\t\t\t\t\tresolve(JSON.parse(body));\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic async createAuth0LoginAccount(apiToken, email, password) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\t// check if user exists\n\t\t\t\tlet options = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: `${AUTH0_TENANT}/api/v2/users-by-email`,\n\t\t\t\t\tqs: { email: email },\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'application/json',\n\t\t\t\t\t\tauthorization: 'Bearer ' + apiToken,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\trequest(options, function(error, response, body) {\n\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\tconst users = JSON.parse(body);\n\t\t\t\t\tif (users && users.length === 1 && users[0].user_id) {\n\t\t\t\t\t\tresolve(users[0]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// create new user\n\t\t\t\tlet options = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: `${AUTH0_TENANT}/api/v2/users`,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'application/json',\n\t\t\t\t\t\tauthorization: 'Bearer ' + apiToken,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t\tconnection: CONNECTION,\n\t\t\t\t\t\tpassword: password,\n\t\t\t\t\t\tverify_email: false,\n\t\t\t\t\t}),\n\t\t\t\t};\n\t\t\t\trequest(options, function(error, response, body) {\n\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\tresolve(JSON.parse(body));\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic createUser() {\n\t\treturn async (_, doc, context) => {\n\t\t\tif (doc.auth0Id) throw new Error('User already has auth0Id');\n\n\t\t\ttry {\n\t\t\t\tconst _id = context.uuid();\n\t\t\t\tconst { access_token } = await this.getApiToken();\n\t\t\t\tdoc.createdAt = new Date();\n\t\t\t\tdoc.isDeleted = false;\n\n\t\t\t\tdoc.password = '#';\n\t\t\t\tconst keyString =\n\t\t\t\t\t'u0YD64Tmr!IKsdgbubQrKM7R*00eP5k^XFauiJySmae@!2hB$k#p$eGFgTmUSZasyn9xLnUeF4NMwulZq#MJv0ziQ337T$W%!T$';\n\t\t\t\tfor (var i = 0; i < 20; i++) {\n\t\t\t\t\tdoc.password += keyString[Math.floor(Math.random() * 100)];\n\t\t\t\t}\n\t\t\t\tlet createResponse = await this.createAuth0LoginAccount(\n\t\t\t\t\taccess_token,\n\t\t\t\t\tdoc.email,\n\t\t\t\t\tdoc.password\n\t\t\t\t);\n\t\t\t\tdoc.auth0Id = createResponse.user_id;\n\t\t\t\tdelete doc.password;\n\t\t\t\tconst dbResponse = await context.Users.insertOne({\n\t\t\t\t\t_id,\n\t\t\t\t\t...doc,\n\t\t\t\t});\n\t\t\t\treturn dbResponse.ops[0];\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Error(e);\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic deleteUser() {\n\t\treturn async (_, doc, context) => {\n\t\t\ttry {\n\t\t\t\tawait context.Users.deleteOne(doc);\n\n\t\t\t\treturn true;\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Error(e);\n\t\t\t}\n\t\t};\n\t}\n\n\t// needs to be removed at a later date.\n\tstatic migrateUser() {\n\t\treturn async (_, doc, context) => {\n\t\t\ttry {\n\t\t\t\t// randomize new password\n\t\t\t\tconst keyString =\n\t\t\t\t\t'u0YD64Tmr!IKsdgbubQrKM7R*00eP5k^XFauiJySmae@!2hB$k#p$eGFgTmUSZasyn9xLnUeF4NMwulZq#MJv0ziQ337T$W%!T$';\n\t\t\t\tlet password = '#1';\n\t\t\t\tfor (var i = 0; i < 20; i++) {\n\t\t\t\t\tpassword += keyString[Math.floor(Math.random() * 100)];\n\t\t\t\t}\n\n\t\t\t\tconst { Users } = context;\n\t\t\t\tconst { access_token } = await this.getApiToken();\n\t\t\t\tlet userData = await Users.findOne({\n\t\t\t\t\t_id: doc._id,\n\t\t\t\t});\n\t\t\t\tif (userData.auth0Id) {\n\t\t\t\t\tthrow new Error('User already migrated to new login.');\n\t\t\t\t}\n\t\t\t\tlet createResponse = await this.createAuth0LoginAccount(\n\t\t\t\t\taccess_token,\n\t\t\t\t\tuserData.email,\n\t\t\t\t\tpassword\n\t\t\t\t);\n\t\t\t\tawait Users.updateOne(\n\t\t\t\t\t{ _id: doc._id },\n\t\t\t\t\t{ $set: { auth0Id: createResponse.user_id } }\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(error);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default AuthModel;\n","import { findOne, find, paginate, updateOne } from 'server/lib/resolvers.js';\nimport AuthResolvers from 'server/lib/Auth.resolvers';\n\nconst UsersModule = {\n\ttypeDefs: `\n\ttype Role {\n\t\thousingCooperativeId: String!\n\t\trole: String!\n\t}\n\n\tinput RoleInput {\n\t\thousingCooperativeId: String!\n\t\trole: String!\n\t}\n\n\ttype User inherits Document {\n\t\tusername: String\n\t\temail: String!\n\t\tauth0Id: ID\n\t\tname: String\n\t\taddress: String\n\t\tpostalNumber: String\n\t\tpostalCity: String\n\t\tphone: String\n\t\tposition: String\n\t\tnotifyPhone: Boolean\n\t\tnotifyEmail: Boolean\n\t\troles: [Role]\n\t}\n\n\textend type Query {\n\t\tfindOneUser(\n\t\t\t_id: ID\n\t\t\tauth0Id: ID\n\t\t): User @auth(scope:\"user:read\")\n\n\t\tfindOneUserRaw(\n\t\t\tauth0Id: ID!\n\t\t): User\n\n\t\tfindUsers(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t\tcurrentHousingCooperativeId: ID\n\t\t): Find<User> @auth(scope:\"user:read\")\n\n\t\tpaginateUsers(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Paginate<User>\n\t}\n\n\textend type Mutation {\n\t\tinsertOneUser(\n\t\t\tauth0Id: ID\n\t\t\tpassword: String\n\t\t\tusername: String\n\t\t\temail: String!\n\t\t\tname: String\n\t\t\taddress: String\n\t\t\tpostalNumber: String\n\t\t\tpostalCity: String\n\t\t\tphone: String\n\t\t\tposition: String\n\t\t\troles: [RoleInput]\n\t\t\tclaims: [String]\n\t\t): User @auth(scope:\"user:write\")\n\n\t\tupdateOneUser(\n\t\t\t_id: ID!\n\t\t\tusername: String\n\t\t\temail: String\n\t\t\tname: String\n\t\t\taddress: String\n\t\t\tpostalNumber: String\n\t\t\tpostalCity: String\n\t\t\tphone: String\n\t\t\tposition: String\n\t\t\tauth0Id: ID\n\t\t\troles: [RoleInput]\n\t\t\tclaims: [String]\n\t\t\tisDeleted: Boolean\n\t\t): User @auth(scope:\"user:write\")\n\n\t\tdeleteOneUser(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"user:write\")\n\n\t\tmigrateUser(\n\t\t\t_id: ID!\n\t\t): Boolean\n\t}\n\t`,\n\t// @auth((scope: 'user:write'))\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneUser: findOne('Users'),\n\t\t\tfindOneUserRaw: findOne('Users'),\n\t\t\tfindUsers: find('Users', {\n\t\t\t\ttransformQuery: async (\n\t\t\t\t\t_,\n\t\t\t\t\targs,\n\t\t\t\t\t{ search, currentHousingCooperativeId, ...query },\n\t\t\t\t\tcontext\n\t\t\t\t) => {\n\t\t\t\t\tif (!query.isDeleted) {\n\t\t\t\t\t\tquery.isDeleted = {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (search) {\n\t\t\t\t\t\tquery['$or'] = [\n\t\t\t\t\t\t\t{ name: new RegExp(search, 'gi') },\n\t\t\t\t\t\t\t{ username: new RegExp(search, 'gi') },\n\t\t\t\t\t\t\t{ email: new RegExp(search, 'gi') },\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tdelete query['$text'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentHousingCooperativeId) {\n\t\t\t\t\t\tquery.roles = {\n\t\t\t\t\t\t\t$elemMatch: {\n\t\t\t\t\t\t\t\thousingCooperativeId: {\n\t\t\t\t\t\t\t\t\t$in: ['*', currentHousingCooperativeId],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tpaginateUsers: paginate('Users'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneUser: AuthResolvers.createUser(),\n\t\t\tupdateOneUser: updateOne('Users'),\n\t\t\tdeleteOneUser: AuthResolvers.deleteUser(),\n\t\t\tmigrateUser: AuthResolvers.migrateUser(),\n\t\t},\n\t},\n};\n\nexport default UsersModule;\n","import { findOne, insertOne, updateOne } from 'server/lib/resolvers.js';\n\nconst SinglePagesModule = {\n\ttypeDefs: `\n\t\ttype SinglePage inherits Document {\n\t\t\thousingCooperativeId: ID\n\t\t\tname: String\n\t\t\tcontent: String\n\t\t\tcontentTwo: String\n\t\t\tpolicyId: String\n\t\t\thousingcooperative: String,\n\t\t\tunits: String,\n\t\t\tplotNumberOne: String,\n\t\t\tplotNumberTwo: String,\n\t\t\taddress: String,\n\t\t\tzipCode: String,\n\t\t\tbuildYear: String,\n\t\t\tbuildMaterials: String\n\t\t}\n\n\t\textend type Query {\n\t\t\tfindOneSinglePage(\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\tname: String!\n\t\t\t): SinglePage @auth(scope:\"singlePages:read\")\n\t\t}\n\n\t\textend type Mutation {\n\t\t\tinsertOneSinglePage(\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\tname: String!\n\t\t\t\tcontent: String\n\t\t\t\tcontentTwo: String\n\t\t\t\tpolicyId: String\n\t\t\t\thousingcooperative: String,\n\t\t\t\tunits: String,\n\t\t\t\tplotNumberOne: String,\n\t\t\t\tplotNumberTwo: String,\n\t\t\t\taddress: String,\n\t\t\t\tzipCode: String,\n\t\t\t\tbuildYear: String,\n\t\t\t\tbuildMaterials: String\n\t\t\t): SinglePage @auth(scope:\"singlePages:write\")\n\n\t\t\tupdateOneSinglePage(\n\t\t\t\t_id: ID!\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\tname: String!\n\t\t\t\tcontent: String\n\t\t\t\tcontentTwo: String\n\t\t\t\tpolicyId: String\n\t\t\t\thousingcooperative: String,\n\t\t\t\tunits: String,\n\t\t\t\tplotNumberOne: String,\n\t\t\t\tplotNumberTwo: String,\n\t\t\t\taddress: String,\n\t\t\t\tzipCode: String,\n\t\t\t\tbuildYear: String,\n\t\t\t\tbuildMaterials: String\n\t\t\t): SinglePage @auth(scope:\"singlePages:write\")\n\t\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneSinglePage: findOne('SinglePages'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneSinglePage: insertOne('SinglePages'),\n\t\t\tupdateOneSinglePage: updateOne('SinglePages'),\n\t\t},\n\t},\n};\n\nexport default SinglePagesModule;\n","import { findOne, insertOne, updateOne } from 'server/lib/resolvers.js';\n\nconst GeneralInfoModule = {\n\ttypeDefs: `\n\t\ttype GeneralInfo inherits Document {\n\t\t\thousingCooperativeId: ID!\n\t\t\thousingcooperative: String\n\t\t\tname: String!\n\t\t\tpolicyId: String\n\t\t\tunits: String\n\t\t\tplotNumberOne: String\n\t\t\tplotNumberTwo: String\n\t\t\taddress: String\n\t\t\tzipCode: String\n\t\t\tbuildYear: String\n\t\t\tbuildMaterials: String\n\t\t\tconclusionContent: String\n\t\t\tgeneralContent: String\n\t\t\tcostContent: String\n\t\t\tplotSize: String\n\t\t\tplotSizeBTA: String\n\t\t\tapartmentUnits: String\n\t\t\tinspectionDate: String\n\t\t\tresponsible: String\n\t\t}\n\n\t\textend type Query {\n\t\t\tfindGeneralInfo(\n\t\t\t\t_id: ID\n\t\t\t\tname: String!\n\t\t\t\thousingCooperativeId: ID\n\t\t\t\tpolicyId: String\n\t\t\t): GeneralInfo @auth(scope:\"generalInfo:read\")\n\t\t}\n\n\t\textend type Mutation {\n\t\t\tinsertGeneralInfo (\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\thousingcooperative: String\n\t\t\t\tname: String!\n\t\t\t\tpolicyId: String\n\t\t\t\tunits: String\n\t\t\t\tplotNumberOne: String\n\t\t\t\tplotNumberTwo: String\n\t\t\t\taddress: String\n\t\t\t\tzipCode: String\n\t\t\t\tbuildYear: String\n\t\t\t\tbuildMaterials: String\n\t\t\t\tconclusionContent: String\n\t\t\t\tgeneralContent: String\n\t\t\t\tcostContent: String\n\t\t\t\tplotSize: String\n\t\t\t\tplotSizeBTA: String\n\t\t\t\tapartmentUnits: String\n\t\t\t\tinspectionDate: String\n\t\t\t\tresponsible: String\n\t\t\t): GeneralInfo @auth(scope:\"generalInfo:write\")\n\n\t\t\tupdateGeneralInfo (\n\t\t\t\t_id: ID!\n\t\t\t\thousingCooperativeId: ID\n\t\t\t\thousingcooperative: String\n\t\t\t\tname: String!\n\t\t\t\tpolicyId: String\n\t\t\t\tunits: String\n\t\t\t\tplotNumberOne: String\n\t\t\t\tplotNumberTwo: String\n\t\t\t\taddress: String\n\t\t\t\tzipCode: String\n\t\t\t\tbuildYear: String\n\t\t\t\tbuildMaterials: String\n\t\t\t\tconclusionContent: String\n\t\t\t\tgeneralContent: String\n\t\t\t\tcostContent: String\n\t\t\t\tplotSize: String\n\t\t\t\tplotSizeBTA: String\n\t\t\t\tapartmentUnits: String\n\t\t\t\tinspectionDate: String\n\t\t\t\tresponsible: String\n\t\t\t): GeneralInfo @auth(scope:\"generalInfo:write\")\n\t\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindGeneralInfo: findOne('SinglePages'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertGeneralInfo: insertOne('SinglePages'),\n\t\t\tupdateGeneralInfo: updateOne('SinglePages'),\n\t\t},\n\t},\n};\n\nexport default GeneralInfoModule;\n","import draftToHtml from 'draftjs-to-html';\nimport Authmodel from 'server/lib/Auth.resolvers';\nimport uuid from 'uuid/v4';\n\nconst keyString =\n\t'u0YD64Tmr!IKsdgbubQrKM7R*00eP5k^XFauiJySmae@!2hB$k#p$eGFgTmUSZasyn9xLnUeF4NMwulZq#MJv0ziQ337T$W%!T$';\n\nconst migrateUsers = async models => {\n\tconst users = await models.Users.find({\n\t\tprofile: { $exists: true },\n\t}).toArray();\n\n\tif (!users.length) return true;\n\n\tconst { access_token } = await Authmodel.getApiToken();\n\n\tusers.map(async user => {\n\t\tlet roles = [];\n\n\t\tObject.keys(user.roles).map(key => {\n\t\t\troles.push({\n\t\t\t\thousingCooperativeId: key === '__global_roles__' ? '*' : key,\n\t\t\t\trole:\n\t\t\t\t\tuser.roles[key] &&\n\t\t\t\t\tuser.roles[key][0] &&\n\t\t\t\t\tuser.roles[key][0] === 'superAdmin'\n\t\t\t\t\t\t? 'admin'\n\t\t\t\t\t\t: user.roles[key][0]\n\t\t\t\t\t\t? user.roles[key][0]\n\t\t\t\t\t\t: 'contact',\n\t\t\t});\n\t\t});\n\n\t\tlet password = '#';\n\t\tfor (var i = 0; i < 20; i++) {\n\t\t\tpassword += keyString[Math.floor(Math.random() * 100)];\n\t\t}\n\n\t\tlet createdAt = '';\n\t\tif (user.createdAt) {\n\t\t\tcreatedAt = user.createdAt;\n\t\t}\n\n\t\tif (!user.username && user.emails && user.emails.length) {\n\t\t\tif (user.emails[0] && user.emails[0].address) {\n\t\t\t\tuser.username = user.emails[0].address;\n\t\t\t} else {\n\t\t\t\tuser.username = user._id + '-missingUsername';\n\t\t\t\tuser.email =\n\t\t\t\t\tuser.emails && user.emails.length && user.emails[0].address\n\t\t\t\t\t\t? user.emails[0].address\n\t\t\t\t\t\t: user._id + '@missingemail.com';\n\t\t\t\tuser.isDeleted = true;\n\t\t\t\tuser.notMigrated = true;\n\t\t\t\tawait models.Users.replaceOne({ _id: user._id }, newData);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tuser.username = user._id + '-missingUsername';\n\t\t}\n\n\t\tlet newData = {\n\t\t\tusername: user.username,\n\t\t\temail:\n\t\t\t\tuser.emails && user.emails.length && user.emails[0].address\n\t\t\t\t\t? user.emails[0].address\n\t\t\t\t\t: user._id + '@missingemail.com',\n\t\t\tname: user.profile ? user.profile.name : 'Mangler Navn',\n\t\t\taddress: user.profile ? user.profile.address : '',\n\t\t\tpostalNumber: user.profile ? user.profile.postalNumber : '',\n\t\t\tphone: user.profile ? user.profile.phone : '',\n\t\t\tposition: user.profile ? user.profile.position : '',\n\t\t\tnotifyPhone: user.profile ? user.profile.notifyPhone : undefined,\n\t\t\tnotifyEmail: user.profile ? user.profile.notifyEmail : undefined,\n\t\t\troles: roles,\n\t\t\tcreatedAt,\n\t\t};\n\n\t\tif (newData.email !== user._id + '@missingemail.com') {\n\t\t\tconst { user_id } = await Authmodel.createAuth0LoginAccount(\n\t\t\t\taccess_token,\n\t\t\t\tnewData.email,\n\t\t\t\tpassword\n\t\t\t);\n\n\t\t\tnewData.auth0Id = user_id;\n\t\t}\n\n\t\tawait models.Users.replaceOne({ _id: user._id }, newData);\n\n\t\treturn true;\n\t});\n};\n\nconst migrateSinglePages = async models => {\n\tconst contentPages = await models.SinglePages.find({\n\t\t'content.blocks': { $exists: true },\n\t}).toArray();\n\n\tif (contentPages.length) {\n\t\tcontentPages.map(async doc => {\n\t\t\tlet newData = {\n\t\t\t\t...doc,\n\t\t\t\tcontent: await draftToHtml(doc.content),\n\t\t\t};\n\n\t\t\tif (doc.contentTwo && doc.contentTwo.blocks) {\n\t\t\t\tnewData.contentTwo = await draftToHtml(doc.contentTwo);\n\t\t\t}\n\n\t\t\tconst result = models.SinglePages.replaceOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\tnewData\n\t\t\t);\n\t\t});\n\t}\n\n\tconst contentTwoPages = await models.SinglePages.find({\n\t\t'contentTwo.blocks': { $exists: true },\n\t}).toArray();\n\n\tif (contentTwoPages.length) {\n\t\tcontentTwoPages.map(async doc => {\n\t\t\tlet newData = {\n\t\t\t\t...doc,\n\t\t\t\tcontent: await draftToHtml(doc.content),\n\t\t\t};\n\n\t\t\tif (doc.contentTwo) {\n\t\t\t\tnewData.contentTwo = await draftToHtml(doc.contentTwo);\n\t\t\t}\n\n\t\t\tconst result = models.SinglePages.replaceOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\tnewData\n\t\t\t);\n\t\t});\n\t}\n\n\tconst infoPages = await models.SinglePages.find({\n\t\t'content.policyId': { $exists: true },\n\t}).toArray();\n\n\tif (!infoPages.length) return true;\n\n\tinfoPages.map(async doc => {\n\t\tlet newData = {\n\t\t\t...doc,\n\t\t\t...doc.content,\n\t\t};\n\n\t\tdelete newData.content;\n\n\t\tconst result = models.SinglePages.replaceOne({ _id: doc._id }, newData);\n\t});\n\n\treturn true;\n};\n\nconst migrateActivities = async models => {\n\tconsole.log('migrating activities');\n\n\tconst activities = await models.Activities.find({\n\t\ttype: 'change',\n\t\tisMigrated: { $ne: true },\n\t}).toArray();\n\n\tif (activities.length === 0) {\n\t\treturn true;\n\t}\n\n\tawait Promise.all(\n\t\tactivities.map(async doc => {\n\t\t\tlet newData = { ...doc };\n\n\t\t\tnewData.diff = [];\n\t\t\tnewData.isMigrated = true;\n\n\t\t\tif (doc.diff && Object.keys(doc.diff).length) {\n\t\t\t\tObject.keys(doc.diff).forEach(key => {\n\t\t\t\t\tnewData.diff.push({\n\t\t\t\t\t\tfrom:\n\t\t\t\t\t\t\ttypeof doc.diff[key][0] === 'object'\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: doc.diff[key][0],\n\t\t\t\t\t\tto:\n\t\t\t\t\t\t\ttypeof doc.diff[key][1] === 'object'\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: doc.diff[key][1],\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst result = await models.Activities.replaceOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\tnewData\n\t\t\t);\n\t\t})\n\t);\n\n\treturn true;\n};\n\nconst migrateBuildingData = async models => {\n\tconst buildingData = await models.BuildingData.find({\n\t\tbuilding: {\n\t\t\t$exists: true,\n\t\t},\n\t}).toArray();\n\n\tif (buildingData.length === 0) {\n\t\treturn true;\n\t}\n\n\tbuildingData.map(doc => {\n\t\tlet newData = { ...doc };\n\n\t\tdelete newData.building;\n\t\tdelete newData.count;\n\n\t\tnewData.category = doc.building;\n\t\tnewData.amount = doc.count;\n\n\t\tconst result = models.BuildingData.replaceOne(\n\t\t\t{ _id: doc._id },\n\t\t\tnewData\n\t\t);\n\t});\n\n\treturn true;\n};\n\nconst migrateCategories = async models => {\n\tlet categories = await models.Categories.find({\n\t\tparentId: { $exists: false },\n\t\tisDeleted: { $ne: true },\n\t\tchildren: { $exists: false },\n\t}).toArray();\n\n\tif (categories.length === 0) {\n\t\treturn true;\n\t}\n\n\tlet updatedCategories = [];\n\n\tfor (let index = 0; index < categories.length; index++) {\n\t\tlet category = categories[index];\n\t\tcategory.children = [];\n\t\tcategory.lifeSpans = [];\n\n\t\tcategory.lifeSpans = await models.Categories.find({\n\t\t\tparentId: category._id,\n\t\t\tisDeleted: { $ne: true },\n\t\t\ttype: 'lifespan',\n\t\t}).toArray();\n\n\t\tcategory.children = await models.Categories.find({\n\t\t\tparentId: category._id,\n\t\t\tisDeleted: { $ne: true },\n\t\t\ttype: { $exists: false },\n\t\t}).toArray();\n\n\t\tupdatedCategories.push(category);\n\t}\n\n\tawait models.Categories.deleteMany({});\n\n\tupdatedCategories.map(async doc => {\n\t\tawait models.Categories.insertOne({ ...doc });\n\t});\n};\n\nconst migrateAssessments = async models => {\n\tlet assessments = await models.Assessments.find({\n\t\tisDeleted: {\n\t\t\t$ne: true,\n\t\t},\n\t\tcategoryId: {\n\t\t\t$exists: false,\n\t\t},\n\t}).toArray();\n\n\tif (assessments.length === 0) {\n\t\treturn true;\n\t}\n\n\tawait assessments.forEach(async assessment => {\n\t\tlet query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tname: assessment.objectType,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'children.name': assessment.objectType,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tif (assessment.lifespan && assessment.lifespan.length) {\n\t\t\tquery.$or.push({\n\t\t\t\t'lifeSpans.name': assessment.lifespan[0].name,\n\t\t\t});\n\t\t}\n\t\tif (assessment.groupOrder) {\n\t\t\tquery.$or.push({\n\t\t\t\torder: assessment.groupOrder,\n\t\t\t});\n\t\t}\n\n\t\tconst category = await models.Categories.findOne(query);\n\n\t\tif (category) {\n\t\t\tassessment.categoryId = category._id;\n\t\t\tconst result = await models.Assessments.replaceOne(\n\t\t\t\t{ _id: assessment._id },\n\t\t\t\tassessment\n\t\t\t);\n\t\t}\n\t});\n\n\treturn true;\n};\n\nconst migrateAddresses = async models => {\n\tlet assessments = await models.Assessments.find({\n\t\tisDeleted: {\n\t\t\t$ne: true,\n\t\t},\n\t\tisCompleted: {\n\t\t\t$ne: true,\n\t\t},\n\t\taddress: { $exists: true, $not: { $size: 0 } },\n\t}).toArray();\n\n\tif (assessments.length === 0) {\n\t\treturn true;\n\t}\n\n\tlet uniqueAddresses = [];\n\n\tawait Promise.all(\n\t\tassessments.map(async assessment => {\n\t\t\tconst matchingAddress = uniqueAddresses.find(\n\t\t\t\taddress => address.name === assessment.address\n\t\t\t);\n\n\t\t\tlet address = {\n\t\t\t\t_id: '',\n\t\t\t\tname: '',\n\t\t\t\thousingCooperativeId: '',\n\t\t\t};\n\n\t\t\tif (matchingAddress) {\n\t\t\t\taddress = matchingAddress;\n\t\t\t} else {\n\t\t\t\taddress = {\n\t\t\t\t\t_id: uuid(),\n\t\t\t\t\tname: assessment.address,\n\t\t\t\t\thousingCooperativeId: assessment.housingCooperativeId,\n\t\t\t\t};\n\n\t\t\t\tuniqueAddresses.push(address);\n\n\t\t\t\tawait models.Addresses.insertOne({ ...address });\n\t\t\t}\n\n\t\t\tawait models.Assessments.updateOne(\n\t\t\t\t{ _id: assessment._id },\n\t\t\t\t{ $set: { address: address._id } }\n\t\t\t);\n\t\t})\n\t);\n\n\treturn true;\n};\n\nconst migrateAssessmentDates = async models => {\n\tlet assessments = await models.Assessments.find({\n\t\tisDeleted: {\n\t\t\t$ne: true,\n\t\t},\n\t\tdueDate: { $exists: true },\n\t}).toArray();\n\n\tif (assessments.length === 0) {\n\t\treturn true;\n\t}\n\n\tawait Promise.all(\n\t\tassessments.map(async assessment => {\n\t\t\tconst updated = {};\n\t\t\tif (assessment.createdAt) {\n\t\t\t\tupdated.createdAt = models\n\t\t\t\t\t.moment(assessment.createdAt)\n\t\t\t\t\t.toDate();\n\t\t\t}\n\t\t\tif (assessment.dueDate) {\n\t\t\t\tupdated.dueDate = models.moment(assessment.dueDate).toDate();\n\t\t\t}\n\n\t\t\tawait models.Assessments.updateOne(\n\t\t\t\t{ _id: assessment._id },\n\t\t\t\t{\n\t\t\t\t\t$set: updated,\n\t\t\t\t}\n\t\t\t);\n\t\t})\n\t);\n\n\treturn true;\n};\n\nexport {\n\tmigrateUsers,\n\tmigrateSinglePages,\n\tmigrateActivities,\n\tmigrateBuildingData,\n\tmigrateCategories,\n\tmigrateAssessments,\n\tmigrateAddresses,\n\tmigrateAssessmentDates,\n};\n","import {\n\tfindOne,\n\tfind,\n\tinsertOne,\n\tdeleteOne,\n\tupdateOne,\n} from 'server/lib/resolvers.js';\nimport {\n\tmigrateUsers,\n\tmigrateSinglePages,\n\tmigrateActivities,\n\tmigrateBuildingData,\n\tmigrateCategories,\n\tmigrateAssessments,\n\tmigrateAddresses,\n\tmigrateAssessmentDates,\n} from 'server/lib/migrations';\n\nconst SettingsModule = {\n\ttypeDefs: `\n\ttype Setting inherits Document {\n\t\tname: String\n\t\tvalue: String\n\t\tisComplete: Boolean\n\t\tlogoId: ID\n\t\tlogoURL: String\n\t\tsystemName: String\n\t}\n\n\textend type Query {\n\t\tfindOneSetting(\n\t\t\t_id: ID\n\t\t\tname: String\n\t\t): Setting @auth(scope:\"settings:read\")\n\n\t\tfindSettings(\n\t\t\tskip: Int\n\t\t\tlimit: Int\n\t\t\tsearch: String\n\t\t\torder: Int\n\t\t\torderBy: String\n\t\t): Find<Setting> @auth(scope:\"settings:read\")\n\t}\n\n\textend type Mutation {\n\t\tinsertOneSetting(\n\t\t\tname: String\n\t\t\tisComplete: Boolean\n\t\t\tvalue: String\n\t\t\tlogoId: ID\n\t\t\tlogoURL: String\n\t\t\tsystemName: String\n\t\t): Setting @auth(scope:\"settings:write\")\n\t\t\t\n\t\tupdateOneSetting(\n\t\t\t_id: ID!\n\t\t\tname: String\n\t\t\tisComplete: Boolean\n\t\t\tvalue: String\n\t\t\tlogoId: ID\n\t\t\tlogoURL: String\n\t\t\tsystemName: String\n\t\t): Setting @auth(scope:\"settings:write\")\n\n\t\tdeleteOneSetting(\n\t\t\t_id: ID!\n\t\t): Boolean @auth(scope:\"settings:write\")\n\n\t\tmigrateData(\n\t\t\tname: String!\n\t\t): Boolean @auth(scope:\"settings:write\")\n\t}\n\t\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneSetting: findOne('Settings'),\n\t\t\tfindSettings: find('Settings'),\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneSetting: insertOne('Settings'),\n\t\t\tupdateOneSetting: updateOne('Settings'),\n\t\t\tdeleteOneSetting: deleteOne('Settings'),\n\t\t\tmigrateData: async (_, { name }, context, model) => {\n\t\t\t\tif (!name) return false;\n\n\t\t\t\tlet setting = await context.Settings.findOne({\n\t\t\t\t\tname,\n\t\t\t\t});\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\tsetting = {\n\t\t\t\t\t\t_id: context.uuid(),\n\t\t\t\t\t\tcreatedBy: context.user._id,\n\t\t\t\t\t\tcreatedAt: new Date(),\n\t\t\t\t\t\tname,\n\t\t\t\t\t};\n\n\t\t\t\t\tawait context.Settings.insertOne(setting);\n\t\t\t\t}\n\n\t\t\t\tif (setting.isComplete) return false;\n\n\t\t\t\tlet migrated = false;\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'users':\n\t\t\t\t\t\tawait migrateUsers(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'singlePages':\n\t\t\t\t\t\tawait migrateSinglePages(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'activities':\n\t\t\t\t\t\tawait migrateActivities(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'buildingData':\n\t\t\t\t\t\tawait migrateBuildingData(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'categories':\n\t\t\t\t\t\tawait migrateCategories(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'assessments':\n\t\t\t\t\t\tawait migrateAssessments(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'addresses':\n\t\t\t\t\t\tawait migrateAddresses(context);\n\t\t\t\t\t\tmigrated = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'assessmentDates':\n\t\t\t\t\t\tmigrated = await migrateAssessmentDates(context);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (migrated) {\n\t\t\t\t\tsetting.isComplete = true;\n\t\t\t\t\tawait context.Settings.replaceOne(\n\t\t\t\t\t\t{ _id: setting._id },\n\t\t\t\t\t\tsetting\n\t\t\t\t\t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport default SettingsModule;\n","import {\n\tfindOne,\n\tinsertOne,\n\tupdateOne,\n\tdeleteOne,\n} from 'server/lib/resolvers.js';\n\nconst AddressesModule = {\n\ttypeDefs: `\n\t\ttype Address inherits Document {\n\t\t\thousingCooperativeId: ID!\n\t\t\tname: String!\n\t\t}\n\n\t\textend type Query {\n\t\t\tfindOneAddress(\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\tname: String!\n\t\t\t): Address @auth(scope:\"addresses:read\")\n\n\t\t\tfindAddressesByHousingCooperativeId(\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t): [Address] @auth(scope:\"addresses:read\")\n\t\t}\n\n\t\textend type Mutation {\n\t\t\tinsertOneAddress(\n\t\t\t\thousingCooperativeId: ID!\n\t\t\t\tname: String!\n\t\t\t): Address @auth(scope:\"addresses:write\")\n\n\t\t\tupdateOneAddress(\n\t\t\t\t_id: ID!\n\t\t\t\tname: String!\n\t\t\t): Address @auth(scope:\"addresses:write\")\n\n\t\t\tduplicateAddress(\n\t\t\t\tfromAddress: ID!\n\t\t\t\ttoAddress: ID!\n\t\t\t): Boolean @auth(scope:\"addresses:write\")\n\n\t\t\tdeleteOneAddress(\n\t\t\t\t_id: ID!\n\t\t\t): Boolean @auth(scope:\"addresses:write\")\n\t\t}\n\t`,\n\tresolvers: {\n\t\tQuery: {\n\t\t\tfindOneAddress: findOne('Addresses'),\n\t\t\tfindAddressesByHousingCooperativeId: async (\n\t\t\t\t_,\n\t\t\t\t{ housingCooperativeId },\n\t\t\t\tcontext\n\t\t\t) => {\n\t\t\t\tconst { Addresses } = context;\n\n\t\t\t\treturn await Addresses.find({\n\t\t\t\t\thousingCooperativeId,\n\t\t\t\t\tisDeleted: { $ne: true },\n\t\t\t\t})\n\t\t\t\t\t.sort({ name: 1 })\n\t\t\t\t\t.toArray();\n\t\t\t},\n\t\t},\n\t\tMutation: {\n\t\t\tinsertOneAddress: insertOne('Addresses'),\n\t\t\tupdateOneAddress: updateOne('Addresses'),\n\t\t\tdeleteOneAddress: deleteOne('Addresses'),\n\t\t\tduplicateAddress: async (\n\t\t\t\t_,\n\t\t\t\t{ fromAddress, toAddress, ...query },\n\t\t\t\tcontext\n\t\t\t) => {\n\t\t\t\tconst { Assessments } = context;\n\n\t\t\t\tif (!query.isDeleted) {\n\t\t\t\t\tquery.isDeleted = {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tquery.address = fromAddress;\n\n\t\t\t\tconst projection = {\n\t\t\t\t\tname: 1,\n\t\t\t\t\tdescription: 1,\n\t\t\t\t\tmeasure: 1,\n\t\t\t\t\tcost: 1,\n\t\t\t\t\tunitAmount: 1,\n\t\t\t\t\tdimensions: 1,\n\t\t\t\t\tobjectType: 1,\n\t\t\t\t\thousingCooperativeId: 1,\n\t\t\t\t\tlifespan: 1,\n\t\t\t\t\tcategoryId: 1,\n\t\t\t\t\tcategory: 1,\n\t\t\t\t\tgroupKey: 1,\n\t\t\t\t\tgroupOrder: 1,\n\t\t\t\t\tisActive: 1,\n\t\t\t\t\tisCompleted: 1,\n\t\t\t\t\tdueDate: 1,\n\t\t\t\t\tproductionYear: 1,\n\t\t\t\t\tlastMaintained: 1,\n\t\t\t\t};\n\n\t\t\t\tconst assessments = await Assessments.find(query)\n\t\t\t\t\t.project(projection)\n\t\t\t\t\t.toArray();\n\n\t\t\t\tif (!assessments) return false;\n\n\t\t\t\tassessments.map(assessment => {\n\t\t\t\t\tassessment.createdAt = new Date();\n\t\t\t\t\tassessment.isDeleted = false;\n\t\t\t\t\tassessment._id = context.uuid();\n\t\t\t\t\tassessment.address = toAddress;\n\t\t\t\t\tassessment.stateLevel = 'tgiu';\n\t\t\t\t\tif (context.user) {\n\t\t\t\t\t\tassessment.createdBy = context.user._id;\n\t\t\t\t\t\tassessment.createdByDisplayName = context.user.name;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn assessment;\n\t\t\t\t});\n\n\t\t\t\tawait Assessments.insertMany(assessments);\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport default AddressesModule;\n","const { transpileSchema } = require('graphql-s2s').graphqls2s;\nimport { makeExecutableSchema } from 'graphql-tools';\nimport { GraphQLScalarType } from 'graphql';\nimport JSONScalar from 'graphql-type-json';\nimport merge from 'lodash/merge';\n\nimport { AccessDirective as auth } from 'server/lib/Directives';\n\nimport ActivitiesModule from './Activities.module';\nimport AssessmentsModule from './Assessments.module';\nimport BuildingDataModule from './BuildingData.module';\nimport CategoriesModule from './Categories.module';\nimport FilesModule from './Files.module';\nimport HelpVideosModule from './HelpVideos.module';\nimport HousingCooperativesModule from './HousingCooperatives.module';\nimport UsersModule from './Users.module';\nimport SinglePagesModule from './SinglePages.module';\nimport GeneralInfoModule from './GeneralInfo.module';\nimport SettingsModule from './Settings.module';\nimport AddressesModule from './Addresses.module';\n\nconst API_VERSION = '0.0.1';\n\nconst DateTime = new GraphQLScalarType({\n\tname: 'DateTime',\n\tdescription: 'Resolves to javascript date object',\n\tserialize(value) {\n\t\treturn (value && new Date(value)) || null;\n\t},\n\tparseValue(value) {\n\t\treturn new Date(value);\n\t},\n\tparseLiteral(ast) {\n\t\treturn new Date(ast.value);\n\t},\n});\n\nconst baseTypeDefs = `\n\tdirective @auth(scope: String) on OBJECT | FIELD_DEFINITION\n\n\tscalar JSON\n\tscalar DateTime\n\n\ttype Find<T> {\n\t\titems: [T]\n\t\tcount: Int\n\t}\n\n\ttype Paginate<T> {\n\t\titems: [T]\n\t\tcount: Int\n\t}\n\n\ttype Document {\n\t\t_id: ID!\n\t\tcreatedAt: DateTime\n\t\tupdatedAt: DateTime\n\t\tcreatedBy: ID\n\t\tupdatedBy: ID\n\t\tcreatedByDisplayName: String\n\t\tupdatedByDisplayName: String\n\t\tisDeleted: Boolean\n\t}\n\n\ttype Query {\n\t\tapiVersion: String!\n\t}\n\n\ttype Mutation {\n\t\tcheckTime: String!\n\t}\n`;\n\nconst baseResolvers = {\n\tQuery: {\n\t\tapiVersion: (_, args, context) => {\n\t\t\treturn API_VERSION;\n\t\t},\n\t},\n\tMutation: {\n\t\tcheckTime: () => new Date(),\n\t},\n};\n\nconst schema = makeExecutableSchema({\n\ttypeDefs: transpileSchema(\n\t\tbaseTypeDefs +\n\t\t\tActivitiesModule.typeDefs +\n\t\t\tAssessmentsModule.typeDefs +\n\t\t\tBuildingDataModule.typeDefs +\n\t\t\tCategoriesModule.typeDefs +\n\t\t\tFilesModule.typeDefs +\n\t\t\tHelpVideosModule.typeDefs +\n\t\t\tHousingCooperativesModule.typeDefs +\n\t\t\tUsersModule.typeDefs +\n\t\t\tSinglePagesModule.typeDefs +\n\t\t\tGeneralInfoModule.typeDefs +\n\t\t\tSettingsModule.typeDefs +\n\t\t\tAddressesModule.typeDefs +\n\t\t\t''\n\t),\n\tresolvers: merge(\n\t\tbaseResolvers,\n\t\tActivitiesModule.resolvers,\n\t\tAssessmentsModule.resolvers,\n\t\tBuildingDataModule.resolvers,\n\t\tCategoriesModule.resolvers,\n\t\tFilesModule.resolvers,\n\t\tHelpVideosModule.resolvers,\n\t\tHousingCooperativesModule.resolvers,\n\t\tUsersModule.resolvers,\n\t\tSinglePagesModule.resolvers,\n\t\tGeneralInfoModule.resolvers,\n\t\tSettingsModule.resolvers,\n\t\tAddressesModule.resolvers,\n\t\t{\n\t\t\tJSON: JSONScalar,\n\t\t\tDateTime,\n\t\t}\n\t),\n\tschemaDirectives: {\n\t\tauth,\n\t},\n});\n\nexport default schema;\n","import AWS from 'aws-sdk';\n\nAWS.config.update({ region: process.env.AWS_REGION });\n\nexport default AWS\n","const MongoClient = require('mongodb').MongoClient;\n// import redis from 'async-redis';\n\nconst DATABASE_URL = process.env.MONGODB_URL;\nconst HOUSING_COOPERATIVES_DB_URL =\n\tprocess.env.SYSTEM_HOUSING_COOPERATIVES_DB_URL || process.env.MONGODB_URL;\nconst HELP_VIDEOS_DB_URL = process.env.SYSTEM_IS_MAIN\n\t? process.env.MONGODB_URL\n\t: process.env.SYSTEM_HELP_VIDEOS_DB_URL;\n\nconst connectMongoDB = async url => {\n\tconst client = await MongoClient.connect(url, {\n\t\tuseNewUrlParser: true,\n\t\tuseUnifiedTopology: true,\n\t});\n\n\treturn client.db();\n};\n\nconst setupModels = async () => {\n\tconst db = await connectMongoDB(DATABASE_URL);\n\tconst houseDB = await connectMongoDB(HOUSING_COOPERATIVES_DB_URL);\n\tconst videoDB = await connectMongoDB(HELP_VIDEOS_DB_URL);\n\n\t// const Redis = redis.createClient({ url: process.env.REDIS_URL });\n\n\treturn {\n\t\t// redis: Redis,\n\t\tActivities: db.collection('activities'),\n\t\tAssessments: db.collection('assessments'),\n\t\tAddresses: db.collection('addresses'),\n\t\tBuildingData: db.collection('buildingData'),\n\t\tCategories: db.collection('categories'),\n\t\tFiles: db.collection('files'),\n\t\tHelpVideos: videoDB.collection('helpVideos'),\n\t\tHousingCooperatives: houseDB.collection('housingCooperatives'),\n\t\tSettings: db.collection('settings'),\n\t\tSinglePages: db.collection('singlePages'),\n\t\tUsers: db.collection('users'),\n\t};\n};\n\nexport default setupModels;\n","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\n\nimport AWS from './aws.js';\nimport setupModels from './models.js';\n\nasync function setupContext() {\n\tconst models = await setupModels();\n\n\treturn {\n\t\tuuid: uuid,\n\t\tS3: new AWS.S3(),\n\t\tmoment,\n\t\tAWS,\n\t\t...models,\n\t};\n}\n\nexport default setupContext;\n","import '@babel/polyfill';\n\nimport path from 'path';\nimport express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport { ApolloServer } from 'apollo-server-express';\n\nimport { validate, getUser } from 'server/lib/token';\nimport schema from 'server/schema/index.js';\nimport setupContext from 'server/context/index.js';\n// import cacheWrap from 'server/lib/cacheWrap.js';\n\nconst PORT = process.env.SERVER_PORT || process.env.PORT || 4000;\n\nasync function StartServer() {\n\tconst context = await setupContext();\n\tconst app = express();\n\n\tapp.use(cors());\n\tapp.use(bodyParser.json());\n\tapp.use(bodyParser.urlencoded({ extended: false }));\n\n\tconst server = new ApolloServer({\n\t\tschema,\n\t\tintrospection: true,\n\t\tplayground: true,\n\t\tformatError: error => {\n\t\t\tError.captureStackTrace(error);\n\n\t\t\tconsole.error(error);\n\n\t\t\treturn error;\n\t\t},\n\t\tcontext: async ({ req }) => {\n\t\t\tlet user;\n\n\t\t\tif (req.headers.authorization) {\n\t\t\t\ttry {\n\t\t\t\t\tconst token = req.headers.authorization;\n\t\t\t\t\tconst claims = await validate(token);\n\t\t\t\t\tuser = await getUser(claims.sub, context);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...context,\n\t\t\t\tuser: user,\n\t\t\t};\n\t\t},\n\t});\n\n\tserver.applyMiddleware({ app });\n\n\tapp.use('/', express.static('dist/web'));\n\n\tfunction noCache(req, res, next) {\n\t\tres.header(\n\t\t\t'Cache-Control',\n\t\t\t'private, no-cache, no-store, must-revalidate'\n\t\t);\n\t\tres.header('Expires', '-1');\n\t\tres.header('Pragma', 'no-cache');\n\t\tnext();\n\t}\n\n\tapp.get('/env.js', noCache, async (req, res) => {\n\t\tlet safeEnv = {};\n\n\t\tObject.keys(process.env).forEach(key => {\n\t\t\tif (key.indexOf('REACT_APP') !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsafeEnv[key] = process.env[key];\n\t\t});\n\n\t\tres.send(`\n\t\t\twindow.env = ${JSON.stringify(safeEnv)};\n\t\t`);\n\t});\n\n\tapp.get('*', (req, res) => {\n\t\tres.sendFile(path.resolve('dist/web', 'index.html'));\n\t});\n\n\treturn await new Promise(resolve => app.listen(PORT, () => resolve(app)));\n}\n\nStartServer().then(app => {\n\tconsole.log(`Server started at http://localhost:${PORT}`);\n\tconsole.log(`GraphQL           http://localhost:${PORT}/graphql`);\n});\n"],"sourceRoot":""}